{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\vanma\\\\StudioProjects\\\\ToneShift\\\\toneshift-frontend\\\\screens\\\\conversation\\\\ConversationListScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Card, FAB, ActivityIndicator, TextInput } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { conversationApi } from '../../utils/api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTheme } from '../../utils/ThemeContext';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ConversationListScreen = function ConversationListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var colors = theme.colors,\n    spacing = theme.spacing,\n    fonts = theme.fonts,\n    shadows = theme.shadows,\n    borderRadius = theme.borderRadius;\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: colors.background\n    },\n    centered: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: spacing.l\n    },\n    searchContainer: {\n      margin: spacing.m\n    },\n    searchBar: _objectSpread({\n      backgroundColor: colors.surface,\n      borderRadius: borderRadius.large,\n      height: 50\n    }, shadows.small),\n    listContent: {\n      padding: spacing.m,\n      paddingBottom: spacing.xxxl\n    },\n    card: _objectSpread(_objectSpread({\n      marginBottom: spacing.m,\n      backgroundColor: colors.card,\n      borderRadius: borderRadius.large,\n      overflow: 'hidden'\n    }, shadows.medium), {}, {\n      borderWidth: 1,\n      borderColor: colors.border\n    }),\n    conversationTitle: _objectSpread(_objectSpread({}, fonts.semiBold), {}, {\n      fontSize: fonts.sizes.large,\n      marginBottom: spacing.xs,\n      color: colors.text\n    }),\n    lastMessage: _objectSpread(_objectSpread({}, fonts.regular), {}, {\n      color: colors.textSecondary,\n      marginBottom: spacing.s,\n      lineHeight: 20\n    }),\n    timestamp: _objectSpread(_objectSpread({}, fonts.medium), {}, {\n      color: colors.textSecondary,\n      fontSize: fonts.sizes.xs,\n      alignSelf: 'flex-end'\n    }),\n    errorText: {\n      color: colors.error,\n      textAlign: 'center',\n      marginBottom: spacing.m\n    },\n    retryButton: {\n      padding: spacing.m,\n      backgroundColor: colors.primary,\n      borderRadius: borderRadius.medium\n    },\n    retryText: _objectSpread({\n      color: '#fff'\n    }, fonts.medium),\n    emptyContainer: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: spacing.l\n    },\n    emptyText: _objectSpread(_objectSpread({}, fonts.medium), {}, {\n      fontSize: fonts.sizes.large,\n      marginBottom: spacing.s,\n      color: colors.text\n    }),\n    emptySubtext: {\n      color: colors.textSecondary,\n      textAlign: 'center'\n    },\n    fab: _objectSpread(_objectSpread({\n      position: 'absolute',\n      margin: spacing.m,\n      right: 0,\n      bottom: 0,\n      backgroundColor: colors.primary,\n      borderRadius: borderRadius.round\n    }, shadows.large), {}, {\n      width: 60,\n      height: 60\n    })\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    conversations = _useState2[0],\n    setConversations = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    searchQuery = _useState8[0],\n    setSearchQuery = _useState8[1];\n  var _useState9 = useState([]),\n    _useState0 = _slicedToArray(_useState9, 2),\n    filteredConversations = _useState0[0],\n    setFilteredConversations = _useState0[1];\n  useEffect(function () {\n    fetchConversations();\n  }, []);\n  useEffect(function () {\n    var checkAuth = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var token = yield AsyncStorage.getItem('token');\n        console.log('Current auth token:', token ? 'Present' : 'Not found');\n      });\n      return function checkAuth() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    checkAuth();\n  }, []);\n  useEffect(function () {\n    if (conversations.length > 0) {\n      var filtered = conversations.filter(function (convo) {\n        return convo.title.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n      setFilteredConversations(filtered);\n    }\n  }, [searchQuery, conversations]);\n  var fetchConversations = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setLoading(true);\n      console.log('Fetching conversations...');\n      try {\n        var response = yield conversationApi.getAll();\n        console.log('API response:', response.data);\n        setConversations(response.data.conversations || []);\n        setFilteredConversations(response.data.conversations || []);\n        setError(null);\n      } catch (error) {\n        var _error$response;\n        console.error('Error fetching conversations:', error);\n        console.error('Error details:', ((_error$response = error.response) == null ? void 0 : _error$response.data) || error.message);\n        setError('Failed to load conversations. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchConversations() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleConversationPress = function handleConversationPress(conversation) {\n    navigation.navigate('ConversationDetail', {\n      conversationId: conversation.id,\n      title: conversation.title\n    });\n  };\n  var handleCreateConversation = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var title = \"New Conversation\";\n        var response = yield conversationApi.create({\n          title: title,\n          context: ''\n        });\n        console.log('Conversation created:', response.data);\n        yield fetchConversations();\n        if (response.data && response.data.conversation) {\n          navigation.navigate('ConversationDetail', {\n            conversationId: response.data.conversation.id,\n            title: response.data.conversation.title\n          });\n        }\n      } catch (error) {\n        console.error('Error creating conversation:', error);\n        alert('Failed to create a new conversation. Please try again.');\n      }\n    });\n    return function handleCreateConversation() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var renderConversationItem = function renderConversationItem(_ref5) {\n    var item = _ref5.item;\n    var lastMessage = item.messages && item.messages.length > 0 ? item.messages[item.messages.length - 1] : null;\n    var formattedDate = lastMessage ? new Date(lastMessage.timestamp).toLocaleDateString() : 'No messages yet';\n    return _jsxDEV(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleConversationPress(item);\n      },\n      children: _jsxDEV(Card, {\n        style: styles.card,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Text, {\n            style: styles.conversationTitle,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.lastMessage,\n            children: lastMessage ? lastMessage.content.substring(0, 60) + (lastMessage.content.length > 60 ? '...' : '') : 'No messages yet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.timestamp,\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, _this);\n  };\n  useFocusEffect(React.useCallback(function () {\n    fetchConversations();\n  }, []));\n  if (loading && conversations.length === 0) {\n    return _jsxDEV(View, {\n      style: styles.centered,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, _this);\n  }\n  if (error && conversations.length === 0) {\n    return _jsxDEV(View, {\n      style: styles.centered,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        onPress: fetchConversations,\n        style: styles.retryButton,\n        children: _jsxDEV(Text, {\n          style: styles.retryText,\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    edges: ['bottom'],\n    children: [_jsxDEV(View, {\n      style: styles.searchContainer,\n      children: _jsxDEV(TextInput, {\n        placeholder: \"Search conversations...\",\n        onChangeText: setSearchQuery,\n        value: searchQuery,\n        style: styles.searchBar,\n        left: _jsxDEV(TextInput.Icon, {\n          icon: \"magnify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, _this),\n        mode: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, _this), filteredConversations.length === 0 ? _jsxDEV(View, {\n      style: styles.emptyContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.emptyText,\n        children: \"No conversations found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, _this), _jsxDEV(Text, {\n        style: styles.emptySubtext,\n        children: searchQuery ? 'Try a different search term' : 'Create a new conversation to get started'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, _this) : _jsxDEV(FlatList, {\n      data: filteredConversations,\n      renderItem: renderConversationItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: styles.listContent,\n      refreshing: loading,\n      onRefresh: fetchConversations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, _this), _jsxDEV(FAB, {\n      style: styles.fab,\n      icon: \"plus\",\n      onPress: handleCreateConversation,\n      color: \"#fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, _this);\n};\nexport default ConversationListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","FlatList","TouchableOpacity","Text","Card","FAB","ActivityIndicator","TextInput","SafeAreaView","conversationApi","AsyncStorage","useTheme","useFocusEffect","jsxDEV","_jsxDEV","ConversationListScreen","_ref","navigation","_useTheme","theme","colors","spacing","fonts","shadows","borderRadius","styles","create","container","flex","backgroundColor","background","centered","justifyContent","alignItems","padding","l","searchContainer","margin","m","searchBar","_objectSpread","surface","large","height","small","listContent","paddingBottom","xxxl","card","marginBottom","overflow","medium","borderWidth","borderColor","border","conversationTitle","semiBold","fontSize","sizes","xs","color","text","lastMessage","regular","textSecondary","s","lineHeight","timestamp","alignSelf","errorText","error","textAlign","retryButton","primary","retryText","emptyContainer","emptyText","emptySubtext","fab","position","right","bottom","round","width","_useState","_useState2","_slicedToArray","conversations","setConversations","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","_useState7","_useState8","searchQuery","setSearchQuery","_useState9","_useState0","filteredConversations","setFilteredConversations","fetchConversations","checkAuth","_ref2","_asyncToGenerator","token","getItem","console","log","apply","arguments","length","filtered","filter","convo","title","toLowerCase","includes","_ref3","response","getAll","data","_error$response","message","handleConversationPress","conversation","navigate","conversationId","id","handleCreateConversation","_ref4","context","alert","renderConversationItem","_ref5","item","messages","formattedDate","Date","toLocaleDateString","onPress","children","style","Content","fileName","_jsxFileName","lineNumber","columnNumber","_this","content","substring","useCallback","size","edges","placeholder","onChangeText","value","left","Icon","icon","mode","renderItem","keyExtractor","contentContainerStyle","refreshing","onRefresh"],"sources":["C:/Users/vanma/StudioProjects/ToneShift/toneshift-frontend/screens/conversation/ConversationListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, FlatList, TouchableOpacity } from 'react-native';\r\nimport { Text, Card, FAB, ActivityIndicator, TextInput } from 'react-native-paper';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { conversationApi } from '../../utils/api';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '../../utils/ThemeContext';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nconst ConversationListScreen = ({ navigation }) => {\r\n  const { theme } = useTheme();\r\n  const { colors, spacing, fonts, shadows, borderRadius } = theme;\r\n  \r\n  // Move the styles definition here, before they're used in any conditionals\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: colors.background,\r\n    },\r\n    centered: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: spacing.l,\r\n    },\r\n    searchContainer: {\r\n      margin: spacing.m,\r\n    },\r\n    searchBar: {\r\n      backgroundColor: colors.surface,\r\n      borderRadius: borderRadius.large,\r\n      height: 50,\r\n      ...shadows.small,\r\n    },\r\n    listContent: {\r\n      padding: spacing.m,\r\n      paddingBottom: spacing.xxxl, // Extra padding for FAB\r\n    },\r\n    card: {\r\n      marginBottom: spacing.m,\r\n      backgroundColor: colors.card,\r\n      borderRadius: borderRadius.large,\r\n      overflow: 'hidden',\r\n      ...shadows.medium,\r\n      borderWidth: 1,\r\n      borderColor: colors.border,\r\n    },\r\n    conversationTitle: {\r\n      ...fonts.semiBold,\r\n      fontSize: fonts.sizes.large,\r\n      marginBottom: spacing.xs,\r\n      color: colors.text,\r\n    },\r\n    lastMessage: {\r\n      ...fonts.regular,\r\n      color: colors.textSecondary,\r\n      marginBottom: spacing.s,\r\n      lineHeight: 20,\r\n    },\r\n    timestamp: {\r\n      ...fonts.medium,\r\n      color: colors.textSecondary,\r\n      fontSize: fonts.sizes.xs,\r\n      alignSelf: 'flex-end',\r\n    },\r\n    errorText: {\r\n      color: colors.error,\r\n      textAlign: 'center',\r\n      marginBottom: spacing.m,\r\n    },\r\n    retryButton: {\r\n      padding: spacing.m,\r\n      backgroundColor: colors.primary,\r\n      borderRadius: borderRadius.medium,\r\n    },\r\n    retryText: {\r\n      color: '#fff',\r\n      ...fonts.medium,\r\n    },\r\n    emptyContainer: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: spacing.l,\r\n    },\r\n    emptyText: {\r\n      ...fonts.medium,\r\n      fontSize: fonts.sizes.large,\r\n      marginBottom: spacing.s,\r\n      color: colors.text,\r\n    },\r\n    emptySubtext: {\r\n      color: colors.textSecondary,\r\n      textAlign: 'center',\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      margin: spacing.m,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: colors.primary,\r\n      borderRadius: borderRadius.round,\r\n      ...shadows.large,\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  });\r\n  \r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredConversations, setFilteredConversations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n  }, []);\r\n\r\n  // Add this at the top of your component\r\n  useEffect(() => {\r\n    // Debug authentication\r\n    const checkAuth = async () => {\r\n      const token = await AsyncStorage.getItem('token');\r\n      console.log('Current auth token:', token ? 'Present' : 'Not found');\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (conversations.length > 0) {\r\n      const filtered = conversations.filter(convo => \r\n        convo.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n      setFilteredConversations(filtered);\r\n    }\r\n  }, [searchQuery, conversations]);\r\n\r\n  const fetchConversations = async () => {\r\n    setLoading(true);\r\n    console.log('Fetching conversations...');\r\n    try {\r\n      const response = await conversationApi.getAll();\r\n      console.log('API response:', response.data);\r\n      setConversations(response.data.conversations || []);\r\n      setFilteredConversations(response.data.conversations || []);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error fetching conversations:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setError('Failed to load conversations. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleConversationPress = (conversation) => {\r\n    navigation.navigate('ConversationDetail', { \r\n      conversationId: conversation.id,\r\n      title: conversation.title\r\n    });\r\n  };\r\n\r\n  const handleCreateConversation = async () => {\r\n    try {\r\n      // Create a new conversation with a default title\r\n      // You could add a modal here to let the user enter a title\r\n      const title = \"New Conversation\";\r\n      const response = await conversationApi.create({\r\n        title,\r\n        context: '', // Optional context\r\n      });\r\n      \r\n      console.log('Conversation created:', response.data);\r\n      \r\n      // Refresh the conversation list\r\n      await fetchConversations();\r\n      \r\n      // Navigate to the new conversation\r\n      if (response.data && response.data.conversation) {\r\n        navigation.navigate('ConversationDetail', {\r\n          conversationId: response.data.conversation.id,\r\n          title: response.data.conversation.title\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating conversation:', error);\r\n      // Show error to user\r\n      alert('Failed to create a new conversation. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderConversationItem = ({ item }) => {\r\n    // Get the last message if there are any\r\n    const lastMessage = item.messages && item.messages.length > 0 \r\n      ? item.messages[item.messages.length - 1] \r\n      : null;\r\n    \r\n    // Format the date\r\n    const formattedDate = lastMessage \r\n      ? new Date(lastMessage.timestamp).toLocaleDateString() \r\n      : 'No messages yet';\r\n\r\n    return (\r\n      <TouchableOpacity onPress={() => handleConversationPress(item)}>\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <Text style={styles.conversationTitle}>{item.title}</Text>\r\n            <Text style={styles.lastMessage}>\r\n              {lastMessage ? lastMessage.content.substring(0, 60) + (lastMessage.content.length > 60 ? '...' : '') : 'No messages yet'}\r\n            </Text>\r\n            <Text style={styles.timestamp}>{formattedDate}</Text>\r\n          </Card.Content>\r\n        </Card>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  // Add this effect to refresh the list when the screen comes into focus\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchConversations();\r\n    }, [])\r\n  );\r\n\r\n  if (loading && conversations.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color={colors.primary} />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error && conversations.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity onPress={fetchConversations} style={styles.retryButton}>\r\n          <Text style={styles.retryText}>Retry</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container} edges={['bottom']}>\r\n      {/* Replace the Searchbar with a custom search input */}\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          placeholder=\"Search conversations...\"\r\n          onChangeText={setSearchQuery}\r\n          value={searchQuery}\r\n          style={styles.searchBar}\r\n          left={<TextInput.Icon icon=\"magnify\" />}\r\n          mode=\"outlined\"\r\n        />\r\n      </View>\r\n      \r\n      {filteredConversations.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No conversations found</Text>\r\n          <Text style={styles.emptySubtext}>\r\n            {searchQuery ? 'Try a different search term' : 'Create a new conversation to get started'}\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={filteredConversations}\r\n          renderItem={renderConversationItem}\r\n          keyExtractor={(item) => item.id}\r\n          contentContainerStyle={styles.listContent}\r\n          refreshing={loading}\r\n          onRefresh={fetchConversations}\r\n        />\r\n      )}\r\n\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"plus\"\r\n        onPress={handleCreateConversation}\r\n        color=\"#fff\"\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ConversationListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}