{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _PixelRatio = _interopRequireDefault(require(\"react-native-web/dist/exports/PixelRatio\"));\nfunction getScaledAssetPath(asset) {\n  var scale = AssetSourceResolver.pickScale(asset.scales, _PixelRatio[\"default\"].get());\n  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  var type = !asset.type ? '' : \".\".concat(asset.type);\n  if (__DEV__) {\n    return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n  } else {\n    return asset.httpServerLocation.replace(/\\.\\.\\//g, '_') + '/' + asset.name + scaleSuffix + type;\n  }\n}\nvar AssetSourceResolver = exports[\"default\"] = function () {\n  function AssetSourceResolver(serverUrl, jsbundleUrl, asset) {\n    (0, _classCallCheck2[\"default\"])(this, AssetSourceResolver);\n    this.serverUrl = void 0;\n    this.jsbundleUrl = void 0;\n    this.asset = void 0;\n    this.serverUrl = serverUrl || 'https://expo.dev';\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n  return (0, _createClass2[\"default\"])(AssetSourceResolver, [{\n    key: \"isLoadedFromServer\",\n    value: function isLoadedFromServer() {\n      return true;\n    }\n  }, {\n    key: \"isLoadedFromFileSystem\",\n    value: function isLoadedFromFileSystem() {\n      return false;\n    }\n  }, {\n    key: \"defaultAsset\",\n    value: function defaultAsset() {\n      return this.assetServerURL();\n    }\n  }, {\n    key: \"assetServerURL\",\n    value: function assetServerURL() {\n      var fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n      fromUrl.searchParams.set('platform', _expoModulesCore.Platform.OS);\n      fromUrl.searchParams.set('hash', this.asset.hash);\n      return this.fromSource(fromUrl.toString().replace(fromUrl.origin, ''));\n    }\n  }, {\n    key: \"fromSource\",\n    value: function fromSource(source) {\n      var _this$asset$width, _this$asset$height;\n      return {\n        __packager_asset: true,\n        width: (_this$asset$width = this.asset.width) !== null && _this$asset$width !== void 0 ? _this$asset$width : undefined,\n        height: (_this$asset$height = this.asset.height) !== null && _this$asset$height !== void 0 ? _this$asset$height : undefined,\n        uri: source,\n        scale: AssetSourceResolver.pickScale(this.asset.scales, _PixelRatio[\"default\"].get())\n      };\n    }\n  }], [{\n    key: \"pickScale\",\n    value: function pickScale(scales, deviceScale) {\n      for (var i = 0; i < scales.length; i++) {\n        if (scales[i] >= deviceScale) {\n          return scales[i];\n        }\n      }\n      return scales[scales.length - 1] || 1;\n    }\n  }]);\n}();","map":{"version":3,"names":["_expoModulesCore","require","_PixelRatio","_interopRequireDefault","getScaledAssetPath","asset","scale","AssetSourceResolver","pickScale","scales","get","scaleSuffix","type","concat","__DEV__","httpServerLocation","name","replace","exports","serverUrl","jsbundleUrl","_classCallCheck2","_createClass2","key","value","isLoadedFromServer","isLoadedFromFileSystem","defaultAsset","assetServerURL","fromUrl","URL","searchParams","set","Platform","OS","hash","fromSource","toString","origin","source","_this$asset$width","_this$asset$height","__packager_asset","width","undefined","height","uri","deviceScale","i","length"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\expo-asset\\src\\AssetSourceResolver.ts"],"sourcesContent":["import type { PackagerAsset } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\nimport { PixelRatio } from 'react-native';\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\n// Returns the Metro dev server-specific asset location.\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const type = !asset.type ? '' : `.${asset.type}`;\n  if (__DEV__) {\n    return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n  } else {\n    return asset.httpServerLocation.replace(/\\.\\.\\//g, '_') + '/' + asset.name + scaleSuffix + type;\n  }\n}\n\nexport default class AssetSourceResolver {\n  serverUrl: string;\n  // where the jsbundle is being run from\n  // NOTE(EvanBacon): Never defined on web.\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl || 'https://expo.dev';\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n\n  // Always true for web runtimes\n  isLoadedFromServer(): boolean {\n    return true;\n  }\n\n  // Always false for web runtimes\n  isLoadedFromFileSystem(): boolean {\n    return false;\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    return this.assetServerURL();\n  }\n\n  /**\n   * @returns absolute remote URL for the hosted asset.\n   */\n  assetServerURL(): ResolvedAssetSource {\n    const fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n    fromUrl.searchParams.set('platform', Platform.OS);\n    fromUrl.searchParams.set('hash', this.asset.hash);\n    return this.fromSource(\n      // Relative on web\n      fromUrl.toString().replace(fromUrl.origin, '')\n    );\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width ?? undefined,\n      height: this.asset.height ?? undefined,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}