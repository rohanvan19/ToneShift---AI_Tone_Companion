{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StackActions = void 0;\nexports[\"default\"] = StackRouter;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _BaseRouter = _interopRequireDefault(require(\"./BaseRouter\"));\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar StackActions = exports.StackActions = {\n  replace: function replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  push: function push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  pop: function pop() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count: count\n      }\n    };\n  },\n  popToTop: function popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nfunction StackRouter(options) {\n  var router = _objectSpread(_objectSpread({}, _BaseRouter[\"default\"]), {}, {\n    type: 'stack',\n    getInitialState: function getInitialState(_ref) {\n      var routeNames = _ref.routeNames,\n        routeParamList = _ref.routeParamList;\n      var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\".concat((0, _nonSecure.nanoid)()),\n        index: 0,\n        routeNames: routeNames,\n        routes: [{\n          key: \"\".concat(initialRouteName, \"-\").concat((0, _nonSecure.nanoid)()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList;\n      var state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      }).map(function (route) {\n        return _objectSpread(_objectSpread({}, route), {}, {\n          key: route.key || \"\".concat(route.name, \"-\").concat((0, _nonSecure.nanoid)()),\n          params: routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), route.params) : route.params\n        });\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: \"\".concat(initialRouteName, \"-\").concat((0, _nonSecure.nanoid)()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\".concat((0, _nonSecure.nanoid)()),\n        index: routes.length - 1,\n        routeNames: routeNames,\n        routes: routes\n      };\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList,\n        routeKeyChanges = _ref3.routeKeyChanges;\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name) && !routeKeyChanges.includes(route.name);\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: \"\".concat(initialRouteName, \"-\").concat((0, _nonSecure.nanoid)()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        routeNames: routeNames,\n        routes: routes,\n        index: Math.min(state.index, routes.length - 1)\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        index: index,\n        routes: state.routes.slice(0, index + 1)\n      });\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      var routeParamList = options.routeParamList;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            var _action$payload = action.payload,\n              name = _action$payload.name,\n              key = _action$payload.key,\n              params = _action$payload.params;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              routes: state.routes.map(function (route, i) {\n                return i === index ? {\n                  key: key !== undefined ? key : \"\".concat(name, \"-\").concat((0, _nonSecure.nanoid)()),\n                  name: name,\n                  params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), params) : params\n                } : route;\n              })\n            });\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            var getId = options.routeGetIdList[action.payload.name];\n            var id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            var route = id ? state.routes.find(function (route) {\n              return route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              }));\n            }) : undefined;\n            var routes;\n            if (route) {\n              routes = state.routes.filter(function (r) {\n                return r.key !== route.key;\n              });\n              routes.push(_objectSpread(_objectSpread({}, route), {}, {\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }));\n            } else {\n              routes = [].concat((0, _toConsumableArray2[\"default\"])(state.routes), [{\n                key: \"\".concat(action.payload.name, \"-\").concat((0, _nonSecure.nanoid)()),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: routes.length - 1,\n              routes: routes\n            });\n          }\n          return null;\n        case 'POP':\n          {\n            var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (_index > 0) {\n              var count = Math.max(_index - action.payload.count + 1, 1);\n              var _routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: _routes.length - 1,\n                routes: _routes\n              });\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            var _action$payload$path;\n            var _index2 = -1;\n            var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            var _id = _getId === null || _getId === void 0 ? void 0 : _getId({\n              params: action.payload.params\n            });\n            if (_id) {\n              _index2 = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name && _id === (_getId === null || _getId === void 0 ? void 0 : _getId({\n                  params: route.params\n                }));\n              });\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              _index2 = state.index;\n            } else {\n              for (var i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  _index2 = i;\n                  break;\n                }\n              }\n            }\n            if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (_index2 === -1 && action.payload.name !== undefined) {\n              var _action$payload$key;\n              var _routes2 = [].concat((0, _toConsumableArray2[\"default\"])(state.routes), [{\n                key: (_action$payload$key = action.payload.key) !== null && _action$payload$key !== void 0 ? _action$payload$key : \"\".concat(action.payload.name, \"-\").concat((0, _nonSecure.nanoid)()),\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n              return _objectSpread(_objectSpread({}, state), {}, {\n                routes: _routes2,\n                index: _routes2.length - 1\n              });\n            }\n            var _route = state.routes[_index2];\n            var _params;\n            if (action.payload.merge) {\n              _params = action.payload.params !== undefined || routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread(_objectSpread({}, routeParamList[_route.name]), _route.params), action.payload.params) : _route.params;\n            } else {\n              _params = routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[_route.name]), action.payload.params) : action.payload.params;\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: _index2,\n              routes: [].concat((0, _toConsumableArray2[\"default\"])(state.routes.slice(0, _index2)), [_params !== _route.params || action.payload.path && action.payload.path !== _route.path ? _objectSpread(_objectSpread({}, _route), {}, {\n                path: (_action$payload$path = action.payload.path) !== null && _action$payload$path !== void 0 ? _action$payload$path : _route.path,\n                params: _params\n              }) : state.routes[_index2]])\n            });\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return _BaseRouter[\"default\"].getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  });\n  return router;\n}","map":{"version":3,"names":["_nonSecure","require","_BaseRouter","_interopRequireDefault","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","StackActions","exports","replace","name","params","type","payload","pop","count","undefined","popToTop","StackRouter","options","router","getInitialState","_ref","routeNames","routeParamList","initialRouteName","includes","stale","key","concat","nanoid","index","routes","getRehydratedState","partialState","_ref2","state","route","map","getStateForRouteNamesChange","_ref3","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","slice","getStateForAction","action","target","source","_action$payload","i","getId","routeGetIdList","id","find","_toConsumableArray2","_index","max","_routes","_action$payload$path","_index2","_getId","_id","_action$payload$key","_routes2","path","_route","_params","merge","actionCreators"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\@react-navigation\\routers\\src\\StackRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}