{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = BottomTabBar;\nexports.getTabBarHeight = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../utils/useIsKeyboardShown\"));\nvar _BottomTabItem = _interopRequireDefault(require(\"./BottomTabItem\"));\nvar _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = _Platform[\"default\"].OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions;\n  var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    var maxTabWidth = state.routes.reduce(function (acc, route) {\n      var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;\n      var flattenedStyle = _StyleSheet[\"default\"].flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - _Platform[\"default\"].select({\n    ios: 4,\n    \"default\": 0\n  }), 0);\n};\nvar getTabBarHeight = exports.getTabBarHeight = function getTabBarHeight(_ref2) {\n  var _StyleSheet$flatten;\n  var state = _ref2.state,\n    descriptors = _ref2.descriptors,\n    dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, _excluded);\n  var customHeight = (_StyleSheet$flatten = _StyleSheet[\"default\"].flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (_Platform[\"default\"].OS === 'ios' && !_Platform[\"default\"].isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nfunction BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    insets = _ref3.insets,\n    style = _ref3.style;\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var buildLink = (0, _native.useLinkBuilder)();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var tabBarShowLabel = focusedOptions.tabBarShowLabel,\n    _focusedOptions$tabBa = focusedOptions.tabBarHideOnKeyboard,\n    tabBarHideOnKeyboard = _focusedOptions$tabBa === void 0 ? false : _focusedOptions$tabBa,\n    tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig,\n    tabBarStyle = focusedOptions.tabBarStyle,\n    tabBarBackground = focusedOptions.tabBarBackground,\n    tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor,\n    tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor = focusedOptions.tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;\n  var dimensions = (0, _reactNativeSafeAreaContext.useSafeAreaFrame)();\n  var isKeyboardShown = (0, _useIsKeyboardShown[\"default\"])();\n  var onHeightChange = _react[\"default\"].useContext(_BottomTabBarHeightCallbackContext[\"default\"]);\n  var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  var visibilityAnimationConfigRef = _react[\"default\"].useRef(tabBarVisibilityAnimationConfig);\n  _react[\"default\"].useEffect(function () {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = _react[\"default\"].useState(!shouldShowTabBar),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = _react[\"default\"].useState(function () {\n      return new _Animated[\"default\"].Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = (0, _slicedToArray2[\"default\"])(_React$useState3, 1),\n    visible = _React$useState4[0];\n  _react[\"default\"].useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? _Animated[\"default\"].spring : _Animated[\"default\"].timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? _Animated[\"default\"].spring : _Animated[\"default\"].timing;\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n    return function () {\n      return visible.stopAnimation();\n    };\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = _react[\"default\"].useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = (0, _slicedToArray2[\"default\"])(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    descriptors: descriptors,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    style: [tabBarStyle, style]\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions,\n    layout: layout\n  });\n  var tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return _react[\"default\"].createElement(_Animated[\"default\"].View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + _StyleSheet[\"default\"].hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, _react[\"default\"].createElement(_View[\"default\"], {\n    pointerEvents: \"none\",\n    style: _StyleSheet[\"default\"].absoluteFill\n  }, tabBarBackgroundElement), _react[\"default\"].createElement(_View[\"default\"], {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var _options$tabBarIcon;\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, _native.CommonActions.navigate({\n          name: route.name,\n          merge: true\n        })), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && _Platform[\"default\"].OS === 'ios' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return _react[\"default\"].createElement(_native.NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, _react[\"default\"].createElement(_native.NavigationRouteContext.Provider, {\n      value: route\n    }, _react[\"default\"].createElement(_BottomTabItem[\"default\"], {\n      route: route,\n      descriptor: descriptors[route.key],\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: (_options$tabBarIcon = options.tabBarIcon) !== null && _options$tabBarIcon !== void 0 ? _options$tabBarIcon : function (_ref5) {\n        var color = _ref5.color,\n          size = _ref5.size;\n        return _react[\"default\"].createElement(_elements.MissingIcon, {\n          color: color,\n          size: size\n        });\n      },\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nvar styles = _StyleSheet[\"default\"].create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: _StyleSheet[\"default\"].hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["_elements","require","_native","_react","_interopRequireDefault","_Animated","_Platform","_StyleSheet","_View","_reactNativeSafeAreaContext","_BottomTabBarHeightCallbackContext","_useIsKeyboardShown","_BottomTabItem","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","shouldUseHorizontalLabels","_ref","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","getTabBarHeight","exports","_ref2","_StyleSheet$flatten","style","rest","_objectWithoutProperties2","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","_ref3","navigation","_useTheme","useTheme","colors","buildLink","useLinkBuilder","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","_focusedOptions$tabBa","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","useSafeAreaFrame","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","_React$useState","useState","_React$useState2","_slicedToArray2","isTabBarHidden","setIsTabBarHidden","_React$useState3","Value","_React$useState4","visible","visibilityAnimationConfig","_visibilityAnimationC","_visibilityAnimationC2","animation","show","spring","timing","toValue","duration","config","start","_ref4","finished","_visibilityAnimationC3","_visibilityAnimationC4","_animation","hide","stopAnimation","_React$useState5","_React$useState6","setLayout","handleLayout","_e$nativeEvent$layout","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","createElement","View","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","_options$tabBarIcon","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","concat","NavigationContext","Provider","value","NavigationRouteContext","descriptor","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","_ref5","color","size","MissingIcon","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\@react-navigation\\bottom-tabs\\src\\views\\BottomTabBar.tsx"],"sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  descriptor={descriptors[route.key]}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}