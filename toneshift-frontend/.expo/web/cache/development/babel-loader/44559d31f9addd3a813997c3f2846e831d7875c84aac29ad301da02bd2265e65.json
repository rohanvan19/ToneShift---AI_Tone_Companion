{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.RadioButtonIOS = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _RadioButtonGroup = require(\"./RadioButtonGroup\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _utils2 = require(\"../Checkbox/utils\");\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _excluded = [\"disabled\", \"onPress\", \"theme\", \"status\", \"value\", \"testID\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar RadioButtonIOS = exports.RadioButtonIOS = function RadioButtonIOS(_ref) {\n  var disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    themeOverrides = _ref.theme,\n    status = _ref.status,\n    value = _ref.value,\n    testID = _ref.testID,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer, null, function (context) {\n    var checked = (0, _utils.isChecked)({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status: status,\n      value: value\n    }) === 'checked';\n    var _getSelectionControlI = (0, _utils2.getSelectionControlIOSColor)({\n        theme: theme,\n        disabled: disabled,\n        customColor: rest.color\n      }),\n      checkedColor = _getSelectionControlI.checkedColor,\n      rippleColor = _getSelectionControlI.rippleColor;\n    var opacity = checked ? 1 : 0;\n    return React.createElement(_TouchableRipple[\"default\"], _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : function (event) {\n        (0, _utils.handlePress)({\n          onPress: onPress,\n          value: value,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          event: event\n        });\n      },\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled: disabled,\n        checked: checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID,\n      theme: theme\n    }), React.createElement(_View[\"default\"], {\n      style: {\n        opacity: opacity\n      }\n    }, React.createElement(_MaterialCommunityIcon[\"default\"], {\n      allowFontScaling: false,\n      name: \"check\",\n      size: 24,\n      color: checkedColor,\n      direction: \"ltr\"\n    })));\n  });\n};\nRadioButtonIOS.displayName = 'RadioButton.IOS';\nvar styles = _StyleSheet[\"default\"].create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nvar _default = exports[\"default\"] = RadioButtonIOS;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_StyleSheet","_interopRequireDefault","_View","_RadioButtonGroup","_utils","_theming","_utils2","_MaterialCommunityIcon","_TouchableRipple","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","RadioButtonIOS","exports","_ref","disabled","onPress","themeOverrides","theme","status","value","testID","rest","_objectWithoutProperties2","useInternalTheme","createElement","RadioButtonContext","Consumer","context","checked","isChecked","contextValue","_getSelectionControlI","getSelectionControlIOSColor","customColor","color","checkedColor","rippleColor","opacity","_extends","borderless","undefined","event","handlePress","onValueChange","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","allowFontScaling","name","size","direction","displayName","create","borderRadius","padding","_default"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButtonIOS.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getSelectionControlIOSColor } from '../Checkbox/utils';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst RadioButtonIOS = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  status,\n  value,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { checkedColor, rippleColor } = getSelectionControlIOSColor({\n          theme,\n          disabled,\n          customColor: rest.color,\n        });\n        const opacity = checked ? 1 : 0;\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      value,\n                      onValueChange: context?.onValueChange,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <View style={{ opacity }}>\n              <MaterialCommunityIcon\n                allowFontScaling={false}\n                name=\"check\"\n                size={24}\n                color={checkedColor}\n                direction=\"ltr\"\n              />\n            </View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonIOS.displayName = 'RadioButton.IOS';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default RadioButtonIOS;\n\n// @component-docs ignore-next-line\nexport { RadioButtonIOS };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}