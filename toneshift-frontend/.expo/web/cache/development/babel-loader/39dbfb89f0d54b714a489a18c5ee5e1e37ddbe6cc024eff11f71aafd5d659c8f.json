{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\vanma\\\\StudioProjects\\\\ToneShift\\\\toneshift-frontend\\\\screens\\\\conversation\\\\ConversationListScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Card, FAB, ActivityIndicator, TextInput, Menu, IconButton, Button, Portal } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { conversationApi } from '../../utils/api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTheme } from '../../utils/ThemeContext';\nimport CustomDialog from '../../components/CustomDialog';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ConversationListScreen = function ConversationListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var colors = theme.colors,\n    spacing = theme.spacing,\n    fonts = theme.fonts,\n    shadows = theme.shadows,\n    borderRadius = theme.borderRadius;\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: colors.background\n    },\n    centered: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: spacing.l\n    },\n    searchContainer: {\n      margin: spacing.m\n    },\n    searchBar: _objectSpread({\n      backgroundColor: colors.surface,\n      borderRadius: borderRadius.large,\n      height: 50\n    }, shadows.small),\n    listContent: {\n      padding: spacing.m,\n      paddingBottom: spacing.xxxl\n    },\n    card: _objectSpread(_objectSpread({\n      marginBottom: spacing.m,\n      backgroundColor: colors.card,\n      borderRadius: borderRadius.large,\n      overflow: 'hidden'\n    }, shadows.medium), {}, {\n      borderWidth: 1,\n      borderColor: colors.border\n    }),\n    conversationTitle: _objectSpread(_objectSpread({}, fonts.semiBold), {}, {\n      fontSize: fonts.sizes.large,\n      marginBottom: spacing.xs,\n      color: colors.text\n    }),\n    lastMessage: _objectSpread(_objectSpread({}, fonts.regular), {}, {\n      color: colors.textSecondary,\n      marginBottom: spacing.s,\n      lineHeight: 20\n    }),\n    timestamp: _objectSpread(_objectSpread({}, fonts.medium), {}, {\n      color: colors.textSecondary,\n      fontSize: fonts.sizes.xs,\n      alignSelf: 'flex-end'\n    }),\n    errorText: {\n      color: colors.error,\n      textAlign: 'center',\n      marginBottom: spacing.m\n    },\n    retryButton: {\n      padding: spacing.m,\n      backgroundColor: colors.primary,\n      borderRadius: borderRadius.medium\n    },\n    retryText: _objectSpread({\n      color: '#fff'\n    }, fonts.medium),\n    emptyContainer: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: spacing.l\n    },\n    emptyText: _objectSpread(_objectSpread({}, fonts.medium), {}, {\n      fontSize: fonts.sizes.large,\n      marginBottom: spacing.s,\n      color: colors.text\n    }),\n    emptySubtext: {\n      color: colors.textSecondary,\n      textAlign: 'center'\n    },\n    fab: _objectSpread(_objectSpread({\n      position: 'absolute',\n      margin: spacing.m,\n      right: 0,\n      bottom: 0,\n      backgroundColor: colors.primary,\n      borderRadius: borderRadius.round\n    }, shadows.large), {}, {\n      width: 60,\n      height: 60\n    })\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    conversations = _useState2[0],\n    setConversations = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    searchQuery = _useState8[0],\n    setSearchQuery = _useState8[1];\n  var _useState9 = useState([]),\n    _useState0 = _slicedToArray(_useState9, 2),\n    filteredConversations = _useState0[0],\n    setFilteredConversations = _useState0[1];\n  var _useState1 = useState(null),\n    _useState10 = _slicedToArray(_useState1, 2),\n    selectedConversation = _useState10[0],\n    setSelectedConversation = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    menuVisible = _useState12[0],\n    setMenuVisible = _useState12[1];\n  var _useState13 = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    menuPosition = _useState14[0],\n    setMenuPosition = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    renameDialogVisible = _useState16[0],\n    setRenameDialogVisible = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    deleteDialogVisible = _useState18[0],\n    setDeleteDialogVisible = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newTitle = _useState20[0],\n    setNewTitle = _useState20[1];\n  useEffect(function () {\n    fetchConversations();\n  }, []);\n  useEffect(function () {\n    var checkAuth = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var token = yield AsyncStorage.getItem('token');\n        console.log('Current auth token:', token ? 'Present' : 'Not found');\n      });\n      return function checkAuth() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    checkAuth();\n  }, []);\n  useEffect(function () {\n    if (conversations.length > 0) {\n      var filtered = conversations.filter(function (convo) {\n        return convo.title.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n      setFilteredConversations(filtered);\n    }\n  }, [searchQuery, conversations]);\n  var fetchConversations = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setLoading(true);\n      console.log('Fetching conversations...');\n      try {\n        var response = yield conversationApi.getAll();\n        console.log('API response:', response.data);\n        setConversations(response.data.conversations || []);\n        setFilteredConversations(response.data.conversations || []);\n        setError(null);\n      } catch (error) {\n        var _error$response;\n        console.error('Error fetching conversations:', error);\n        console.error('Error details:', ((_error$response = error.response) == null ? void 0 : _error$response.data) || error.message);\n        setError('Failed to load conversations. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchConversations() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleConversationPress = function handleConversationPress(conversation) {\n    navigation.navigate('ConversationDetail', {\n      conversationId: conversation.id,\n      title: conversation.title\n    });\n  };\n  var handleConversationLongPress = function handleConversationLongPress(conversation, event) {\n    setSelectedConversation(conversation);\n    setMenuVisible(true);\n  };\n  var handleRenameConversation = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!newTitle.trim() || !selectedConversation) {\n        return;\n      }\n      try {\n        yield conversationApi.update(selectedConversation.id, {\n          title: newTitle\n        });\n        var updatedConversations = conversations.map(function (convo) {\n          return convo.id === selectedConversation.id ? _objectSpread(_objectSpread({}, convo), {}, {\n            title: newTitle\n          }) : convo;\n        });\n        setConversations(updatedConversations);\n        setFilteredConversations(updatedConversations.filter(function (convo) {\n          return convo.title.toLowerCase().includes(searchQuery.toLowerCase());\n        }));\n        setRenameDialogVisible(false);\n      } catch (error) {\n        console.error('Error renaming conversation:', error);\n        Alert.alert('Error', 'Failed to rename conversation');\n      }\n    });\n    return function handleRenameConversation() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleDeleteConversation = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (!selectedConversation) {\n        return;\n      }\n      try {\n        yield conversationApi.delete(selectedConversation.id);\n        var updatedConversations = conversations.filter(function (convo) {\n          return convo.id !== selectedConversation.id;\n        });\n        setConversations(updatedConversations);\n        setFilteredConversations(updatedConversations.filter(function (convo) {\n          return convo.title.toLowerCase().includes(searchQuery.toLowerCase());\n        }));\n        setDeleteDialogVisible(false);\n      } catch (error) {\n        console.error('Error deleting conversation:', error);\n        Alert.alert('Error', 'Failed to delete conversation');\n      }\n    });\n    return function handleDeleteConversation() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleCreateConversation = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var defaultTitle = `New Conversation ${new Date().toLocaleString()}`;\n        var response = yield conversationApi.create({\n          title: defaultTitle\n        });\n        if (response.data && response.data.conversation) {\n          var newConversation = response.data.conversation;\n          var updatedConversations = [newConversation].concat(_toConsumableArray(conversations));\n          setConversations(updatedConversations);\n          setFilteredConversations(updatedConversations.filter(function (convo) {\n            return convo.title.toLowerCase().includes(searchQuery.toLowerCase());\n          }));\n          navigation.navigate('ConversationDetail', {\n            conversationId: newConversation.id,\n            title: newConversation.title\n          });\n        }\n      } catch (error) {\n        console.error('Error creating conversation:', error);\n        Alert.alert('Error', 'Failed to create a new conversation');\n      }\n    });\n    return function handleCreateConversation() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var renderConversationItem = function renderConversationItem(_ref7) {\n    var item = _ref7.item;\n    var lastMessage = item.messages && item.messages.length > 0 ? item.messages[item.messages.length - 1] : null;\n    var formattedDate = lastMessage ? new Date(lastMessage.timestamp).toLocaleDateString() : 'No messages yet';\n    return _jsxDEV(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleConversationPress(item);\n      },\n      onLongPress: function onLongPress(event) {\n        return handleConversationLongPress(item, event);\n      },\n      delayLongPress: 500,\n      children: _jsxDEV(Card, {\n        style: styles.card,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            },\n            children: [_jsxDEV(Text, {\n              style: styles.conversationTitle,\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, _this), _jsxDEV(IconButton, {\n              icon: \"dots-vertical\",\n              size: 20,\n              onPress: function onPress(event) {\n                var _event$nativeEvent = event.nativeEvent,\n                  pageX = _event$nativeEvent.pageX,\n                  pageY = _event$nativeEvent.pageY;\n                setMenuPosition({\n                  top: pageY + 10,\n                  left: undefined,\n                  right: 20\n                });\n                setSelectedConversation(item);\n                setMenuVisible(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.lastMessage,\n            children: lastMessage ? lastMessage.content.substring(0, 60) + (lastMessage.content.length > 60 ? '...' : '') : 'No messages yet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.timestamp,\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, _this);\n  };\n  if (loading && conversations.length === 0) {\n    return _jsxDEV(View, {\n      style: styles.centered,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, _this);\n  }\n  if (error && conversations.length === 0) {\n    return _jsxDEV(View, {\n      style: styles.centered,\n      children: [_jsxDEV(Text, {\n        style: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        onPress: fetchConversations,\n        style: styles.retryButton,\n        children: _jsxDEV(Text, {\n          style: styles.retryText,\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    edges: ['bottom'],\n    children: [_jsxDEV(Portal, {\n      children: _jsxDEV(Menu, {\n        visible: menuVisible,\n        onDismiss: function onDismiss() {\n          return setMenuVisible(false);\n        },\n        anchor: menuPosition,\n        contentStyle: {\n          backgroundColor: colors.card\n        },\n        children: [_jsxDEV(Menu.Item, {\n          onPress: function onPress() {\n            setMenuVisible(false);\n            setNewTitle((selectedConversation == null ? void 0 : selectedConversation.title) || '');\n            setRenameDialogVisible(true);\n          },\n          title: \"Rename Conversation\",\n          leadingIcon: \"pencil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, _this), _jsxDEV(Menu.Item, {\n          onPress: function onPress() {\n            setMenuVisible(false);\n            setDeleteDialogVisible(true);\n          },\n          title: \"Delete Conversation\",\n          leadingIcon: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, _this), _jsxDEV(CustomDialog, {\n      visible: renameDialogVisible,\n      onDismiss: function onDismiss() {\n        return setRenameDialogVisible(false);\n      },\n      title: \"Rename Conversation\",\n      content: _jsxDEV(TextInput, {\n        value: newTitle,\n        onChangeText: setNewTitle,\n        style: {\n          marginTop: 10\n        },\n        mode: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, _this),\n      actions: _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Button, {\n          onPress: function onPress() {\n            return setRenameDialogVisible(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, _this), _jsxDEV(Button, {\n          onPress: handleRenameConversation,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, _this), _jsxDEV(CustomDialog, {\n      visible: deleteDialogVisible,\n      onDismiss: function onDismiss() {\n        return setDeleteDialogVisible(false);\n      },\n      title: \"Delete Conversation\",\n      content: _jsxDEV(Text, {\n        children: \"Are you sure you want to delete this conversation? This action cannot be undone.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, _this),\n      actions: _jsxDEV(_Fragment, {\n        children: [_jsxDEV(Button, {\n          onPress: function onPress() {\n            return setDeleteDialogVisible(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, _this), _jsxDEV(Button, {\n          onPress: handleDeleteConversation,\n          color: colors.error,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.searchContainer,\n      children: _jsxDEV(TextInput, {\n        placeholder: \"Search conversations...\",\n        onChangeText: setSearchQuery,\n        value: searchQuery,\n        style: styles.searchBar,\n        left: _jsxDEV(TextInput.Icon, {\n          icon: \"magnify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }, _this),\n        mode: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, _this), filteredConversations.length === 0 ? _jsxDEV(View, {\n      style: styles.emptyContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.emptyText,\n        children: \"No conversations found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, _this), _jsxDEV(Text, {\n        style: styles.emptySubtext,\n        children: searchQuery ? 'Try a different search term' : 'Create a new conversation to get started'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, _this) : _jsxDEV(FlatList, {\n      data: filteredConversations,\n      renderItem: renderConversationItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: styles.listContent,\n      refreshing: loading,\n      onRefresh: fetchConversations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, _this), _jsxDEV(FAB, {\n      style: styles.fab,\n      icon: \"plus\",\n      onPress: handleCreateConversation,\n      color: \"#fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, _this);\n};\nexport default ConversationListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","FlatList","TouchableOpacity","Alert","Text","Card","FAB","ActivityIndicator","TextInput","Menu","IconButton","Button","Portal","SafeAreaView","conversationApi","AsyncStorage","useTheme","CustomDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","ConversationListScreen","_ref","navigation","_useTheme","theme","colors","spacing","fonts","shadows","borderRadius","styles","create","container","flex","backgroundColor","background","centered","justifyContent","alignItems","padding","l","searchContainer","margin","m","searchBar","_objectSpread","surface","large","height","small","listContent","paddingBottom","xxxl","card","marginBottom","overflow","medium","borderWidth","borderColor","border","conversationTitle","semiBold","fontSize","sizes","xs","color","text","lastMessage","regular","textSecondary","s","lineHeight","timestamp","alignSelf","errorText","error","textAlign","retryButton","primary","retryText","emptyContainer","emptyText","emptySubtext","fab","position","right","bottom","round","width","_useState","_useState2","_slicedToArray","conversations","setConversations","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","_useState7","_useState8","searchQuery","setSearchQuery","_useState9","_useState0","filteredConversations","setFilteredConversations","_useState1","_useState10","selectedConversation","setSelectedConversation","_useState11","_useState12","menuVisible","setMenuVisible","_useState13","x","y","_useState14","menuPosition","setMenuPosition","_useState15","_useState16","renameDialogVisible","setRenameDialogVisible","_useState17","_useState18","deleteDialogVisible","setDeleteDialogVisible","_useState19","_useState20","newTitle","setNewTitle","fetchConversations","checkAuth","_ref2","_asyncToGenerator","token","getItem","console","log","apply","arguments","length","filtered","filter","convo","title","toLowerCase","includes","_ref3","response","getAll","data","_error$response","message","handleConversationPress","conversation","navigate","conversationId","id","handleConversationLongPress","event","handleRenameConversation","_ref4","trim","update","updatedConversations","map","alert","handleDeleteConversation","_ref5","delete","handleCreateConversation","_ref6","defaultTitle","Date","toLocaleString","newConversation","concat","_toConsumableArray","renderConversationItem","_ref7","item","messages","formattedDate","toLocaleDateString","onPress","onLongPress","delayLongPress","children","style","Content","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","_this","icon","size","_event$nativeEvent","nativeEvent","pageX","pageY","top","left","undefined","content","substring","edges","visible","onDismiss","anchor","contentStyle","Item","leadingIcon","value","onChangeText","marginTop","mode","actions","placeholder","Icon","renderItem","keyExtractor","contentContainerStyle","refreshing","onRefresh"],"sources":["C:/Users/vanma/StudioProjects/ToneShift/toneshift-frontend/screens/conversation/ConversationListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, FlatList, TouchableOpacity, Alert } from 'react-native';\r\nimport { Text, Card, FAB, ActivityIndicator, TextInput, Menu, IconButton, Button, Portal } from 'react-native-paper';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { conversationApi } from '../../utils/api';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '../../utils/ThemeContext';\r\nimport CustomDialog from '../../components/CustomDialog';\r\n\r\nconst ConversationListScreen = ({ navigation }) => {\r\n  const { theme } = useTheme();\r\n  const { colors, spacing, fonts, shadows, borderRadius } = theme;\r\n  \r\n  // Move the styles definition here, before they're used in any conditionals\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: colors.background,\r\n    },\r\n    centered: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: spacing.l,\r\n    },\r\n    searchContainer: {\r\n      margin: spacing.m,\r\n    },\r\n    searchBar: {\r\n      backgroundColor: colors.surface,\r\n      borderRadius: borderRadius.large,\r\n      height: 50,\r\n      ...shadows.small,\r\n    },\r\n    listContent: {\r\n      padding: spacing.m,\r\n      paddingBottom: spacing.xxxl, // Extra padding for FAB\r\n    },\r\n    card: {\r\n      marginBottom: spacing.m,\r\n      backgroundColor: colors.card,\r\n      borderRadius: borderRadius.large,\r\n      overflow: 'hidden',\r\n      ...shadows.medium,\r\n      borderWidth: 1,\r\n      borderColor: colors.border,\r\n    },\r\n    conversationTitle: {\r\n      ...fonts.semiBold,\r\n      fontSize: fonts.sizes.large,\r\n      marginBottom: spacing.xs,\r\n      color: colors.text,\r\n    },\r\n    lastMessage: {\r\n      ...fonts.regular,\r\n      color: colors.textSecondary,\r\n      marginBottom: spacing.s,\r\n      lineHeight: 20,\r\n    },\r\n    timestamp: {\r\n      ...fonts.medium,\r\n      color: colors.textSecondary,\r\n      fontSize: fonts.sizes.xs,\r\n      alignSelf: 'flex-end',\r\n    },\r\n    errorText: {\r\n      color: colors.error,\r\n      textAlign: 'center',\r\n      marginBottom: spacing.m,\r\n    },\r\n    retryButton: {\r\n      padding: spacing.m,\r\n      backgroundColor: colors.primary,\r\n      borderRadius: borderRadius.medium,\r\n    },\r\n    retryText: {\r\n      color: '#fff',\r\n      ...fonts.medium,\r\n    },\r\n    emptyContainer: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: spacing.l,\r\n    },\r\n    emptyText: {\r\n      ...fonts.medium,\r\n      fontSize: fonts.sizes.large,\r\n      marginBottom: spacing.s,\r\n      color: colors.text,\r\n    },\r\n    emptySubtext: {\r\n      color: colors.textSecondary,\r\n      textAlign: 'center',\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      margin: spacing.m,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: colors.primary,\r\n      borderRadius: borderRadius.round,\r\n      ...shadows.large,\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  });\r\n  \r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredConversations, setFilteredConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\r\n  const [renameDialogVisible, setRenameDialogVisible] = useState(false);\r\n  const [deleteDialogVisible, setDeleteDialogVisible] = useState(false);\r\n  const [newTitle, setNewTitle] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchConversations();\r\n  }, []);\r\n\r\n  // Add this at the top of your component\r\n  useEffect(() => {\r\n    // Debug authentication\r\n    const checkAuth = async () => {\r\n      const token = await AsyncStorage.getItem('token');\r\n      console.log('Current auth token:', token ? 'Present' : 'Not found');\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (conversations.length > 0) {\r\n      const filtered = conversations.filter(convo => \r\n        convo.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n      setFilteredConversations(filtered);\r\n    }\r\n  }, [searchQuery, conversations]);\r\n\r\n  const fetchConversations = async () => {\r\n    setLoading(true);\r\n    console.log('Fetching conversations...');\r\n    try {\r\n      const response = await conversationApi.getAll();\r\n      console.log('API response:', response.data);\r\n      setConversations(response.data.conversations || []);\r\n      setFilteredConversations(response.data.conversations || []);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error fetching conversations:', error);\r\n      console.error('Error details:', error.response?.data || error.message);\r\n      setError('Failed to load conversations. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleConversationPress = (conversation) => {\r\n    navigation.navigate('ConversationDetail', { \r\n      conversationId: conversation.id,\r\n      title: conversation.title\r\n    });\r\n  };\r\n  \r\n  const handleConversationLongPress = (conversation, event) => {\r\n    // Save the selected conversation and show menu\r\n    setSelectedConversation(conversation);\r\n    setMenuVisible(true);\r\n  };\r\n  \r\n  const handleRenameConversation = async () => {\r\n    if (!newTitle.trim() || !selectedConversation) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      await conversationApi.update(selectedConversation.id, {\r\n        title: newTitle\r\n      });\r\n      \r\n      // Update local state\r\n      const updatedConversations = conversations.map(convo => \r\n        convo.id === selectedConversation.id \r\n          ? { ...convo, title: newTitle } \r\n          : convo\r\n      );\r\n      \r\n      setConversations(updatedConversations);\r\n      setFilteredConversations(\r\n        updatedConversations.filter(convo => \r\n          convo.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      );\r\n      \r\n      setRenameDialogVisible(false);\r\n    } catch (error) {\r\n      console.error('Error renaming conversation:', error);\r\n      Alert.alert('Error', 'Failed to rename conversation');\r\n    }\r\n  };\r\n  \r\n  const handleDeleteConversation = async () => {\r\n    if (!selectedConversation) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      await conversationApi.delete(selectedConversation.id);\r\n      \r\n      // Update local state\r\n      const updatedConversations = conversations.filter(\r\n        convo => convo.id !== selectedConversation.id\r\n      );\r\n      \r\n      setConversations(updatedConversations);\r\n      setFilteredConversations(\r\n        updatedConversations.filter(convo => \r\n          convo.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      );\r\n      \r\n      setDeleteDialogVisible(false);\r\n    } catch (error) {\r\n      console.error('Error deleting conversation:', error);\r\n      Alert.alert('Error', 'Failed to delete conversation');\r\n    }\r\n  };\r\n  \r\n  const handleCreateConversation = async () => {\r\n    try {\r\n      // Create a default title (can be updated later)\r\n      const defaultTitle = `New Conversation ${new Date().toLocaleString()}`;\r\n      \r\n      // Create the conversation via API\r\n      const response = await conversationApi.create({ \r\n        title: defaultTitle\r\n      });\r\n      \r\n      // Navigate to the newly created conversation\r\n      if (response.data && response.data.conversation) {\r\n        const newConversation = response.data.conversation;\r\n        \r\n        // Add to state for immediate UI update\r\n        const updatedConversations = [newConversation, ...conversations];\r\n        setConversations(updatedConversations);\r\n        setFilteredConversations(\r\n          updatedConversations.filter(convo => \r\n            convo.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n          )\r\n        );\r\n        \r\n        // Navigate to the new conversation\r\n        navigation.navigate('ConversationDetail', {\r\n          conversationId: newConversation.id,\r\n          title: newConversation.title\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating conversation:', error);\r\n      Alert.alert('Error', 'Failed to create a new conversation');\r\n    }\r\n  };\r\n\r\n  const renderConversationItem = ({ item }) => {\r\n    // Get the last message if there are any\r\n    const lastMessage = item.messages && item.messages.length > 0 \r\n      ? item.messages[item.messages.length - 1] \r\n      : null;\r\n    \r\n    // Format the date\r\n    const formattedDate = lastMessage \r\n      ? new Date(lastMessage.timestamp).toLocaleDateString() \r\n      : 'No messages yet';\r\n\r\n    return (\r\n      <TouchableOpacity \r\n        onPress={() => handleConversationPress(item)}\r\n        onLongPress={(event) => handleConversationLongPress(item, event)}\r\n        delayLongPress={500}\r\n      >\r\n        <Card style={styles.card}>\r\n          <Card.Content>\r\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n              <Text style={styles.conversationTitle}>{item.title}</Text>\r\n              <IconButton\r\n                icon=\"dots-vertical\"\r\n                size={20}\r\n                onPress={(event) => {\r\n                  // Get the position of the touch event\r\n                  const { pageX, pageY } = event.nativeEvent;\r\n                  setMenuPosition({ \r\n                    top: pageY + 10, \r\n                    left: undefined, \r\n                    right: 20 \r\n                  });\r\n                  setSelectedConversation(item);\r\n                  setMenuVisible(true);\r\n                }}\r\n              />\r\n            </View>\r\n            <Text style={styles.lastMessage}>\r\n              {lastMessage ? lastMessage.content.substring(0, 60) + (lastMessage.content.length > 60 ? '...' : '') : 'No messages yet'}\r\n            </Text>\r\n            <Text style={styles.timestamp}>{formattedDate}</Text>\r\n          </Card.Content>\r\n        </Card>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  \r\n  if (loading && conversations.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color={colors.primary} />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error && conversations.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity onPress={fetchConversations} style={styles.retryButton}>\r\n          <Text style={styles.retryText}>Retry</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container} edges={['bottom']}>\r\n      {/* Menu */}\r\n      <Portal>\r\n        <Menu\r\n          visible={menuVisible}\r\n          onDismiss={() => setMenuVisible(false)}\r\n          anchor={menuPosition}\r\n          contentStyle={{ backgroundColor: colors.card }}\r\n        >\r\n          <Menu.Item \r\n            onPress={() => {\r\n              setMenuVisible(false);\r\n              setNewTitle(selectedConversation?.title || '');\r\n              setRenameDialogVisible(true);\r\n            }} \r\n            title=\"Rename Conversation\" \r\n            leadingIcon=\"pencil\"\r\n          />\r\n          <Menu.Item \r\n            onPress={() => {\r\n              setMenuVisible(false);\r\n              setDeleteDialogVisible(true);\r\n            }} \r\n            title=\"Delete Conversation\" \r\n            leadingIcon=\"delete\"\r\n          />\r\n        </Menu>\r\n      </Portal>\r\n      \r\n      {/* Custom dialogs without animations */}\r\n      <CustomDialog\r\n        visible={renameDialogVisible}\r\n        onDismiss={() => setRenameDialogVisible(false)}\r\n        title=\"Rename Conversation\"\r\n        content={\r\n          <TextInput\r\n            value={newTitle}\r\n            onChangeText={setNewTitle}\r\n            style={{ marginTop: 10 }}\r\n            mode=\"outlined\"\r\n          />\r\n        }\r\n        actions={\r\n          <>\r\n            <Button onPress={() => setRenameDialogVisible(false)}>Cancel</Button>\r\n            <Button onPress={handleRenameConversation}>Rename</Button>\r\n          </>\r\n        }\r\n      />\r\n      \r\n      <CustomDialog\r\n        visible={deleteDialogVisible}\r\n        onDismiss={() => setDeleteDialogVisible(false)}\r\n        title=\"Delete Conversation\"\r\n        content={\r\n          <Text>Are you sure you want to delete this conversation? This action cannot be undone.</Text>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button onPress={() => setDeleteDialogVisible(false)}>Cancel</Button>\r\n            <Button onPress={handleDeleteConversation} color={colors.error}>Delete</Button>\r\n          </>\r\n        }\r\n      />\r\n      \r\n      {/* Replace the Searchbar with a custom search input */}\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          placeholder=\"Search conversations...\"\r\n          onChangeText={setSearchQuery}\r\n          value={searchQuery}\r\n          style={styles.searchBar}\r\n          left={<TextInput.Icon icon=\"magnify\" />}\r\n          mode=\"outlined\"\r\n        />\r\n      </View>\r\n      \r\n      {filteredConversations.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No conversations found</Text>\r\n          <Text style={styles.emptySubtext}>\r\n            {searchQuery ? 'Try a different search term' : 'Create a new conversation to get started'}\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={filteredConversations}\r\n          renderItem={renderConversationItem}\r\n          keyExtractor={(item) => item.id}\r\n          contentContainerStyle={styles.listContent}\r\n          refreshing={loading}\r\n          onRefresh={fetchConversations}\r\n        />\r\n      )}\r\n\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"plus\"\r\n        onPress={handleCreateConversation}\r\n        color=\"#fff\"\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ConversationListScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}