{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSwitchColor = void 0;\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _colors = require(\"../../styles/themes/v2/colors\");\nvar getCheckedColor = function getCheckedColor(_ref) {\n  var theme = _ref.theme,\n    color = _ref.color;\n  if (color) {\n    return color;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nvar getThumbTintColor = function getThumbTintColor(_ref2) {\n  var theme = _ref2.theme,\n    disabled = _ref2.disabled,\n    value = _ref2.value,\n    checkedColor = _ref2.checkedColor;\n  var isIOS = _Platform[\"default\"].OS === 'ios';\n  if (isIOS) {\n    return undefined;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      return _colors.grey800;\n    }\n    return _colors.grey400;\n  }\n  if (value) {\n    return checkedColor;\n  }\n  if (theme.dark) {\n    return _colors.grey400;\n  }\n  return _colors.grey50;\n};\nvar getOnTintColor = function getOnTintColor(_ref3) {\n  var theme = _ref3.theme,\n    disabled = _ref3.disabled,\n    value = _ref3.value,\n    checkedColor = _ref3.checkedColor;\n  var isIOS = _Platform[\"default\"].OS === 'ios';\n  if (isIOS) {\n    return checkedColor;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return (0, _color[\"default\"])(_colors.white).alpha(0.06).rgb().string();\n      }\n      return (0, _color[\"default\"])(_colors.white).alpha(0.1).rgb().string();\n    }\n    return (0, _color[\"default\"])(_colors.black).alpha(0.12).rgb().string();\n  }\n  if (value) {\n    return (0, _color[\"default\"])(checkedColor).alpha(0.5).rgb().string();\n  }\n  if (theme.dark) {\n    return _colors.grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\nvar getSwitchColor = exports.getSwitchColor = function getSwitchColor(_ref4) {\n  var theme = _ref4.theme,\n    disabled = _ref4.disabled,\n    value = _ref4.value,\n    color = _ref4.color;\n  var checkedColor = getCheckedColor({\n    theme: theme,\n    color: color\n  });\n  return {\n    onTintColor: getOnTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    thumbTintColor: getThumbTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    checkedColor: checkedColor\n  };\n};","map":{"version":3,"names":["_color","_interopRequireDefault","require","_colors","getCheckedColor","_ref","theme","color","isV3","colors","primary","accent","getThumbTintColor","_ref2","disabled","value","checkedColor","isIOS","_Platform","OS","undefined","dark","grey800","grey400","grey50","getOnTintColor","_ref3","white","alpha","rgb","string","black","grey700","getSwitchColor","exports","_ref4","onTintColor","thumbTintColor"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\Switch\\utils.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: InternalTheme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}