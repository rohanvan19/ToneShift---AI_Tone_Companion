{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.AppbarContent = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _Pressable = _interopRequireDefault(require(\"react-native-web/dist/exports/Pressable\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _colors = require(\"../../styles/themes/v2/colors\");\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"disabled\", \"style\", \"titleRef\", \"titleStyle\", \"title\", \"titleMaxFontSizeMultiplier\", \"mode\", \"theme\", \"testID\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar AppbarContent = exports.AppbarContent = function AppbarContent(_ref) {\n  var titleColor = _ref.color,\n    subtitle = _ref.subtitle,\n    subtitleStyle = _ref.subtitleStyle,\n    onPress = _ref.onPress,\n    disabled = _ref.disabled,\n    style = _ref.style,\n    titleRef = _ref.titleRef,\n    titleStyle = _ref.titleStyle,\n    title = _ref.title,\n    titleMaxFontSizeMultiplier = _ref.titleMaxFontSizeMultiplier,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'appbar-content' : _ref$testID,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var isV3 = theme.isV3,\n    colors = theme.colors;\n  var titleTextColor = titleColor ? titleColor : isV3 ? colors.onSurface : _colors.white;\n  var subtitleColor = (0, _color[\"default\"])(titleTextColor).alpha(0.7).rgb().string();\n  var modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer\n  };\n  var variant = _utils.modeTextVariant[mode];\n  var contentWrapperProps = _objectSpread({\n    pointerEvents: 'box-none',\n    style: [styles.container, isV3 && modeContainerStyles[mode], style],\n    testID: testID\n  }, rest);\n  var content = React.createElement(React.Fragment, null, typeof title === 'string' ? React.createElement(_Text[\"default\"], _extends({}, isV3 && {\n    variant: variant\n  }, {\n    ref: titleRef,\n    style: [_objectSpread({\n      color: titleTextColor\n    }, isV3 ? theme.fonts[variant] : _Platform[\"default\"].OS === 'ios' ? theme.fonts.regular : theme.fonts.medium), !isV3 && styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityRole: onPress ? 'none' : _Platform[\"default\"].OS === 'web' ? 'heading' : 'header',\n    accessibilityTraits: \"header\",\n    testID: \"\".concat(testID, \"-title-text\"),\n    maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n  }), title) : title, !isV3 && subtitle ? React.createElement(_Text[\"default\"], {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null);\n  if (onPress) {\n    return React.createElement(_Pressable[\"default\"], _extends({\n      accessibilityRole: touchableRole,\n      accessibilityTraits: touchableRole,\n      accessibilityComponentType: \"button\",\n      accessbilityState: disabled ? 'disabled' : null,\n      onPress: onPress,\n      disabled: disabled\n    }, contentWrapperProps), content);\n  }\n  return React.createElement(_View[\"default\"], contentWrapperProps, content);\n};\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = _StyleSheet[\"default\"].create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28\n  },\n  title: {\n    fontSize: _Platform[\"default\"].OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: _Platform[\"default\"].OS === 'ios' ? 11 : 14\n  }\n});\nvar touchableRole = 'button';\nvar _default = exports[\"default\"] = AppbarContent;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_Platform","_interopRequireDefault","_StyleSheet","_Pressable","_View","_color","_utils","_theming","_colors","_Text","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","AppbarContent","exports","_ref","titleColor","color","subtitle","subtitleStyle","onPress","disabled","style","titleRef","titleStyle","title","titleMaxFontSizeMultiplier","_ref$mode","mode","themeOverrides","theme","_ref$testID","testID","rest","_objectWithoutProperties2","useInternalTheme","isV3","colors","titleTextColor","onSurface","white","subtitleColor","alpha","rgb","string","modeContainerStyles","small","styles","v3DefaultContainer","medium","v3MediumContainer","large","v3LargeContainer","variant","modeTextVariant","contentWrapperProps","pointerEvents","container","content","createElement","Fragment","_extends","ref","fonts","OS","regular","numberOfLines","accessible","accessibilityRole","accessibilityTraits","concat","maxFontSizeMultiplier","touchableRole","accessibilityComponentType","accessbilityState","displayName","create","flex","paddingHorizontal","justifyContent","paddingBottom","paddingTop","fontSize","_default"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\Appbar\\AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityRole,\n  GestureResponderEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  Pressable,\n  View,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { modeTextVariant } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { $RemoveChildren, MD3TypescaleKey, ThemeProp } from '../../types';\nimport Text, { TextRef } from '../Typography/Text';\n\ntype TitleString = {\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n};\n\ntype TitleElement = { title: React.ReactNode; titleStyle?: never };\n\nexport type Props = $RemoveChildren<typeof View> & {\n  // For `title` and `titleStyle` props their types are duplicated due to the generation of documentation.\n  // Appropriate type for them are either `TitleString` or `TitleElement`, depends on `title` type.\n  /**\n   * Text or component for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title, if `title` is a string.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<TextRef>;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * @deprecated Deprecated in v5.x\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * If true, disable all interactions for this component.\n   */\n  disabled?: boolean;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * @internal\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n} & (TitleString | TitleElement);\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  disabled,\n  style,\n  titleRef,\n  titleStyle,\n  title,\n  titleMaxFontSizeMultiplier,\n  mode = 'small',\n  theme: themeOverrides,\n  testID = 'appbar-content',\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, colors } = theme;\n\n  const titleTextColor = titleColor\n    ? titleColor\n    : isV3\n    ? colors.onSurface\n    : white;\n\n  const subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n\n  const modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer,\n  };\n\n  const variant = modeTextVariant[mode] as MD3TypescaleKey;\n\n  const contentWrapperProps = {\n    pointerEvents: 'box-none' as ViewProps['pointerEvents'],\n    style: [styles.container, isV3 && modeContainerStyles[mode], style],\n    testID,\n    ...rest,\n  };\n\n  const content = (\n    <>\n      {typeof title === 'string' ? (\n        <Text\n          {...(isV3 && { variant })}\n          ref={titleRef}\n          style={[\n            {\n              color: titleTextColor,\n              ...(isV3\n                ? theme.fonts[variant]\n                : Platform.OS === 'ios'\n                ? theme.fonts.regular\n                : theme.fonts.medium),\n            },\n            !isV3 && styles.title,\n            titleStyle,\n          ]}\n          numberOfLines={1}\n          accessible\n          accessibilityRole={\n            onPress\n              ? 'none'\n              : Platform.OS === 'web'\n              ? ('heading' as 'header')\n              : 'header'\n          }\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"header\"\n          testID={`${testID}-title-text`}\n          maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n        >\n          {title}\n        </Text>\n      ) : (\n        title\n      )}\n      {!isV3 && subtitle ? (\n        <Text\n          style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n          numberOfLines={1}\n        >\n          {subtitle}\n        </Text>\n      ) : null}\n    </>\n  );\n\n  if (onPress) {\n    return (\n      // eslint-disable-next-line react-native-a11y/has-accessibility-props\n      <Pressable\n        accessibilityRole={touchableRole}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={touchableRole}\n        accessibilityComponentType=\"button\"\n        accessbilityState={disabled ? 'disabled' : null}\n        onPress={onPress}\n        disabled={disabled}\n        {...contentWrapperProps}\n      >\n        {content}\n      </Pressable>\n    );\n  }\n\n  return <View {...contentWrapperProps}>{content}</View>;\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0,\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nconst touchableRole: AccessibilityRole = 'button';\n\nexport default AppbarContent;\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}