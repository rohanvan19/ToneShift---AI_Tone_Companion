{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _reactDom = require(\"react-dom\");\nvar findNodeHandle = function findNodeHandle(component) {\n  var node;\n  try {\n    node = (0, _reactDom.findDOMNode)(component);\n  } catch (e) {}\n  return node;\n};\nvar _default = exports[\"default\"] = findNodeHandle;","map":{"version":3,"names":["_reactDom","require","findNodeHandle","component","node","findDOMNode","e","_default","exports"],"sources":["C:/Users/vanma/StudioProjects/ToneShift/toneshift-frontend/node_modules/react-native-web/dist/exports/findNodeHandle/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { findDOMNode } from 'react-dom';\n\n/**\n * @deprecated imperatively finding the DOM element of a react component has been deprecated in React 18.\n * You should use ref properties on the component instead.\n */\nvar findNodeHandle = component => {\n  var node;\n  try {\n    node = findDOMNode(component);\n  } catch (e) {}\n  return node;\n};\nexport default findNodeHandle;"],"mappings":";;;;;;AAUA,IAAAA,SAAA,GAAAC,OAAA;AAMA,IAAIC,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,SAAS,EAAI;EAChC,IAAIC,IAAI;EACR,IAAI;IACFA,IAAI,GAAG,IAAAJ,SAAA,CAAAK,WAAW,EAACF,SAAS,CAAC;EAC/B,CAAE,QAAOG,CAAC,EAAE,CAAC;EACb,OAAOF,IAAI;AACb,CAAC;AAAC,IAAAG,QAAA,GAAAC,OAAA,cACaN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}