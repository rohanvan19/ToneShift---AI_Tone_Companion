{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.getAdornmentConfig = getAdornmentConfig;\nexports.getAdornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _enums = require(\"./enums\");\nvar _TextInputAffix = _interopRequireWildcard(require(\"./TextInputAffix\"));\nvar _TextInputIcon = _interopRequireWildcard(require(\"./TextInputIcon\"));\nvar _helpers = require(\"../helpers\");\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction getAdornmentConfig(_ref) {\n  var left = _ref.left,\n    right = _ref.right;\n  var adornmentConfig = [];\n  if (left || right) {\n    [{\n      side: _enums.AdornmentSide.Left,\n      adornment: left\n    }, {\n      side: _enums.AdornmentSide.Right,\n      adornment: right\n    }].forEach(function (_ref2) {\n      var side = _ref2.side,\n        adornment = _ref2.adornment;\n      if (adornment && _react[\"default\"].isValidElement(adornment)) {\n        var type;\n        if (adornment.type === _TextInputAffix[\"default\"]) {\n          type = _enums.AdornmentType.Affix;\n        } else if (adornment.type === _TextInputIcon[\"default\"]) {\n          type = _enums.AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side: side,\n          type: type\n        });\n      }\n    });\n  }\n  return adornmentConfig;\n}\nfunction getAdornmentStyleAdjustmentForNativeInput(_ref3) {\n  var adornmentConfig = _ref3.adornmentConfig,\n    leftAffixWidth = _ref3.leftAffixWidth,\n    rightAffixWidth = _ref3.rightAffixWidth,\n    paddingHorizontal = _ref3.paddingHorizontal,\n    _ref3$inputOffset = _ref3.inputOffset,\n    inputOffset = _ref3$inputOffset === void 0 ? 0 : _ref3$inputOffset,\n    mode = _ref3.mode,\n    isV3 = _ref3.isV3;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    OUTLINED_INPUT_OFFSET = _getConstants.OUTLINED_INPUT_OFFSET,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET;\n  if (adornmentConfig.length) {\n    var adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(function (_ref4) {\n      var type = _ref4.type,\n        side = _ref4.side;\n      var isLeftSide = side === _enums.AdornmentSide.Left;\n      var inputModeAdornemntOffset = mode === _enums.InputMode.Outlined ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET : ADORNMENT_OFFSET;\n      var paddingKey = \"padding\".concat(captalize(side));\n      var affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n      var padding = typeof paddingHorizontal === 'number' ? paddingHorizontal : inputModeAdornemntOffset;\n      var offset = affixWidth + padding;\n      var isAffix = type === _enums.AdornmentType.Affix;\n      var marginKey = \"margin\".concat(captalize(side));\n      return (0, _defineProperty2[\"default\"])((0, _defineProperty2[\"default\"])({}, marginKey, isAffix ? 0 : offset), paddingKey, isAffix ? offset : inputOffset);\n    });\n    var allStyleAdjustmentsMerged = adornmentStyleAdjustmentForNativeInput.reduce(function (mergedStyles, currentStyle) {\n      return _objectSpread(_objectSpread({}, mergedStyles), currentStyle);\n    }, {});\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\nvar captalize = function captalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\nvar TextInputAdornment = function TextInputAdornment(_ref6) {\n  var adornmentConfig = _ref6.adornmentConfig,\n    left = _ref6.left,\n    right = _ref6.right,\n    onAffixChange = _ref6.onAffixChange,\n    textStyle = _ref6.textStyle,\n    visible = _ref6.visible,\n    topPosition = _ref6.topPosition,\n    isTextInputFocused = _ref6.isTextInputFocused,\n    forceFocus = _ref6.forceFocus,\n    paddingHorizontal = _ref6.paddingHorizontal,\n    maxFontSizeMultiplier = _ref6.maxFontSizeMultiplier,\n    theme = _ref6.theme,\n    disabled = _ref6.disabled;\n  if (adornmentConfig.length) {\n    return _react[\"default\"].createElement(_react[\"default\"].Fragment, null, adornmentConfig.map(function (_ref7) {\n      var type = _ref7.type,\n        side = _ref7.side;\n      var inputAdornmentComponent;\n      if (side === _enums.AdornmentSide.Left) {\n        inputAdornmentComponent = left;\n      } else if (side === _enums.AdornmentSide.Right) {\n        inputAdornmentComponent = right;\n      }\n      var commonProps = {\n        side: side,\n        testID: \"\".concat(side, \"-\").concat(type, \"-adornment\"),\n        isTextInputFocused: isTextInputFocused,\n        paddingHorizontal: paddingHorizontal,\n        disabled: disabled\n      };\n      if (type === _enums.AdornmentType.Icon) {\n        return _react[\"default\"].createElement(_TextInputIcon.IconAdornment, _extends({}, commonProps, {\n          theme: theme,\n          key: side,\n          icon: inputAdornmentComponent,\n          topPosition: topPosition[_enums.AdornmentType.Icon],\n          forceFocus: forceFocus\n        }));\n      } else if (type === _enums.AdornmentType.Affix) {\n        return _react[\"default\"].createElement(_TextInputAffix.AffixAdornment, _extends({}, commonProps, {\n          key: side,\n          topPosition: topPosition[_enums.AdornmentType.Affix][side],\n          affix: inputAdornmentComponent,\n          textStyle: textStyle,\n          onLayout: onAffixChange[side],\n          visible: visible,\n          maxFontSizeMultiplier: maxFontSizeMultiplier\n        }));\n      } else {\n        return null;\n      }\n    }));\n  } else {\n    return null;\n  }\n};\nvar _default = exports[\"default\"] = TextInputAdornment;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_enums","_TextInputAffix","_interopRequireWildcard","_TextInputIcon","_helpers","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","getAdornmentConfig","_ref","left","right","adornmentConfig","side","AdornmentSide","Left","adornment","Right","_ref2","isValidElement","type","AdornmentType","Affix","Icon","getAdornmentStyleAdjustmentForNativeInput","_ref3","leftAffixWidth","rightAffixWidth","paddingHorizontal","_ref3$inputOffset","inputOffset","mode","isV3","_getConstants","getConstants","OUTLINED_INPUT_OFFSET","ADORNMENT_OFFSET","adornmentStyleAdjustmentForNativeInput","map","_ref4","isLeftSide","inputModeAdornemntOffset","InputMode","Outlined","paddingKey","concat","captalize","affixWidth","padding","offset","isAffix","marginKey","allStyleAdjustmentsMerged","reduce","mergedStyles","currentStyle","text","charAt","toUpperCase","slice","TextInputAdornment","_ref6","onAffixChange","textStyle","visible","topPosition","isTextInputFocused","forceFocus","maxFontSizeMultiplier","theme","disabled","createElement","Fragment","_ref7","inputAdornmentComponent","commonProps","testID","IconAdornment","_extends","key","icon","AffixAdornment","affix","onLayout","_default","exports"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\TextInput\\Adornment\\TextInputAdornment.tsx"],"sourcesContent":["import React from 'react';\nimport type {\n  LayoutChangeEvent,\n  TextStyle,\n  StyleProp,\n  Animated,\n  DimensionValue,\n} from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { AdornmentSide, AdornmentType, InputMode } from './enums';\nimport TextInputAffix, { AffixAdornment } from './TextInputAffix';\nimport TextInputIcon, { IconAdornment } from './TextInputIcon';\nimport type {\n  AdornmentConfig,\n  AdornmentStyleAdjustmentForNativeInput,\n} from './types';\nimport { getConstants } from '../helpers';\n\nexport function getAdornmentConfig({\n  left,\n  right,\n}: {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n}): Array<AdornmentConfig> {\n  let adornmentConfig: any[] = [];\n  if (left || right) {\n    [\n      { side: AdornmentSide.Left, adornment: left },\n      { side: AdornmentSide.Right, adornment: right },\n    ].forEach(({ side, adornment }) => {\n      if (adornment && React.isValidElement(adornment)) {\n        let type;\n        if (adornment.type === TextInputAffix) {\n          type = AdornmentType.Affix;\n        } else if (adornment.type === TextInputIcon) {\n          type = AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side,\n          type,\n        });\n      }\n    });\n  }\n\n  return adornmentConfig;\n}\n\nexport function getAdornmentStyleAdjustmentForNativeInput({\n  adornmentConfig,\n  leftAffixWidth,\n  rightAffixWidth,\n  paddingHorizontal,\n  inputOffset = 0,\n  mode,\n  isV3,\n}: {\n  inputOffset?: number;\n  adornmentConfig: AdornmentConfig[];\n  leftAffixWidth: number;\n  rightAffixWidth: number;\n  mode?: 'outlined' | 'flat';\n  paddingHorizontal?: DimensionValue;\n  isV3?: boolean;\n}): AdornmentStyleAdjustmentForNativeInput | {} {\n  const { OUTLINED_INPUT_OFFSET, ADORNMENT_OFFSET } = getConstants(isV3);\n\n  if (adornmentConfig.length) {\n    const adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(\n      ({ type, side }: AdornmentConfig) => {\n        const isLeftSide = side === AdornmentSide.Left;\n        const inputModeAdornemntOffset =\n          mode === InputMode.Outlined\n            ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET\n            : ADORNMENT_OFFSET;\n        const paddingKey = `padding${captalize(side)}`;\n        const affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n        const padding =\n          typeof paddingHorizontal === 'number'\n            ? paddingHorizontal\n            : inputModeAdornemntOffset;\n        const offset = affixWidth + padding;\n\n        const isAffix = type === AdornmentType.Affix;\n        const marginKey = `margin${captalize(side)}`;\n\n        return {\n          [marginKey]: isAffix ? 0 : offset,\n          [paddingKey]: isAffix ? offset : inputOffset,\n        };\n      }\n    );\n    const allStyleAdjustmentsMerged =\n      adornmentStyleAdjustmentForNativeInput.reduce(\n        (mergedStyles, currentStyle) => {\n          return {\n            ...mergedStyles,\n            ...currentStyle,\n          };\n        },\n        {}\n      );\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\n\nconst captalize = (text: string) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n\nexport interface TextInputAdornmentProps {\n  forceFocus: () => void;\n  adornmentConfig: AdornmentConfig[];\n  topPosition: {\n    [AdornmentType.Affix]: {\n      [AdornmentSide.Left]: number | null;\n      [AdornmentSide.Right]: number | null;\n    };\n    [AdornmentType.Icon]: number;\n  };\n  onAffixChange: {\n    [AdornmentSide.Left]: (event: LayoutChangeEvent) => void;\n    [AdornmentSide.Right]: (event: LayoutChangeEvent) => void;\n  };\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  textStyle?: StyleProp<TextStyle>;\n  visible?: Animated.Value;\n  isTextInputFocused: boolean;\n  paddingHorizontal?: DimensionValue;\n  maxFontSizeMultiplier?: number | undefined | null;\n  theme?: ThemeProp;\n  disabled?: boolean;\n}\n\nconst TextInputAdornment: React.FunctionComponent<TextInputAdornmentProps> = ({\n  adornmentConfig,\n  left,\n  right,\n  onAffixChange,\n  textStyle,\n  visible,\n  topPosition,\n  isTextInputFocused,\n  forceFocus,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n  theme,\n  disabled,\n}) => {\n  if (adornmentConfig.length) {\n    return (\n      <>\n        {adornmentConfig.map(({ type, side }: AdornmentConfig) => {\n          let inputAdornmentComponent;\n          if (side === AdornmentSide.Left) {\n            inputAdornmentComponent = left;\n          } else if (side === AdornmentSide.Right) {\n            inputAdornmentComponent = right;\n          }\n\n          const commonProps = {\n            side: side,\n            testID: `${side}-${type}-adornment`,\n            isTextInputFocused,\n            paddingHorizontal,\n            disabled,\n          };\n          if (type === AdornmentType.Icon) {\n            return (\n              <IconAdornment\n                {...commonProps}\n                theme={theme}\n                key={side}\n                icon={inputAdornmentComponent}\n                topPosition={topPosition[AdornmentType.Icon]}\n                forceFocus={forceFocus}\n              />\n            );\n          } else if (type === AdornmentType.Affix) {\n            return (\n              <AffixAdornment\n                {...commonProps}\n                key={side}\n                topPosition={topPosition[AdornmentType.Affix][side]}\n                affix={inputAdornmentComponent}\n                textStyle={textStyle}\n                onLayout={onAffixChange[side]}\n                visible={visible}\n                maxFontSizeMultiplier={maxFontSizeMultiplier}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TextInputAdornment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}