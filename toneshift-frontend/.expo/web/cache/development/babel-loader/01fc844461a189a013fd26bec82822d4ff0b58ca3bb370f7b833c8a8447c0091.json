{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScheduleUpdateContext = void 0;\nexports[\"default\"] = useScheduleUpdate;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nvar MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\nvar ScheduleUpdateContext = exports.ScheduleUpdateContext = React.createContext({\n  scheduleUpdate: function scheduleUpdate() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  flushUpdates: function flushUpdates() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  }\n});\nfunction useScheduleUpdate(callback) {\n  var _React$useContext = React.useContext(ScheduleUpdateContext),\n    scheduleUpdate = _React$useContext.scheduleUpdate,\n    flushUpdates = _React$useContext.flushUpdates;\n  scheduleUpdate(callback);\n  React.useEffect(flushUpdates);\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","MISSING_CONTEXT_ERROR","ScheduleUpdateContext","exports","createContext","scheduleUpdate","Error","flushUpdates","useScheduleUpdate","callback","_React$useContext","useContext","useEffect"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\@react-navigation\\core\\src\\useScheduleUpdate.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n\nexport const ScheduleUpdateContext = React.createContext<{\n  scheduleUpdate: (callback: () => void) => void;\n  flushUpdates: () => void;\n}>({\n  scheduleUpdate() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  flushUpdates() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\n/**\n * When screen config changes, we want to update the navigator in the same update phase.\n * However, navigation state is in the root component and React won't let us update it from a child.\n * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n * It lets all subsequent updates access the latest state so it stays correct.\n * Then we call setState during after the component updates.\n */\nexport default function useScheduleUpdate(callback: () => void) {\n  const { scheduleUpdate, flushUpdates } = React.useContext(\n    ScheduleUpdateContext\n  );\n\n  scheduleUpdate(callback);\n\n  React.useEffect(flushUpdates);\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA8B,SAAAD,wBAAAE,CAAA,EAAAC,CAAA;EAAA,yBAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAJ,uBAAA,YAAAA,wBAAAE,CAAA,EAAAC,CAAA;IAAA,KAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA;IAAA,IAAAM,CAAA;MAAAC,CAAA;MAAAC,CAAA;QAAAC,SAAA;QAAA,WAAAT;MAAA;IAAA,aAAAA,CAAA,gBAAAU,OAAA,CAAAV,CAAA,0BAAAA,CAAA,SAAAQ,CAAA;IAAA,IAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA;MAAA,IAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA;MAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA;IAAA;IAAA,SAAAM,GAAA,IAAAd,CAAA,gBAAAc,GAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,GAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,GAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,GAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,GAAA,IAAAd,CAAA,CAAAc,GAAA;IAAA,OAAAN,CAAA;EAAA,GAAAR,CAAA,EAAAC,CAAA;AAAA;AAE9B,IAAMmB,qBAAqB,GAAG,mCAAmC;AAE1D,IAAMC,qBAAqB,GAAAC,OAAA,CAAAD,qBAAA,GAAGxB,KAAK,CAAC0B,aAAa,CAGrD;EACDC,cAAc,WAAdA,cAAcA,CAAA,EAAG;IACf,MAAM,IAAIC,KAAK,CAACL,qBAAqB,CAAC;EACxC,CAAC;EACDM,YAAY,WAAZA,YAAYA,CAAA,EAAG;IACb,MAAM,IAAID,KAAK,CAACL,qBAAqB,CAAC;EACxC;AACF,CAAC,CAAC;AASa,SAASO,iBAAiBA,CAACC,QAAoB,EAAE;EAC9D,IAAAC,iBAAA,GAAyChC,KAAK,CAACiC,UAAU,CACvDT,qBAAqB,CACtB;IAFOG,cAAc,GAAAK,iBAAA,CAAdL,cAAc;IAAEE,YAAA,GAAAG,iBAAA,CAAAH,YAAA;EAIxBF,cAAc,CAACI,QAAQ,CAAC;EAExB/B,KAAK,CAACkC,SAAS,CAACL,YAAY,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}