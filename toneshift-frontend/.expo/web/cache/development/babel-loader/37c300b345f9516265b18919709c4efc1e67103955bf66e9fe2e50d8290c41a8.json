{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _Pressable = _interopRequireDefault(require(\"react-native-web/dist/exports/Pressable\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _overlay = _interopRequireDefault(require(\"../../styles/overlay\"));\nvar _colors = require(\"../../styles/themes/v2/colors\");\nvar _useAnimatedValue = _interopRequireDefault(require(\"../../utils/useAnimatedValue\"));\nvar _useAnimatedValueArray = _interopRequireDefault(require(\"../../utils/useAnimatedValueArray\"));\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../../utils/useIsKeyboardShown\"));\nvar _useLayout3 = _interopRequireDefault(require(\"../../utils/useLayout\"));\nvar _Badge = _interopRequireDefault(require(\"../Badge\"));\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"route\", \"style\", \"children\", \"borderless\", \"centered\", \"rippleColor\"],\n  _excluded2 = [\"key\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar MIN_RIPPLE_SCALE = 0.001;\nvar MIN_TAB_WIDTH = 96;\nvar MAX_TAB_WIDTH = 168;\nvar BAR_HEIGHT = 56;\nvar OUTLINE_WIDTH = 64;\nvar Touchable = function Touchable(_ref) {\n  var _0 = _ref.route,\n    style = _ref.style,\n    children = _ref.children,\n    borderless = _ref.borderless,\n    centered = _ref.centered,\n    rippleColor = _ref.rippleColor,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n  return _TouchableRipple[\"default\"].supported ? React.createElement(_TouchableRipple[\"default\"], _extends({}, rest, {\n    disabled: rest.disabled || undefined,\n    borderless: borderless,\n    centered: centered,\n    rippleColor: rippleColor,\n    style: style\n  }), children) : React.createElement(_Pressable[\"default\"], _extends({\n    style: style\n  }, rest), children);\n};\nvar BottomNavigationBar = function BottomNavigationBar(_ref2) {\n  var _ref0, _ref1, _ref10;\n  var navigationState = _ref2.navigationState,\n    renderIcon = _ref2.renderIcon,\n    renderLabel = _ref2.renderLabel,\n    _ref2$renderTouchable = _ref2.renderTouchable,\n    renderTouchable = _ref2$renderTouchable === void 0 ? function (_ref3) {\n      var key = _ref3.key,\n        props = (0, _objectWithoutProperties2[\"default\"])(_ref3, _excluded2);\n      return React.createElement(Touchable, _extends({\n        key: key\n      }, props));\n    } : _ref2$renderTouchable,\n    _ref2$getLabelText = _ref2.getLabelText,\n    getLabelText = _ref2$getLabelText === void 0 ? function (_ref4) {\n      var route = _ref4.route;\n      return route.title;\n    } : _ref2$getLabelText,\n    _ref2$getBadge = _ref2.getBadge,\n    getBadge = _ref2$getBadge === void 0 ? function (_ref5) {\n      var route = _ref5.route;\n      return route.badge;\n    } : _ref2$getBadge,\n    _ref2$getColor = _ref2.getColor,\n    getColor = _ref2$getColor === void 0 ? function (_ref6) {\n      var route = _ref6.route;\n      return route.color;\n    } : _ref2$getColor,\n    _ref2$getAccessibilit = _ref2.getAccessibilityLabel,\n    getAccessibilityLabel = _ref2$getAccessibilit === void 0 ? function (_ref7) {\n      var route = _ref7.route;\n      return route.accessibilityLabel;\n    } : _ref2$getAccessibilit,\n    _ref2$getTestID = _ref2.getTestID,\n    getTestID = _ref2$getTestID === void 0 ? function (_ref8) {\n      var route = _ref8.route;\n      return route.testID;\n    } : _ref2$getTestID,\n    activeColor = _ref2.activeColor,\n    inactiveColor = _ref2.inactiveColor,\n    _ref2$keyboardHidesNa = _ref2.keyboardHidesNavigationBar,\n    keyboardHidesNavigationBar = _ref2$keyboardHidesNa === void 0 ? _Platform[\"default\"].OS === 'android' : _ref2$keyboardHidesNa,\n    style = _ref2.style,\n    activeIndicatorStyle = _ref2.activeIndicatorStyle,\n    _ref2$labeled = _ref2.labeled,\n    labeled = _ref2$labeled === void 0 ? true : _ref2$labeled,\n    animationEasing = _ref2.animationEasing,\n    onTabPress = _ref2.onTabPress,\n    onTabLongPress = _ref2.onTabLongPress,\n    shiftingProp = _ref2.shifting,\n    safeAreaInsets = _ref2.safeAreaInsets,\n    _ref2$labelMaxFontSiz = _ref2.labelMaxFontSizeMultiplier,\n    labelMaxFontSizeMultiplier = _ref2$labelMaxFontSiz === void 0 ? 1 : _ref2$labelMaxFontSiz,\n    compactProp = _ref2.compact,\n    _ref2$testID = _ref2.testID,\n    testID = _ref2$testID === void 0 ? 'bottom-navigation-bar' : _ref2$testID,\n    themeOverrides = _ref2.theme;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _useSafeAreaInsets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)(),\n    bottom = _useSafeAreaInsets.bottom,\n    left = _useSafeAreaInsets.left,\n    right = _useSafeAreaInsets.right;\n  var scale = theme.animation.scale;\n  var compact = compactProp !== null && compactProp !== void 0 ? compactProp : !theme.isV3;\n  var shifting = shiftingProp !== null && shiftingProp !== void 0 ? shiftingProp : theme.isV3 ? false : navigationState.routes.length > 3;\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn('BottomNavigation.Bar needs at least 2 tabs to run shifting animation');\n  }\n  var visibleAnim = (0, _useAnimatedValue[\"default\"])(1);\n  var tabsAnims = (0, _useAnimatedValueArray[\"default\"])(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 1 : 0;\n  }));\n  var indexAnim = (0, _useAnimatedValue[\"default\"])(navigationState.index);\n  var rippleAnim = (0, _useAnimatedValue[\"default\"])(MIN_RIPPLE_SCALE);\n  var _useLayout = (0, _useLayout3[\"default\"])(),\n    _useLayout2 = (0, _slicedToArray2[\"default\"])(_useLayout, 2),\n    layout = _useLayout2[0],\n    onLayout = _useLayout2[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    keyboardVisible = _React$useState2[0],\n    setKeyboardVisible = _React$useState2[1];\n  var handleKeyboardShow = React.useCallback(function () {\n    setKeyboardVisible(true);\n    _Animated[\"default\"].timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [scale, visibleAnim]);\n  var handleKeyboardHide = React.useCallback(function () {\n    _Animated[\"default\"].timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(function () {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n  var animateToIndex = React.useCallback(function (index) {\n    rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    _Animated[\"default\"].parallel([_Animated[\"default\"].timing(rippleAnim, {\n      toValue: 1,\n      duration: theme.isV3 || shifting ? 400 * scale : 0,\n      useNativeDriver: true\n    })].concat((0, _toConsumableArray2[\"default\"])(navigationState.routes.map(function (_, i) {\n      return _Animated[\"default\"].timing(tabsAnims[i], {\n        toValue: i === index ? 1 : 0,\n        duration: theme.isV3 || shifting ? 150 * scale : 0,\n        useNativeDriver: true,\n        easing: animationEasing\n      });\n    })))).start(function () {\n      tabsAnims.map(function (tab, i) {\n        return tab.setValue(i === index ? 1 : 0);\n      });\n      indexAnim.setValue(index);\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    });\n  }, [rippleAnim, theme.isV3, shifting, scale, navigationState.routes, tabsAnims, animationEasing, indexAnim]);\n  React.useEffect(function () {\n    animateToIndex(navigationState.index);\n  }, []);\n  (0, _useIsKeyboardShown[\"default\"])({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide\n  });\n  React.useEffect(function () {\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex]);\n  var eventForIndex = function eventForIndex(index) {\n    var event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: function preventDefault() {\n        event.defaultPrevented = true;\n      }\n    };\n    return event;\n  };\n  var routes = navigationState.routes;\n  var colors = theme.colors,\n    isDarkTheme = theme.dark,\n    mode = theme.mode,\n    isV3 = theme.isV3;\n  var _ref9 = _StyleSheet[\"default\"].flatten(style) || {},\n    customBackground = _ref9.backgroundColor,\n    _ref9$elevation = _ref9.elevation,\n    elevation = _ref9$elevation === void 0 ? 4 : _ref9$elevation;\n  var approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? (0, _overlay[\"default\"])(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.primary;\n  var v2BackgroundColorInterpolation = shifting ? indexAnim.interpolate({\n    inputRange: routes.map(function (_, i) {\n      return i;\n    }),\n    outputRange: routes.map(function (route) {\n      return getColor({\n        route: route\n      }) || approxBackgroundColor;\n    })\n  }) : approxBackgroundColor;\n  var backgroundColor = isV3 ? customBackground || theme.colors.elevation.level2 : shifting ? v2BackgroundColorInterpolation : approxBackgroundColor;\n  var isDark = typeof approxBackgroundColor === 'string' ? !(0, _color[\"default\"])(approxBackgroundColor).isLight() : true;\n  var textColor = isDark ? _colors.white : _colors.black;\n  var activeTintColor = (0, _utils.getActiveTintColor)({\n    activeColor: activeColor,\n    defaultColor: textColor,\n    theme: theme\n  });\n  var inactiveTintColor = (0, _utils.getInactiveTintColor)({\n    inactiveColor: inactiveColor,\n    defaultColor: textColor,\n    theme: theme\n  });\n  var touchColor = (0, _color[\"default\"])(activeTintColor).alpha(0.12).rgb().string();\n  var maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  var maxTabBarWidth = maxTabWidth * routes.length;\n  var rippleSize = layout.width / 4;\n  var insets = {\n    left: (_ref0 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _ref0 !== void 0 ? _ref0 : left,\n    right: (_ref1 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _ref1 !== void 0 ? _ref1 : right,\n    bottom: (_ref10 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _ref10 !== void 0 ? _ref10 : bottom\n  };\n  return React.createElement(_Surface[\"default\"], _extends({}, theme.isV3 && {\n    elevation: 0\n  }, {\n    testID: testID,\n    style: [!theme.isV3 && styles.elevation, styles.bar, keyboardHidesNavigationBar ? {\n      transform: [{\n        translateY: visibleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      position: keyboardVisible ? 'absolute' : undefined\n    } : null, style],\n    pointerEvents: layout.measured ? keyboardHidesNavigationBar && keyboardVisible ? 'none' : 'auto' : 'none',\n    onLayout: onLayout,\n    container: true\n  }), React.createElement(_Animated[\"default\"].View, {\n    style: [styles.barContent, {\n      backgroundColor: backgroundColor\n    }],\n    testID: \"\".concat(testID, \"-content\")\n  }, React.createElement(_View[\"default\"], {\n    style: [styles.items, {\n      marginBottom: insets.bottom,\n      marginHorizontal: Math.max(insets.left, insets.right)\n    }, compact && {\n      maxWidth: maxTabBarWidth\n    }],\n    accessibilityRole: 'tablist',\n    testID: \"\".concat(testID, \"-content-wrapper\")\n  }, shifting && !isV3 ? React.createElement(_Animated[\"default\"].View, {\n    pointerEvents: \"none\",\n    style: [styles.ripple, {\n      top: (BAR_HEIGHT - rippleSize) / 2,\n      left: Math.min(layout.width, maxTabBarWidth) / routes.length * (navigationState.index + 0.5) - rippleSize / 2,\n      height: rippleSize,\n      width: rippleSize,\n      borderRadius: rippleSize / 2,\n      backgroundColor: getColor({\n        route: routes[navigationState.index]\n      }),\n      transform: [{\n        scale: rippleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 8]\n        })\n      }],\n      opacity: rippleAnim.interpolate({\n        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n        outputRange: [0, 0, 1, 1]\n      })\n    }],\n    testID: \"\".concat(testID, \"-content-ripple\")\n  }) : null, routes.map(function (route, index) {\n    var focused = navigationState.index === index;\n    var active = tabsAnims[index];\n    var scale = labeled && shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n    var translateY = labeled ? shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [7, 0]\n    }) : 0 : 7;\n    var activeOpacity = active;\n    var inactiveOpacity = active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    });\n    var v3ActiveOpacity = focused ? 1 : 0;\n    var v3InactiveOpacity = shifting ? inactiveOpacity : focused ? 0 : 1;\n    var outlineScale = focused ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 0;\n    var badge = getBadge({\n      route: route\n    });\n    var activeLabelColor = (0, _utils.getLabelColor)({\n      tintColor: activeTintColor,\n      hasColor: Boolean(activeColor),\n      focused: focused,\n      defaultColor: textColor,\n      theme: theme\n    });\n    var inactiveLabelColor = (0, _utils.getLabelColor)({\n      tintColor: inactiveTintColor,\n      hasColor: Boolean(inactiveColor),\n      focused: focused,\n      defaultColor: textColor,\n      theme: theme\n    });\n    var badgeStyle = {\n      top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n      right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - (!isV3 ? 2 : 0)\n    };\n    var isLegacyOrV3Shifting = !isV3 || isV3 && shifting && labeled;\n    var font = isV3 ? theme.fonts.labelMedium : {};\n    return renderTouchable({\n      key: route.key,\n      route: route,\n      borderless: true,\n      centered: true,\n      rippleColor: isV3 ? 'transparent' : touchColor,\n      onPress: function onPress() {\n        return onTabPress(eventForIndex(index));\n      },\n      onLongPress: function onLongPress() {\n        return onTabLongPress === null || onTabLongPress === void 0 ? void 0 : onTabLongPress(eventForIndex(index));\n      },\n      testID: getTestID({\n        route: route\n      }),\n      accessibilityLabel: getAccessibilityLabel({\n        route: route\n      }),\n      accessibilityRole: _Platform[\"default\"].OS === 'ios' ? 'button' : 'tab',\n      accessibilityState: {\n        selected: focused\n      },\n      style: [styles.item, isV3 && styles.v3Item],\n      children: React.createElement(_View[\"default\"], {\n        pointerEvents: \"none\",\n        style: isV3 && (labeled ? styles.v3TouchableContainer : styles.v3NoLabelContainer)\n      }, React.createElement(_Animated[\"default\"].View, {\n        style: [styles.iconContainer, isV3 && styles.v3IconContainer, isLegacyOrV3Shifting && {\n          transform: [{\n            translateY: translateY\n          }]\n        }]\n      }, isV3 && focused && React.createElement(_Animated[\"default\"].View, {\n        style: [styles.outline, {\n          transform: [{\n            scaleX: outlineScale\n          }],\n          backgroundColor: theme.colors.secondaryContainer\n        }, activeIndicatorStyle]\n      }), React.createElement(_Animated[\"default\"].View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isLegacyOrV3Shifting ? activeOpacity : v3ActiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: true,\n        color: activeTintColor\n      }) : React.createElement(_Icon[\"default\"], {\n        source: route.focusedIcon,\n        color: activeTintColor,\n        size: 24\n      })), React.createElement(_Animated[\"default\"].View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isLegacyOrV3Shifting ? inactiveOpacity : v3InactiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: false,\n        color: inactiveTintColor\n      }) : React.createElement(_Icon[\"default\"], {\n        source: theme.isV3 && route.unfocusedIcon !== undefined ? route.unfocusedIcon : route.focusedIcon,\n        color: inactiveTintColor,\n        size: 24\n      })), React.createElement(_View[\"default\"], {\n        style: [styles.badgeContainer, badgeStyle]\n      }, typeof badge === 'boolean' ? React.createElement(_Badge[\"default\"], {\n        visible: badge,\n        size: isV3 ? 6 : 8\n      }) : React.createElement(_Badge[\"default\"], {\n        visible: badge != null,\n        size: 16\n      }, badge))), labeled ? React.createElement(_Animated[\"default\"].View, {\n        style: [styles.labelContainer, !isV3 && {\n          transform: [{\n            scale: scale\n          }]\n        }]\n      }, React.createElement(_Animated[\"default\"].View, {\n        style: [styles.labelWrapper, {\n          opacity: isLegacyOrV3Shifting ? activeOpacity : v3ActiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: true,\n        color: activeLabelColor\n      }) : React.createElement(_Text[\"default\"], {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        style: [styles.label, _objectSpread({\n          color: activeLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      }))), shifting ? null : React.createElement(_Animated[\"default\"].View, {\n        style: [styles.labelWrapper, {\n          opacity: isLegacyOrV3Shifting ? inactiveOpacity : v3InactiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: false,\n        color: inactiveLabelColor\n      }) : React.createElement(_Text[\"default\"], {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        selectable: false,\n        style: [styles.label, _objectSpread({\n          color: inactiveLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      })))) : !isV3 && React.createElement(_View[\"default\"], {\n        style: styles.labelContainer\n      }))\n    });\n  }))));\n};\nBottomNavigationBar.displayName = 'BottomNavigation.Bar';\nvar _default = exports[\"default\"] = BottomNavigationBar;\nvar styles = _StyleSheet[\"default\"].create({\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: _objectSpread({\n    flexDirection: 'row'\n  }, _Platform[\"default\"].OS === 'web' ? {\n    width: '100%'\n  } : null),\n  item: {\n    flex: 1,\n    paddingVertical: 6\n  },\n  v3Item: {\n    paddingVertical: 0\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  iconWrapper: _objectSpread(_objectSpread({}, _StyleSheet[\"default\"].absoluteFillObject), {}, {\n    alignItems: 'center'\n  }),\n  v3IconWrapper: {\n    top: 4\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: _objectSpread({}, _StyleSheet[\"default\"].absoluteFillObject),\n  label: _objectSpread({\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  }, _Platform[\"default\"].OS === 'web' ? {\n    whiteSpace: 'nowrap',\n    alignSelf: 'center'\n  } : null),\n  badgeContainer: {\n    position: 'absolute',\n    left: 0\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center'\n  },\n  elevation: {\n    elevation: 4\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_Animated","_interopRequireDefault","_Platform","_StyleSheet","_Pressable","_View","_color","_reactNativeSafeAreaContext","_utils","_theming","_overlay","_colors","_useAnimatedValue","_useAnimatedValueArray","_useIsKeyboardShown","_useLayout3","_Badge","_Icon","_Surface","_TouchableRipple","_Text","_excluded","_excluded2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","OUTLINE_WIDTH","Touchable","_ref","_0","route","style","children","borderless","centered","rippleColor","rest","_objectWithoutProperties2","supported","createElement","_extends","disabled","undefined","BottomNavigationBar","_ref2","_ref0","_ref1","_ref10","navigationState","renderIcon","renderLabel","_ref2$renderTouchable","renderTouchable","_ref3","key","props","_ref2$getLabelText","getLabelText","_ref4","title","_ref2$getBadge","getBadge","_ref5","badge","_ref2$getColor","getColor","_ref6","color","_ref2$getAccessibilit","getAccessibilityLabel","_ref7","accessibilityLabel","_ref2$getTestID","getTestID","_ref8","testID","activeColor","inactiveColor","_ref2$keyboardHidesNa","keyboardHidesNavigationBar","OS","activeIndicatorStyle","_ref2$labeled","labeled","animationEasing","onTabPress","onTabLongPress","shiftingProp","shifting","safeAreaInsets","_ref2$labelMaxFontSiz","labelMaxFontSizeMultiplier","compactProp","compact","_ref2$testID","themeOverrides","theme","useInternalTheme","_useSafeAreaInsets","useSafeAreaInsets","bottom","left","right","scale","animation","isV3","routes","console","warn","visibleAnim","tabsAnims","map","_","index","indexAnim","rippleAnim","_useLayout","_useLayout2","_slicedToArray2","layout","onLayout","_React$useState","useState","_React$useState2","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","concat","_toConsumableArray2","easing","tab","useEffect","onShow","onHide","eventForIndex","event","defaultPrevented","preventDefault","colors","isDarkTheme","dark","mode","_ref9","flatten","customBackground","backgroundColor","_ref9$elevation","elevation","approxBackgroundColor","surface","primary","v2BackgroundColorInterpolation","interpolate","inputRange","outputRange","level2","isDark","isLight","textColor","white","black","activeTintColor","getActiveTintColor","defaultColor","inactiveTintColor","getInactiveTintColor","touchColor","alpha","rgb","string","maxTabWidth","maxTabBarWidth","rippleSize","width","insets","styles","bar","transform","translateY","height","position","pointerEvents","measured","container","View","barContent","items","marginBottom","marginHorizontal","Math","max","maxWidth","accessibilityRole","ripple","top","min","borderRadius","opacity","focused","active","activeOpacity","inactiveOpacity","v3ActiveOpacity","v3InactiveOpacity","outlineScale","activeLabelColor","getLabelColor","tintColor","hasColor","Boolean","inactiveLabelColor","badgeStyle","String","isLegacyOrV3Shifting","font","fonts","labelMedium","onPress","onLongPress","accessibilityState","selected","item","v3Item","v3TouchableContainer","v3NoLabelContainer","iconContainer","v3IconContainer","outline","scaleX","secondaryContainer","iconWrapper","v3IconWrapper","source","focusedIcon","size","unfocusedIcon","badgeContainer","visible","labelContainer","labelWrapper","maxFontSizeMultiplier","variant","label","selectable","displayName","_default","exports","create","alignItems","overflow","flexDirection","flex","paddingVertical","marginTop","alignSelf","justifyContent","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace","paddingTop"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\BottomNavigation\\BottomNavigationBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  EasingFunction,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Pressable,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport {\n  getActiveTintColor,\n  getInactiveTintColor,\n  getLabelColor,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport useLayout from '../../utils/useLayout';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { Props as TouchableRippleProps } from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype BaseRoute = {\n  key: string;\n  title?: string;\n  focusedIcon?: IconSource;\n  unfocusedIcon?: IconSource;\n  badge?: string | number | boolean;\n  /**\n   * @deprecated In v5.x works only with theme version 2.\n   */\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n  lazy?: boolean;\n};\n\ntype NavigationState<Route extends BaseRoute> = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps<Route extends BaseRoute> = TouchableRippleProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: ColorValue;\n};\n\nexport type Props<Route extends BaseRoute> = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `false` with theme version 3 and `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   * Note that you need at least 2 tabs be able to run this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * Whether tabs should be spread across the entire width.\n   */\n  compact?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `focusedIcon`:  icon to use as the focused tab icon, can be a string, an image source or a react component @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * - `unfocusedIcon`:  icon to use as the unfocused tab icon, can be a string, an image source or a react component @supported Available in v5.x with theme version 3\n   * - `color`: color to use as background color for shifting bottom navigation @deprecatedProperty In v5.x works only with theme version 2.\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n   *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n   *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n   *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation.Bar` is a controlled component, which means the `index` needs to be updated via the `onTabPress` callback.\n   */\n  navigationState: NavigationState<Route>;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `Pressable` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps<Route>) => React.ReactNode;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab. Use this to update the navigation state.\n   */\n  onTabPress: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Function to execute on tab long press. It receives the route for the pressed tab\n   */\n  onTabLongPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * The scene animation Easing.\n   */\n  animationEasing?: EasingFunction | undefined;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  activeIndicatorStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst OUTLINE_WIDTH = 64;\n\nconst Touchable = <Route extends BaseRoute>({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps<Route>) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <Pressable style={style} {...rest}>\n      {children}\n    </Pressable>\n  );\n\n/**\n * A navigation bar which can easily be integrated with [React Navigation's Bottom Tabs Navigator](https://reactnavigation.org/docs/bottom-tab-navigator/).\n *\n * ## Usage\n * ### without React Navigation\n * ```js\n * import React from 'react';\n * import { useState } from 'react';\n * import { View } from 'react-native';\n * import { BottomNavigation, Text, Provider } from 'react-native-paper';\n * import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\n *\n * function HomeScreen() {\n *   return (\n *     <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *       <Text>Home!</Text>\n *     </View>\n *   );\n * }\n *\n * function SettingsScreen() {\n *   return (\n *     <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *       <Text>Settings!</Text>\n *   </View>\n *   );\n * }\n *\n * export default function MyComponent() {\n *   const [index, setIndex] = useState(0);\n *\n *   const routes = [\n *     { key: 'home', title: 'Home', icon: 'home' },\n *     { key: 'settings', title: 'Settings', icon: 'cog' },\n *   ];\n\n *   const renderScene = ({ route }) => {\n *     switch (route.key) {\n *       case 'home':\n *         return <HomeScreen />;\n *       case 'settings':\n *         return <SettingsScreen />;\n *       default:\n *         return null;\n *     }\n *   };\n *\n *   return (\n *     <Provider>\n *       {renderScene({ route: routes[index] })}\n *       <BottomNavigation.Bar\n *         navigationState={{ index, routes }}\n *         onTabPress={({ route }) => {\n *           const newIndex = routes.findIndex((r) => r.key === route.key);\n *           if (newIndex !== -1) {\n *             setIndex(newIndex);\n *           }\n *         }}\n *         renderIcon={({ route, color }) => (\n *           <Icon name={route.icon} size={24} color={color} />\n *         )}\n *         getLabelText={({ route }) => route.title}\n *       />\n *     </Provider>\n *   );\n * }\n * ```\n */\nconst BottomNavigationBar = <Route extends BaseRoute>({\n  navigationState,\n  renderIcon,\n  renderLabel,\n  renderTouchable = ({ key, ...props }: TouchableProps<Route>) => (\n    <Touchable key={key} {...props} />\n  ),\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = Platform.OS === 'android',\n  style,\n  activeIndicatorStyle,\n  labeled = true,\n  animationEasing,\n  onTabPress,\n  onTabLongPress,\n  shifting: shiftingProp,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n  compact: compactProp,\n  testID = 'bottom-navigation-bar',\n  theme: themeOverrides,\n}: Props<Route>) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { bottom, left, right } = useSafeAreaInsets();\n  const { scale } = theme.animation;\n  const compact = compactProp ?? !theme.isV3;\n  let shifting =\n    shiftingProp ?? (theme.isV3 ? false : navigationState.routes.length > 3);\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn(\n      'BottomNavigation.Bar needs at least 2 tabs to run shifting animation'\n    );\n  }\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors?.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: theme.isV3 || shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: animationEasing,\n          })\n        ),\n      ]).start(() => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n      });\n    },\n    [\n      rippleAnim,\n      theme.isV3,\n      shifting,\n      scale,\n      navigationState.routes,\n      tabsAnims,\n      animationEasing,\n      indexAnim,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  React.useEffect(() => {\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex]);\n\n  const eventForIndex = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    return event;\n  };\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode, isV3 } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 } =\n    (StyleSheet.flatten(style) || {}) as {\n      elevation?: number;\n      backgroundColor?: ColorValue;\n    };\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors?.surface)\n    : colors?.primary;\n\n  const v2BackgroundColorInterpolation = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const backgroundColor = isV3\n    ? customBackground || theme.colors.elevation.level2\n    : shifting\n    ? v2BackgroundColorInterpolation\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n\n  const activeTintColor = getActiveTintColor({\n    activeColor,\n    defaultColor: textColor,\n    theme,\n  });\n\n  const inactiveTintColor = getInactiveTintColor({\n    inactiveColor,\n    defaultColor: textColor,\n    theme,\n  });\n  const touchColor = color(activeTintColor).alpha(0.12).rgb().string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? left,\n    right: safeAreaInsets?.right ?? right,\n    bottom: safeAreaInsets?.bottom ?? bottom,\n  };\n\n  return (\n    <Surface\n      {...(theme.isV3 && { elevation: 0 })}\n      testID={testID}\n      style={[\n        !theme.isV3 && styles.elevation,\n        styles.bar,\n        keyboardHidesNavigationBar // eslint-disable-next-line react-native/no-inline-styles\n          ? {\n              // When the keyboard is shown, slide down the navigation bar\n              transform: [\n                {\n                  translateY: visibleAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layout.height, 0],\n                  }),\n                },\n              ],\n              // Absolutely position the navigation bar so that the content is below it\n              // This is needed to avoid gap at bottom when the navigation bar is hidden\n              position: keyboardVisible ? 'absolute' : undefined,\n            }\n          : null,\n        style,\n      ]}\n      pointerEvents={\n        layout.measured\n          ? keyboardHidesNavigationBar && keyboardVisible\n            ? 'none'\n            : 'auto'\n          : 'none'\n      }\n      onLayout={onLayout}\n      container\n    >\n      <Animated.View\n        style={[styles.barContent, { backgroundColor }]}\n        testID={`${testID}-content`}\n      >\n        <View\n          style={[\n            styles.items,\n            {\n              marginBottom: insets.bottom,\n              marginHorizontal: Math.max(insets.left, insets.right),\n            },\n            compact && {\n              maxWidth: maxTabBarWidth,\n            },\n          ]}\n          accessibilityRole={'tablist'}\n          testID={`${testID}-content-wrapper`}\n        >\n          {shifting && !isV3 ? (\n            <Animated.View\n              pointerEvents=\"none\"\n              style={[\n                styles.ripple,\n                {\n                  // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                  // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                  top: (BAR_HEIGHT - rippleSize) / 2,\n                  left:\n                    (Math.min(layout.width, maxTabBarWidth) / routes.length) *\n                      (navigationState.index + 0.5) -\n                    rippleSize / 2,\n                  height: rippleSize,\n                  width: rippleSize,\n                  borderRadius: rippleSize / 2,\n                  backgroundColor: getColor({\n                    route: routes[navigationState.index],\n                  }),\n                  transform: [\n                    {\n                      // Scale to twice the size  to ensure it covers the whole navigation bar\n                      scale: rippleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0, 8],\n                      }),\n                    },\n                  ],\n                  opacity: rippleAnim.interpolate({\n                    inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                    outputRange: [0, 0, 1, 1],\n                  }),\n                },\n              ]}\n              testID={`${testID}-content-ripple`}\n            />\n          ) : null}\n          {routes.map((route, index) => {\n            const focused = navigationState.index === index;\n            const active = tabsAnims[index];\n\n            // Scale the label up\n            const scale =\n              labeled && shifting\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5, 1],\n                  })\n                : 1;\n\n            // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n            const translateY = labeled\n              ? shifting\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [7, 0],\n                  })\n                : 0\n              : 7;\n\n            // We render the active icon and label on top of inactive ones and cross-fade them on change.\n            // This trick gives the illusion that we are animating between active and inactive colors.\n            // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n            const activeOpacity = active;\n            const inactiveOpacity = active.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            });\n\n            const v3ActiveOpacity = focused ? 1 : 0;\n            const v3InactiveOpacity = shifting\n              ? inactiveOpacity\n              : focused\n              ? 0\n              : 1;\n\n            // Scale horizontally the outline pill\n            const outlineScale = focused\n              ? active.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.5, 1],\n                })\n              : 0;\n\n            const badge = getBadge({ route });\n\n            const activeLabelColor = getLabelColor({\n              tintColor: activeTintColor,\n              hasColor: Boolean(activeColor),\n              focused,\n              defaultColor: textColor,\n              theme,\n            });\n\n            const inactiveLabelColor = getLabelColor({\n              tintColor: inactiveTintColor,\n              hasColor: Boolean(inactiveColor),\n              focused,\n              defaultColor: textColor,\n              theme,\n            });\n\n            const badgeStyle = {\n              top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n              right:\n                (badge != null && typeof badge !== 'boolean'\n                  ? String(badge).length * -2\n                  : 0) - (!isV3 ? 2 : 0),\n            };\n\n            const isLegacyOrV3Shifting = !isV3 || (isV3 && shifting && labeled);\n\n            const font = isV3 ? theme.fonts.labelMedium : {};\n\n            return renderTouchable({\n              key: route.key,\n              route,\n              borderless: true,\n              centered: true,\n              rippleColor: isV3 ? 'transparent' : touchColor,\n              onPress: () => onTabPress(eventForIndex(index)),\n              onLongPress: () => onTabLongPress?.(eventForIndex(index)),\n              testID: getTestID({ route }),\n              accessibilityLabel: getAccessibilityLabel({ route }),\n              accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n              accessibilityState: { selected: focused },\n              style: [styles.item, isV3 && styles.v3Item],\n              children: (\n                <View\n                  pointerEvents=\"none\"\n                  style={\n                    isV3 &&\n                    (labeled\n                      ? styles.v3TouchableContainer\n                      : styles.v3NoLabelContainer)\n                  }\n                >\n                  <Animated.View\n                    style={[\n                      styles.iconContainer,\n                      isV3 && styles.v3IconContainer,\n                      isLegacyOrV3Shifting && {\n                        transform: [{ translateY }],\n                      },\n                    ]}\n                  >\n                    {isV3 && focused && (\n                      <Animated.View\n                        style={[\n                          styles.outline,\n                          {\n                            transform: [\n                              {\n                                scaleX: outlineScale,\n                              },\n                            ],\n                            backgroundColor: theme.colors.secondaryContainer,\n                          },\n                          activeIndicatorStyle,\n                        ]}\n                      />\n                    )}\n                    <Animated.View\n                      style={[\n                        styles.iconWrapper,\n                        isV3 && styles.v3IconWrapper,\n                        {\n                          opacity: isLegacyOrV3Shifting\n                            ? activeOpacity\n                            : v3ActiveOpacity,\n                        },\n                      ]}\n                    >\n                      {renderIcon ? (\n                        renderIcon({\n                          route,\n                          focused: true,\n                          color: activeTintColor,\n                        })\n                      ) : (\n                        <Icon\n                          source={route.focusedIcon as IconSource}\n                          color={activeTintColor}\n                          size={24}\n                        />\n                      )}\n                    </Animated.View>\n                    <Animated.View\n                      style={[\n                        styles.iconWrapper,\n                        isV3 && styles.v3IconWrapper,\n                        {\n                          opacity: isLegacyOrV3Shifting\n                            ? inactiveOpacity\n                            : v3InactiveOpacity,\n                        },\n                      ]}\n                    >\n                      {renderIcon ? (\n                        renderIcon({\n                          route,\n                          focused: false,\n                          color: inactiveTintColor,\n                        })\n                      ) : (\n                        <Icon\n                          source={\n                            theme.isV3 && route.unfocusedIcon !== undefined\n                              ? route.unfocusedIcon\n                              : (route.focusedIcon as IconSource)\n                          }\n                          color={inactiveTintColor}\n                          size={24}\n                        />\n                      )}\n                    </Animated.View>\n                    <View style={[styles.badgeContainer, badgeStyle]}>\n                      {typeof badge === 'boolean' ? (\n                        <Badge visible={badge} size={isV3 ? 6 : 8} />\n                      ) : (\n                        <Badge visible={badge != null} size={16}>\n                          {badge}\n                        </Badge>\n                      )}\n                    </View>\n                  </Animated.View>\n                  {labeled ? (\n                    <Animated.View\n                      style={[\n                        styles.labelContainer,\n                        !isV3 && { transform: [{ scale }] },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[\n                          styles.labelWrapper,\n                          {\n                            opacity: isLegacyOrV3Shifting\n                              ? activeOpacity\n                              : v3ActiveOpacity,\n                          },\n                        ]}\n                      >\n                        {renderLabel ? (\n                          renderLabel({\n                            route,\n                            focused: true,\n                            color: activeLabelColor,\n                          })\n                        ) : (\n                          <Text\n                            maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                            variant=\"labelMedium\"\n                            style={[\n                              styles.label,\n                              {\n                                color: activeLabelColor,\n                                ...font,\n                              },\n                            ]}\n                          >\n                            {getLabelText({ route })}\n                          </Text>\n                        )}\n                      </Animated.View>\n                      {shifting ? null : (\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            {\n                              opacity: isLegacyOrV3Shifting\n                                ? inactiveOpacity\n                                : v3InactiveOpacity,\n                            },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: false,\n                              color: inactiveLabelColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              variant=\"labelMedium\"\n                              selectable={false}\n                              style={[\n                                styles.label,\n                                {\n                                  color: inactiveLabelColor,\n                                  ...font,\n                                },\n                              ]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                      )}\n                    </Animated.View>\n                  ) : (\n                    !isV3 && <View style={styles.labelContainer} />\n                  )}\n                </View>\n              ),\n            });\n          })}\n        </View>\n      </Animated.View>\n    </Surface>\n  );\n};\n\nBottomNavigationBar.displayName = 'BottomNavigation.Bar';\n\nexport default BottomNavigationBar;\n\nconst styles = StyleSheet.create({\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  v3Item: {\n    paddingVertical: 0,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  v3IconWrapper: {\n    top: 4,\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16,\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center',\n  },\n  elevation: {\n    elevation: 4,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}