{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.CheckboxAndroid = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _excluded = [\"status\", \"theme\", \"disabled\", \"onPress\", \"testID\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar ANIMATION_DURATION = 100;\nvar CheckboxAndroid = exports.CheckboxAndroid = function CheckboxAndroid(_ref) {\n  var status = _ref.status,\n    themeOverrides = _ref.theme,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    testID = _ref.testID,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _React$useRef = React.useRef(new _Animated[\"default\"].Value(1)),\n    scaleAnim = _React$useRef.current;\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    var checked = status === 'checked';\n    _Animated[\"default\"].sequence([_Animated[\"default\"].timing(scaleAnim, {\n      toValue: 0.85,\n      duration: checked ? ANIMATION_DURATION * scale : 0,\n      useNativeDriver: false\n    }), _Animated[\"default\"].timing(scaleAnim, {\n      toValue: 1,\n      duration: checked ? ANIMATION_DURATION * scale : ANIMATION_DURATION * scale * 1.75,\n      useNativeDriver: false\n    })]).start();\n  }, [status, scaleAnim, scale]);\n  var checked = status === 'checked';\n  var indeterminate = status === 'indeterminate';\n  var _getAndroidSelectionC = (0, _utils.getAndroidSelectionControlColor)({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor\n    }),\n    rippleColor = _getAndroidSelectionC.rippleColor,\n    selectionControlColor = _getAndroidSelectionC.selectionControlColor;\n  var borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0]\n  });\n  var icon = indeterminate ? 'minus-box' : checked ? 'checkbox-marked' : 'checkbox-blank-outline';\n  return React.createElement(_TouchableRipple[\"default\"], _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled,\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled: disabled,\n      checked: checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID,\n    theme: theme\n  }), React.createElement(_Animated[\"default\"].View, {\n    style: {\n      transform: [{\n        scale: scaleAnim\n      }]\n    }\n  }, React.createElement(_MaterialCommunityIcon[\"default\"], {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: selectionControlColor,\n    direction: \"ltr\"\n  }), React.createElement(_View[\"default\"], {\n    style: [_StyleSheet[\"default\"].absoluteFill, styles.fillContainer]\n  }, React.createElement(_Animated[\"default\"].View, {\n    style: [styles.fill, {\n      borderColor: selectionControlColor\n    }, {\n      borderWidth: borderWidth\n    }]\n  }))));\n};\nCheckboxAndroid.displayName = 'Checkbox.Android';\nvar styles = _StyleSheet[\"default\"].create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fill: {\n    height: 14,\n    width: 14\n  }\n});\nvar _default = exports[\"default\"] = CheckboxAndroid;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_Animated","_interopRequireDefault","_StyleSheet","_View","_utils","_theming","_MaterialCommunityIcon","_TouchableRipple","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ANIMATION_DURATION","CheckboxAndroid","exports","_ref","status","themeOverrides","theme","disabled","onPress","testID","rest","_objectWithoutProperties2","useInternalTheme","_React$useRef","useRef","Value","scaleAnim","current","isFirstRendering","scale","animation","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","borderWidth","interpolate","inputRange","outputRange","icon","createElement","_extends","borderless","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","transform","allowFontScaling","name","size","direction","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","_default"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\Checkbox\\CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { getAndroidSelectionControlColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst CheckboxAndroid = ({\n  status,\n  theme: themeOverrides,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { rippleColor, selectionControlColor } =\n    getAndroidSelectionControlColor({\n      theme,\n      disabled,\n      checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor,\n    });\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n      theme={theme}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={selectionControlColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: selectionControlColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default CheckboxAndroid;\n\n// @component-docs ignore-next-line\nexport { CheckboxAndroid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}