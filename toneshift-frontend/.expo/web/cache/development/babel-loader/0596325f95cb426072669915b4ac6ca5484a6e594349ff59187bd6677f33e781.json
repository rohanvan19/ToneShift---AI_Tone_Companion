{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DataTablePagination = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _I18nManager = _interopRequireDefault(require(\"react-native-web/dist/exports/I18nManager\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _theming = require(\"../../core/theming\");\nvar _Button = _interopRequireDefault(require(\"../Button/Button\"));\nvar _IconButton = _interopRequireDefault(require(\"../IconButton/IconButton\"));\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\nvar _Menu = _interopRequireDefault(require(\"../Menu/Menu\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"label\", \"accessibilityLabel\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"showFastPaginationControls\", \"numberOfItemsPerPageList\", \"numberOfItemsPerPage\", \"onItemsPerPageChange\", \"selectPageDropdownLabel\", \"selectPageDropdownAccessibilityLabel\", \"selectPageDropdownRippleColor\", \"dropdownItemRippleColor\", \"theme\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar PaginationControls = function PaginationControls(_ref) {\n  var page = _ref.page,\n    numberOfPages = _ref.numberOfPages,\n    onPageChange = _ref.onPageChange,\n    showFastPaginationControls = _ref.showFastPaginationControls,\n    themeOverrides = _ref.theme,\n    paginationControlRippleColor = _ref.paginationControlRippleColor;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  return React.createElement(React.Fragment, null, showFastPaginationControls ? React.createElement(_IconButton[\"default\"], {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n        color = _ref2.color;\n      return React.createElement(_MaterialCommunityIcon[\"default\"], {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: _I18nManager[\"default\"].getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(0);\n    },\n    accessibilityLabel: \"page-first\",\n    theme: theme\n  }) : null, React.createElement(_IconButton[\"default\"], {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n        color = _ref3.color;\n      return React.createElement(_MaterialCommunityIcon[\"default\"], {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: _I18nManager[\"default\"].getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    },\n    accessibilityLabel: \"chevron-left\",\n    theme: theme\n  }), React.createElement(_IconButton[\"default\"], {\n    icon: function icon(_ref4) {\n      var size = _ref4.size,\n        color = _ref4.color;\n      return React.createElement(_MaterialCommunityIcon[\"default\"], {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: _I18nManager[\"default\"].getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    },\n    accessibilityLabel: \"chevron-right\",\n    theme: theme\n  }), showFastPaginationControls ? React.createElement(_IconButton[\"default\"], {\n    icon: function icon(_ref5) {\n      var size = _ref5.size,\n        color = _ref5.color;\n      return React.createElement(_MaterialCommunityIcon[\"default\"], {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: _I18nManager[\"default\"].getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    rippleColor: paginationControlRippleColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(numberOfPages - 1);\n    },\n    accessibilityLabel: \"page-last\",\n    theme: theme\n  }) : null);\n};\nvar PaginationDropdown = function PaginationDropdown(_ref6) {\n  var numberOfItemsPerPageList = _ref6.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref6.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref6.onItemsPerPageChange,\n    themeOverrides = _ref6.theme,\n    selectPageDropdownRippleColor = _ref6.selectPageDropdownRippleColor,\n    dropdownItemRippleColor = _ref6.dropdownItemRippleColor;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var colors = theme.colors;\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    showSelect = _React$useState2[0],\n    toggleSelect = _React$useState2[1];\n  return React.createElement(_Menu[\"default\"], {\n    visible: showSelect,\n    onDismiss: function onDismiss() {\n      return toggleSelect(!showSelect);\n    },\n    theme: theme,\n    anchor: React.createElement(_Button[\"default\"], {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return toggleSelect(true);\n      },\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle,\n      theme: theme,\n      rippleColor: selectPageDropdownRippleColor\n    }, \"\".concat(numberOfItemsPerPage))\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(function (option) {\n    return React.createElement(_Menu[\"default\"].Item, {\n      key: option,\n      titleStyle: option === numberOfItemsPerPage && {\n        color: colors === null || colors === void 0 ? void 0 : colors.primary\n      },\n      onPress: function onPress() {\n        onItemsPerPageChange === null || onItemsPerPageChange === void 0 || onItemsPerPageChange(option);\n        toggleSelect(false);\n      },\n      rippleColor: dropdownItemRippleColor,\n      title: option,\n      theme: theme\n    });\n  }));\n};\nvar DataTablePagination = exports.DataTablePagination = function DataTablePagination(_ref7) {\n  var label = _ref7.label,\n    accessibilityLabel = _ref7.accessibilityLabel,\n    page = _ref7.page,\n    numberOfPages = _ref7.numberOfPages,\n    onPageChange = _ref7.onPageChange,\n    style = _ref7.style,\n    _ref7$showFastPaginat = _ref7.showFastPaginationControls,\n    showFastPaginationControls = _ref7$showFastPaginat === void 0 ? false : _ref7$showFastPaginat,\n    numberOfItemsPerPageList = _ref7.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref7.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref7.onItemsPerPageChange,\n    selectPageDropdownLabel = _ref7.selectPageDropdownLabel,\n    selectPageDropdownAccessibilityLabel = _ref7.selectPageDropdownAccessibilityLabel,\n    selectPageDropdownRippleColor = _ref7.selectPageDropdownRippleColor,\n    dropdownItemRippleColor = _ref7.dropdownItemRippleColor,\n    themeOverrides = _ref7.theme,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref7, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var labelColor = (0, _color[\"default\"])(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(_View[\"default\"], _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && React.createElement(_View[\"default\"], {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, React.createElement(_Text[\"default\"], {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange,\n    selectPageDropdownRippleColor: selectPageDropdownRippleColor,\n    dropdownItemRippleColor: dropdownItemRippleColor,\n    theme: theme\n  })), React.createElement(_Text[\"default\"], {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), React.createElement(_View[\"default\"], {\n    style: styles.iconsContainer\n  }, React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages,\n    theme: theme\n  })));\n};\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = _StyleSheet[\"default\"].create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nvar _default = exports[\"default\"] = DataTablePagination;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_I18nManager","_interopRequireDefault","_StyleSheet","_View","_color","_theming","_Button","_IconButton","_MaterialCommunityIcon","_Menu","_Text","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","PaginationControls","_ref","page","numberOfPages","onPageChange","showFastPaginationControls","themeOverrides","theme","paginationControlRippleColor","useInternalTheme","textColor","isV3","colors","onSurface","text","createElement","Fragment","icon","_ref2","size","color","name","direction","getConstants","isRTL","iconColor","rippleColor","disabled","onPress","accessibilityLabel","_ref3","_ref4","_ref5","PaginationDropdown","_ref6","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","selectPageDropdownRippleColor","dropdownItemRippleColor","_React$useState","useState","_React$useState2","_slicedToArray2","showSelect","toggleSelect","visible","onDismiss","anchor","mode","style","styles","button","contentStyle","concat","map","option","Item","key","titleStyle","primary","title","DataTablePagination","exports","_ref7","label","_ref7$showFastPaginat","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","_objectWithoutProperties2","labelColor","alpha","rgb","string","_extends","container","optionsContainer","numberOfLines","iconsContainer","displayName","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign","_default"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\DataTable\\DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme?: ThemeProp;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n  /**\n   * Color of the dropdown item ripple effect.\n   */\n  dropdownItemRippleColor?: ColorValue;\n  /**\n   * Color of the select page dropdown ripple effect.\n   */\n  selectPageDropdownRippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n  /**\n   * Color of the pagination control ripple effect.\n   */\n  paginationControlRippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n  theme: themeOverrides,\n  paginationControlRippleColor,\n}: PaginationControlsProps) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          rippleColor={paginationControlRippleColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n          theme={theme}\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        rippleColor={paginationControlRippleColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n        theme={theme}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        rippleColor={paginationControlRippleColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n        theme={theme}\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          rippleColor={paginationControlRippleColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n          theme={theme}\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  theme: themeOverrides,\n  selectPageDropdownRippleColor,\n  dropdownItemRippleColor,\n}: PaginationDropdownProps) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { colors } = theme;\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      theme={theme}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n          theme={theme}\n          rippleColor={selectPageDropdownRippleColor}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          rippleColor={dropdownItemRippleColor}\n          title={option}\n          theme={theme}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  selectPageDropdownRippleColor,\n  dropdownItemRippleColor,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n              selectPageDropdownRippleColor={selectPageDropdownRippleColor}\n              dropdownItemRippleColor={dropdownItemRippleColor}\n              theme={theme}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n          theme={theme}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default DataTablePagination;\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}