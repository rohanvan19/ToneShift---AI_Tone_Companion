{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pressable = void 0;\nvar _Pressable = _interopRequireDefault(require(\"react-native-web/dist/exports/Pressable\"));\nvar Pressable = exports.Pressable = _Pressable[\"default\"];","map":{"version":3,"names":["Pressable","exports","_Pressable"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\TouchableRipple\\Pressable.tsx"],"sourcesContent":["import type * as React from 'react';\nimport type {\n  Animated,\n  PressableProps as PressableNativeProps,\n  StyleProp,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { Pressable as PressableNative } from 'react-native';\n\n// This component is added to support type-safe hover and focus states on web\n// https://necolas.github.io/react-native-web/docs/pressable/\n\nexport type PressableStateCallbackType = {\n  hovered: boolean;\n  pressed: boolean;\n  focused: boolean;\n};\n\nexport type PressableProps = Omit<\n  PressableNativeProps,\n  'children' | 'style'\n> & {\n  children:\n    | React.ReactNode\n    | ((state: PressableStateCallbackType) => React.ReactNode)\n    | undefined;\n  style?:\n    | StyleProp<ViewStyle>\n    | Animated.WithAnimatedValue<StyleProp<ViewStyle>>\n    | ((\n        state: PressableStateCallbackType\n      ) =>\n        | StyleProp<ViewStyle>\n        | Animated.WithAnimatedValue<StyleProp<ViewStyle>>)\n    | undefined;\n};\n\nexport const Pressable: React.ForwardRefExoticComponent<\n  PressableProps & React.RefAttributes<View>\n> = PressableNative as any;\n"],"mappings":";;;;;;;;AAsCO,IAAMA,SAEZ,GAAAC,OAAA,CAAAD,SAAA,GAAGE,UAAA,WAAsB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}