{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = resolveAssetSource;\nexports.pickScale = void 0;\nexports.setCustomSourceTransformer = setCustomSourceTransformer;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _registry = require(\"@react-native/assets-registry/registry\");\nvar _AssetSourceResolver = _interopRequireDefault(require(\"./AssetSourceResolver\"));\nvar _customSourceTransformer;\nfunction setCustomSourceTransformer(transformer) {\n  _customSourceTransformer = transformer;\n}\nfunction resolveAssetSource(source) {\n  if ((0, _typeof2[\"default\"])(source) === 'object') {\n    return source;\n  }\n  var asset = (0, _registry.getAssetByID)(source);\n  if (!asset) {\n    return null;\n  }\n  var resolver = new _AssetSourceResolver[\"default\"]('https://expo.dev', null, asset);\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get: function get() {\n    return setCustomSourceTransformer;\n  }\n});\nvar pickScale = exports.pickScale = _AssetSourceResolver[\"default\"].pickScale;","map":{"version":3,"names":["_registry","require","_AssetSourceResolver","_interopRequireDefault","_customSourceTransformer","setCustomSourceTransformer","transformer","resolveAssetSource","source","_typeof2","asset","getAssetByID","resolver","defaultAsset","Object","defineProperty","get","pickScale","exports"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\expo-asset\\src\\resolveAssetSource.ts"],"sourcesContent":["import { getAssetByID } from '@react-native/assets-registry/registry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | null {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n\n  const resolver = new AssetSourceResolver(\n    // Doesn't matter since this is removed on web\n    'https://expo.dev',\n    null,\n    asset\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAEA,IAAAC,oBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAIG,wBAAwB;AAEtB,SAAUC,0BAA0BA,CACxCC,WAAmE;EAEnEF,wBAAwB,GAAGE,WAAW;AACxC;AAMc,SAAUC,kBAAkBA,CAACC,MAAW;EACpD,IAAI,IAAAC,QAAA,aAAOD,MAAM,MAAK,QAAQ,EAAE;IAC9B,OAAOA,MAAM;;EAGf,IAAME,KAAK,GAAG,IAAAV,SAAA,CAAAW,YAAY,EAACH,MAAM,CAAC;EAClC,IAAI,CAACE,KAAK,EAAE;IACV,OAAO,IAAI;;EAGb,IAAME,QAAQ,GAAG,IAAIV,oBAAA,WAAmB,CAEtC,kBAAkB,EAClB,IAAI,EACJQ,KAAK,CACN;EACD,IAAIN,wBAAwB,EAAE;IAC5B,OAAOA,wBAAwB,CAACQ,QAAQ,CAAC;;EAE3C,OAAOA,QAAQ,CAACC,YAAY,EAAE;AAChC;AAEAC,MAAM,CAACC,cAAc,CAACR,kBAAkB,EAAE,4BAA4B,EAAE;EACtES,GAAG,WAAHA,GAAGA,CAAA;IACD,OAAOX,0BAA0B;EACnC;CACD,CAAC;AAEK,IAAQY,SAAS,GAAAC,OAAA,CAAAD,SAAA,GAAKf,oBAAA,WAAmB,CAAjCe,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}