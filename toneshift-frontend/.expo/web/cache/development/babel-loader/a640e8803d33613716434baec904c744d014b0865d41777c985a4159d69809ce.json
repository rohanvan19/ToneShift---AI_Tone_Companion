{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getPathFromState;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar queryString = _interopRequireWildcard(require(\"query-string\"));\nvar _fromEntries = _interopRequireDefault(require(\"./fromEntries\"));\nvar _validatePathConfig = _interopRequireDefault(require(\"./validatePathConfig\"));\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar _getActiveRoute = function getActiveRoute(state) {\n  var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n  if (route.state) {\n    return _getActiveRoute(route.state);\n  }\n  return route;\n};\nfunction getPathFromState(state, options) {\n  if (state == null) {\n    throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n  }\n  if (options) {\n    (0, _validatePathConfig[\"default\"])(options);\n  }\n  var configs = options !== null && options !== void 0 && options.screens ? createNormalizedConfigs(options === null || options === void 0 ? void 0 : options.screens) : {};\n  var path = '/';\n  var current = state;\n  var allParams = {};\n  var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern;\n      var focusedParams;\n      var focusedRoute = _getActiveRoute(state);\n      var currentOptions = configs;\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function _loop2() {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var stringify = (_currentOptions$route = currentOptions[route.name]) === null || _currentOptions$route === void 0 ? void 0 : _currentOptions$route.stringify;\n          var currentParams = (0, _fromEntries[\"default\"])(Object.entries(route.params).map(function (_ref) {\n            var _ref3 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n              key = _ref3[0],\n              value = _ref3[1];\n            return [key, stringify !== null && stringify !== void 0 && stringify[key] ? stringify[key](value) : String(value)];\n          }));\n          if (pattern) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            focusedParams = _objectSpread({}, currentParams);\n            (_pattern = pattern) === null || _pattern === void 0 ? void 0 : _pattern.split('/').filter(function (p) {\n              return p.startsWith(':');\n            }).forEach(function (p) {\n              var name = getParamName(p);\n              if (focusedParams) {\n                delete focusedParams[name];\n              }\n            });\n          }\n        }\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(function (p) {\n          var name = getParamName(p);\n          if (p === '*') {\n            return route.name;\n          }\n          if (p.startsWith(':')) {\n            var value = allParams[name];\n            if (value === undefined && p.endsWith('?')) {\n              return '';\n            }\n            return encodeURIComponent(value);\n          }\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += \"?\".concat(query);\n        }\n      }\n      current = route.state;\n    },\n    _currentOptions$route,\n    _pattern;\n  while (current) {\n    _loop();\n  }\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n  return path;\n}\nvar getParamName = function getParamName(pattern) {\n  return pattern.replace(/^:/, '').replace(/\\?$/, '');\n};\nvar joinPaths = function joinPaths() {\n  var _ref4;\n  for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n    paths[_key] = arguments[_key];\n  }\n  return (_ref4 = []).concat.apply(_ref4, (0, _toConsumableArray2[\"default\"])(paths.map(function (p) {\n    return p.split('/');\n  }))).filter(Boolean).join('/');\n};\nvar createConfigItem = function createConfigItem(config, parentPattern) {\n  var _pattern2;\n  if (typeof config === 'string') {\n    var _pattern3 = parentPattern ? joinPaths(parentPattern, config) : config;\n    return {\n      pattern: _pattern3\n    };\n  }\n  var pattern;\n  if (config.exact && config.path === undefined) {\n    throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n  }\n  pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n  var screens = config.screens ? createNormalizedConfigs(config.screens, pattern) : undefined;\n  return {\n    pattern: (_pattern2 = pattern) === null || _pattern2 === void 0 ? void 0 : _pattern2.split('/').filter(Boolean).join('/'),\n    stringify: config.stringify,\n    screens: screens\n  };\n};\nvar createNormalizedConfigs = function createNormalizedConfigs(options, pattern) {\n  return (0, _fromEntries[\"default\"])(Object.entries(options).map(function (_ref2) {\n    var _ref5 = (0, _slicedToArray2[\"default\"])(_ref2, 2),\n      name = _ref5[0],\n      c = _ref5[1];\n    var result = createConfigItem(c, pattern);\n    return [name, result];\n  }));\n};","map":{"version":3,"names":["queryString","_interopRequireWildcard","require","_fromEntries","_interopRequireDefault","_validatePathConfig","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_getActiveRoute","getActiveRoute","state","route","index","routes","getPathFromState","options","Error","configs","screens","createNormalizedConfigs","path","current","allParams","_loop","pattern","focusedParams","focusedRoute","currentOptions","nestedRouteNames","hasNext","_loop2","name","params","stringify","_currentOptions$route","currentParams","entries","map","_ref","_ref3","_slicedToArray2","key","value","String","assign","_pattern","split","p","startsWith","getParamName","undefined","nextRoute","nestedConfig","join","endsWith","encodeURIComponent","param","query","sort","concat","replace","joinPaths","_ref4","_len","paths","Array","_key","_toConsumableArray2","Boolean","createConfigItem","config","parentPattern","_pattern2","_pattern3","exact","_ref2","_ref5","c","result"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\@react-navigation\\core\\src\\getPathFromState.tsx"],"sourcesContent":["import type {\n  NavigationState,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as queryString from 'query-string';\n\nimport fromEntries from './fromEntries';\nimport type { PathConfig, PathConfigMap } from './types';\nimport validatePathConfig from './validatePathConfig';\n\ntype Options<ParamList extends {}> = {\n  initialRouteName?: string;\n  screens: PathConfigMap<ParamList>;\n};\n\ntype State = NavigationState | Omit<PartialState<NavigationState>, 'stale'>;\n\ntype StringifyConfig = Record<string, (value: any) => string>;\n\ntype ConfigItem = {\n  pattern?: string;\n  stringify?: StringifyConfig;\n  screens?: Record<string, ConfigItem>;\n};\n\nconst getActiveRoute = (state: State): { name: string; params?: object } => {\n  const route =\n    typeof state.index === 'number'\n      ? state.routes[state.index]\n      : state.routes[state.routes.length - 1];\n\n  if (route.state) {\n    return getActiveRoute(route.state);\n  }\n\n  return route;\n};\n\n/**\n * Utility to serialize a navigation state object to a path string.\n *\n * @example\n * ```js\n * getPathFromState(\n *   {\n *     routes: [\n *       {\n *         name: 'Chat',\n *         params: { author: 'Jane', id: 42 },\n *       },\n *     ],\n *   },\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         stringify: { author: author => author.toLowerCase() }\n *       }\n *     }\n *   }\n * )\n * ```\n *\n * @param state Navigation state to serialize.\n * @param options Extra options to fine-tune how to serialize the path.\n * @returns Path representing the state, e.g. /foo/bar?count=42.\n */\nexport default function getPathFromState<ParamList extends {}>(\n  state: State,\n  options?: Options<ParamList>\n): string {\n  if (state == null) {\n    throw Error(\n      \"Got 'undefined' for the navigation state. You must pass a valid state object.\"\n    );\n  }\n\n  if (options) {\n    validatePathConfig(options);\n  }\n\n  // Create a normalized configs object which will be easier to use\n  const configs: Record<string, ConfigItem> = options?.screens\n    ? createNormalizedConfigs(options?.screens)\n    : {};\n\n  let path = '/';\n  let current: State | undefined = state;\n\n  const allParams: Record<string, any> = {};\n\n  while (current) {\n    let index = typeof current.index === 'number' ? current.index : 0;\n    let route = current.routes[index] as Route<string> & {\n      state?: State;\n    };\n\n    let pattern: string | undefined;\n\n    let focusedParams: Record<string, any> | undefined;\n    let focusedRoute = getActiveRoute(state);\n    let currentOptions = configs;\n\n    // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n    let nestedRouteNames = [];\n\n    let hasNext = true;\n\n    while (route.name in currentOptions && hasNext) {\n      pattern = currentOptions[route.name].pattern;\n\n      nestedRouteNames.push(route.name);\n\n      if (route.params) {\n        const stringify = currentOptions[route.name]?.stringify;\n\n        const currentParams = fromEntries(\n          Object.entries(route.params).map(([key, value]) => [\n            key,\n            stringify?.[key] ? stringify[key](value) : String(value),\n          ])\n        );\n\n        if (pattern) {\n          Object.assign(allParams, currentParams);\n        }\n\n        if (focusedRoute === route) {\n          // If this is the focused route, keep the params for later use\n          // We save it here since it's been stringified already\n          focusedParams = { ...currentParams };\n\n          pattern\n            ?.split('/')\n            .filter((p) => p.startsWith(':'))\n            // eslint-disable-next-line no-loop-func\n            .forEach((p) => {\n              const name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n        }\n      }\n\n      // If there is no `screens` property or no nested state, we return pattern\n      if (!currentOptions[route.name].screens || route.state === undefined) {\n        hasNext = false;\n      } else {\n        index =\n          typeof route.state.index === 'number'\n            ? route.state.index\n            : route.state.routes.length - 1;\n\n        const nextRoute = route.state.routes[index];\n        const nestedConfig = currentOptions[route.name].screens;\n\n        // if there is config for next route name, we go deeper\n        if (nestedConfig && nextRoute.name in nestedConfig) {\n          route = nextRoute as Route<string> & { state?: State };\n          currentOptions = nestedConfig;\n        } else {\n          // If not, there is no sense in going deeper in config\n          hasNext = false;\n        }\n      }\n    }\n\n    if (pattern === undefined) {\n      pattern = nestedRouteNames.join('/');\n    }\n\n    if (currentOptions[route.name] !== undefined) {\n      path += pattern\n        .split('/')\n        .map((p) => {\n          const name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            const value = allParams[name];\n\n            if (value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            return encodeURIComponent(value);\n          }\n\n          return encodeURIComponent(p);\n        })\n        .join('/');\n    } else {\n      path += encodeURIComponent(route.name);\n    }\n\n    if (!focusedParams) {\n      focusedParams = focusedRoute.params;\n    }\n\n    if (route.state) {\n      path += '/';\n    } else if (focusedParams) {\n      for (let param in focusedParams) {\n        if (focusedParams[param] === 'undefined') {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete focusedParams[param];\n        }\n      }\n\n      const query = queryString.stringify(focusedParams, { sort: false });\n\n      if (query) {\n        path += `?${query}`;\n      }\n    }\n\n    current = route.state;\n  }\n\n  // Remove multiple as well as trailing slashes\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n  return path;\n}\n\nconst getParamName = (pattern: string) =>\n  pattern.replace(/^:/, '').replace(/\\?$/, '');\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst createConfigItem = (\n  config: PathConfig<object> | string,\n  parentPattern?: string\n): ConfigItem => {\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    return { pattern };\n  }\n\n  // If an object is specified as the value (e.g. Foo: { ... }),\n  // It can have `path` property and `screens` prop which has nested configs\n  let pattern: string | undefined;\n\n  if (config.exact && config.path === undefined) {\n    throw new Error(\n      \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n    );\n  }\n\n  pattern =\n    config.exact !== true\n      ? joinPaths(parentPattern || '', config.path || '')\n      : config.path || '';\n\n  const screens = config.screens\n    ? createNormalizedConfigs(config.screens, pattern)\n    : undefined;\n\n  return {\n    // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n    pattern: pattern?.split('/').filter(Boolean).join('/'),\n    stringify: config.stringify,\n    screens,\n  };\n};\n\nconst createNormalizedConfigs = (\n  options: PathConfigMap<object>,\n  pattern?: string\n): Record<string, ConfigItem> =>\n  fromEntries(\n    Object.entries(options).map(([name, c]) => {\n      const result = createConfigItem(c, pattern);\n\n      return [name, result];\n    })\n  );\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}