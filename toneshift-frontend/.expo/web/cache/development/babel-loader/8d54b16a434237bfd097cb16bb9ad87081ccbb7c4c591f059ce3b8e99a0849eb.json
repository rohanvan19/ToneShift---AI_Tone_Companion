{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.RadioButtonAndroid = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _RadioButtonGroup = require(\"./RadioButtonGroup\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _utils2 = require(\"../Checkbox/utils\");\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _excluded = [\"disabled\", \"onPress\", \"theme\", \"value\", \"status\", \"testID\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar BORDER_WIDTH = 2;\nvar RadioButtonAndroid = exports.RadioButtonAndroid = function RadioButtonAndroid(_ref) {\n  var disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    themeOverrides = _ref.theme,\n    value = _ref.value,\n    status = _ref.status,\n    testID = _ref.testID,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _React$useRef = React.useRef(new _Animated[\"default\"].Value(BORDER_WIDTH)),\n    borderAnim = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new _Animated[\"default\"].Value(1)),\n    radioAnim = _React$useRef2.current;\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n      _Animated[\"default\"].timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n      _Animated[\"default\"].timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n  return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer, null, function (context) {\n    var checked = (0, _utils.isChecked)({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status: status,\n      value: value\n    }) === 'checked';\n    var _getAndroidSelectionC = (0, _utils2.getAndroidSelectionControlColor)({\n        theme: theme,\n        disabled: disabled,\n        checked: checked,\n        customColor: rest.color,\n        customUncheckedColor: rest.uncheckedColor\n      }),\n      rippleColor = _getAndroidSelectionC.rippleColor,\n      selectionControlColor = _getAndroidSelectionC.selectionControlColor;\n    return React.createElement(_TouchableRipple[\"default\"], _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : function (event) {\n        (0, _utils.handlePress)({\n          onPress: onPress,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          value: value,\n          event: event\n        });\n      },\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled: disabled,\n        checked: checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID,\n      theme: theme\n    }), React.createElement(_Animated[\"default\"].View, {\n      style: [styles.radio, {\n        borderColor: selectionControlColor,\n        borderWidth: borderAnim\n      }]\n    }, checked ? React.createElement(_View[\"default\"], {\n      style: [_StyleSheet[\"default\"].absoluteFill, styles.radioContainer]\n    }, React.createElement(_Animated[\"default\"].View, {\n      style: [styles.dot, {\n        backgroundColor: selectionControlColor,\n        transform: [{\n          scale: radioAnim\n        }]\n      }]\n    })) : null));\n  });\n};\nRadioButtonAndroid.displayName = 'RadioButton.Android';\nvar styles = _StyleSheet[\"default\"].create({\n  container: {\n    borderRadius: 18\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5\n  }\n});\nvar _default = exports[\"default\"] = RadioButtonAndroid;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_Animated","_interopRequireDefault","_StyleSheet","_View","_RadioButtonGroup","_utils","_theming","_utils2","_TouchableRipple","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","BORDER_WIDTH","RadioButtonAndroid","exports","_ref","disabled","onPress","themeOverrides","theme","value","status","testID","rest","_objectWithoutProperties2","useInternalTheme","_React$useRef","useRef","Value","borderAnim","current","_React$useRef2","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","createElement","RadioButtonContext","Consumer","context","checked","isChecked","contextValue","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","_extends","borderless","undefined","event","handlePress","onValueChange","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","_default"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default RadioButtonAndroid;\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}