{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { NativeModule, registerWebModule, UnavailabilityError } from 'expo-modules-core';\nvar ExpoFontUtils = function (_NativeModule) {\n  function ExpoFontUtils() {\n    _classCallCheck(this, ExpoFontUtils);\n    return _callSuper(this, ExpoFontUtils, arguments);\n  }\n  _inherits(ExpoFontUtils, _NativeModule);\n  return _createClass(ExpoFontUtils, [{\n    key: \"renderToImageAsync\",\n    value: function () {\n      var _renderToImageAsync = _asyncToGenerator(function* (glyphs, options) {\n        throw new UnavailabilityError('expo-font', 'renderToImageAsync');\n      });\n      function renderToImageAsync(_x, _x2) {\n        return _renderToImageAsync.apply(this, arguments);\n      }\n      return renderToImageAsync;\n    }()\n  }]);\n}(NativeModule);\nexport default registerWebModule(ExpoFontUtils, 'ExpoFontUtils');","map":{"version":3,"names":["NativeModule","registerWebModule","UnavailabilityError","ExpoFontUtils","_NativeModule","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_renderToImageAsync","_asyncToGenerator","glyphs","options","renderToImageAsync","_x","_x2","apply"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\expo-font\\src\\ExpoFontUtils.web.ts"],"sourcesContent":["import { NativeModule, registerWebModule, UnavailabilityError } from 'expo-modules-core';\n\nimport { RenderToImageOptions } from './FontUtils.types';\n\nclass ExpoFontUtils extends NativeModule {\n  async renderToImageAsync(glyphs: string, options?: RenderToImageOptions): Promise<string> {\n    throw new UnavailabilityError('expo-font', 'renderToImageAsync');\n  }\n}\n\nexport default registerWebModule(ExpoFontUtils, 'ExpoFontUtils');\n"],"mappings":";;;;;;;;AAAA,SAASA,YAAY,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,mBAAmB;AAAC,IAInFC,aAAc,aAAAC,aAAA;EAAA,SAAAD,cAAA;IAAAE,eAAA,OAAAF,aAAA;IAAA,OAAAG,UAAA,OAAAH,aAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,aAAA,EAAAC,aAAA;EAAA,OAAAK,YAAA,CAAAN,aAAA;IAAAO,GAAA;IAAAC,KAAA;MAAA,IAAAC,mBAAA,GAAAC,iBAAA,CAClB,WAAyBC,MAAc,EAAEC,OAA8B;QACrE,MAAM,IAAIb,mBAAmB,CAAC,WAAW,EAAE,oBAAoB,CAAC;MAClE,CAAC;MAAA,SAFKc,kBAAkBA,CAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAN,mBAAA,CAAAO,KAAA,OAAAZ,SAAA;MAAA;MAAA,OAAlBS,kBAAkB;IAAA;EAAA;AAAA,EADEhB,YAAY;AAMxC,eAAeC,iBAAiB,CAACE,aAAa,EAAE,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}