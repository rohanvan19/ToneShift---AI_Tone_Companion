{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _routers = require(\"@react-navigation/routers\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _checkDuplicateRouteNames = _interopRequireDefault(require(\"./checkDuplicateRouteNames\"));\nvar _checkSerializable = _interopRequireDefault(require(\"./checkSerializable\"));\nvar _createNavigationContainerRef = require(\"./createNavigationContainerRef\");\nvar _EnsureSingleNavigator = _interopRequireDefault(require(\"./EnsureSingleNavigator\"));\nvar _findFocusedRoute = _interopRequireDefault(require(\"./findFocusedRoute\"));\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\nvar _NavigationContainerRefContext = _interopRequireDefault(require(\"./NavigationContainerRefContext\"));\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\nvar _NavigationStateContext = _interopRequireDefault(require(\"./NavigationStateContext\"));\nvar _UnhandledActionContext = _interopRequireDefault(require(\"./UnhandledActionContext\"));\nvar _useChildListeners2 = _interopRequireDefault(require(\"./useChildListeners\"));\nvar _useEventEmitter = _interopRequireDefault(require(\"./useEventEmitter\"));\nvar _useKeyedChildListeners = _interopRequireDefault(require(\"./useKeyedChildListeners\"));\nvar _useOptionsGetters2 = _interopRequireDefault(require(\"./useOptionsGetters\"));\nvar _useScheduleUpdate = require(\"./useScheduleUpdate\");\nvar _useSyncState3 = _interopRequireDefault(require(\"./useSyncState\"));\nvar _excluded = [\"key\", \"routeNames\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar serializableWarnings = [];\nvar duplicateNameWarnings = [];\nvar _getPartialState = function getPartialState(state) {\n  if (state === undefined) {\n    return;\n  }\n  var key = state.key,\n    routeNames = state.routeNames,\n    partialState = (0, _objectWithoutProperties2[\"default\"])(state, _excluded);\n  return _objectSpread(_objectSpread({}, partialState), {}, {\n    stale: true,\n    routes: state.routes.map(function (route) {\n      if (route.state === undefined) {\n        return route;\n      }\n      return _objectSpread(_objectSpread({}, route), {}, {\n        state: _getPartialState(route.state)\n      });\n    })\n  });\n};\nvar BaseNavigationContainer = React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  var initialState = _ref.initialState,\n    onStateChange = _ref.onStateChange,\n    onUnhandledAction = _ref.onUnhandledAction,\n    independent = _ref.independent,\n    children = _ref.children;\n  var parent = React.useContext(_NavigationStateContext[\"default\"]);\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n  var _useSyncState = (0, _useSyncState3[\"default\"])(function () {\n      return _getPartialState(initialState == null ? undefined : initialState);\n    }),\n    _useSyncState2 = (0, _slicedToArray2[\"default\"])(_useSyncState, 5),\n    state = _useSyncState2[0],\n    getState = _useSyncState2[1],\n    setState = _useSyncState2[2],\n    scheduleUpdate = _useSyncState2[3],\n    flushUpdates = _useSyncState2[4];\n  var isFirstMountRef = React.useRef(true);\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var _useChildListeners = (0, _useChildListeners2[\"default\"])(),\n    listeners = _useChildListeners.listeners,\n    addListener = _useChildListeners.addListener;\n  var _useKeyedChildListene = (0, _useKeyedChildListeners[\"default\"])(),\n    keyedListeners = _useKeyedChildListene.keyedListeners,\n    addKeyedListener = _useKeyedChildListene.addKeyedListener;\n  var dispatch = React.useCallback(function (action) {\n    if (listeners.focus[0] == null) {\n      console.error(_createNavigationContainerRef.NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](function (navigation) {\n        return navigation.dispatch(action);\n      });\n    }\n  }, [listeners.focus]);\n  var canGoBack = React.useCallback(function () {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n    var _listeners$focus$ = listeners.focus[0](function (navigation) {\n        return navigation.canGoBack();\n      }),\n      result = _listeners$focus$.result,\n      handled = _listeners$focus$.handled;\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  }, [listeners.focus]);\n  var resetRoot = React.useCallback(function (state) {\n    var _ref2;\n    var _keyedListeners$getSt, _keyedListeners$getSt2;\n    var target = (_ref2 = state === null || state === void 0 ? void 0 : state.key) !== null && _ref2 !== void 0 ? _ref2 : (_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2).key;\n    if (target == null) {\n      console.error(_createNavigationContainerRef.NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](function (navigation) {\n        return navigation.dispatch(_objectSpread(_objectSpread({}, _routers.CommonActions.reset(state)), {}, {\n          target: target\n        }));\n      });\n    }\n  }, [keyedListeners.getState, listeners.focus]);\n  var getRootState = React.useCallback(function () {\n    var _keyedListeners$getSt3, _keyedListeners$getSt4;\n    return (_keyedListeners$getSt3 = (_keyedListeners$getSt4 = keyedListeners.getState).root) === null || _keyedListeners$getSt3 === void 0 ? void 0 : _keyedListeners$getSt3.call(_keyedListeners$getSt4);\n  }, [keyedListeners.getState]);\n  var getCurrentRoute = React.useCallback(function () {\n    var state = getRootState();\n    if (state == null) {\n      return undefined;\n    }\n    var route = (0, _findFocusedRoute[\"default\"])(state);\n    return route;\n  }, [getRootState]);\n  var emitter = (0, _useEventEmitter[\"default\"])();\n  var _useOptionsGetters = (0, _useOptionsGetters2[\"default\"])({}),\n    addOptionsGetter = _useOptionsGetters.addOptionsGetter,\n    getCurrentOptions = _useOptionsGetters.getCurrentOptions;\n  var navigation = React.useMemo(function () {\n    return _objectSpread(_objectSpread(_objectSpread({}, Object.keys(_routers.CommonActions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(_routers.CommonActions[name].apply(_routers.CommonActions, arguments));\n      };\n      return acc;\n    }, {})), emitter.create('root')), {}, {\n      dispatch: dispatch,\n      resetRoot: resetRoot,\n      isFocused: function isFocused() {\n        return true;\n      },\n      canGoBack: canGoBack,\n      getParent: function getParent() {\n        return undefined;\n      },\n      getState: function getState() {\n        return stateRef.current;\n      },\n      getRootState: getRootState,\n      getCurrentRoute: getCurrentRoute,\n      getCurrentOptions: getCurrentOptions,\n      isReady: function isReady() {\n        return listeners.focus[0] != null;\n      },\n      setOptions: function setOptions() {\n        throw new Error('Cannot call setOptions outside a screen');\n      }\n    });\n  }, [canGoBack, dispatch, emitter, getCurrentOptions, getCurrentRoute, getRootState, listeners.focus, resetRoot]);\n  React.useImperativeHandle(ref, function () {\n    return navigation;\n  }, [navigation]);\n  var onDispatchAction = React.useCallback(function (action, noop) {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action: action,\n        noop: noop,\n        stack: stackRef.current\n      }\n    });\n  }, [emitter]);\n  var lastEmittedOptionsRef = React.useRef();\n  var onOptionsChange = React.useCallback(function (options) {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options: options\n      }\n    });\n  }, [emitter]);\n  var stackRef = React.useRef();\n  var builderContext = React.useMemo(function () {\n    return {\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange,\n      stackRef: stackRef\n    };\n  }, [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  var scheduleContext = React.useMemo(function () {\n    return {\n      scheduleUpdate: scheduleUpdate,\n      flushUpdates: flushUpdates\n    };\n  }, [scheduleUpdate, flushUpdates]);\n  var isInitialRef = React.useRef(true);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: state,\n      getState: getState,\n      setState: setState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var onStateChangeRef = React.useRef(onStateChange);\n  var stateRef = React.useRef(state);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n    stateRef.current = state;\n  });\n  React.useEffect(function () {\n    var hydratedState = getRootState();\n    if (process.env.NODE_ENV !== 'production') {\n      if (hydratedState !== undefined) {\n        var serializableResult = (0, _checkSerializable[\"default\"])(hydratedState);\n        if (!serializableResult.serializable) {\n          var location = serializableResult.location,\n            reason = serializableResult.reason;\n          var path = '';\n          var pointer = hydratedState;\n          var params = false;\n          for (var i = 0; i < location.length; i++) {\n            var curr = location[i];\n            var prev = location[i - 1];\n            pointer = pointer[curr];\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += \" > \".concat(curr);\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += \"[\".concat(curr, \"]\");\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += \".\".concat(curr);\n              } else {\n                path += \"[\".concat(JSON.stringify(curr), \"]\");\n              }\n            }\n          }\n          var message = \"Non-serializable values were found in the navigation state. Check:\\n\\n\".concat(path, \" (\").concat(reason, \")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\");\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n        var duplicateRouteNamesResult = (0, _checkDuplicateRouteNames[\"default\"])(hydratedState);\n        if (duplicateRouteNamesResult.length) {\n          var _message = \"Found screens with the same name nested inside one another. Check:\\n\".concat(duplicateRouteNamesResult.map(function (locations) {\n            return \"\\n\".concat(locations.join(', '));\n          }), \"\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.\");\n          if (!duplicateNameWarnings.includes(_message)) {\n            duplicateNameWarnings.push(_message);\n            console.warn(_message);\n          }\n        }\n      }\n    }\n    emitter.emit({\n      type: 'state',\n      data: {\n        state: state\n      }\n    });\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(hydratedState);\n    }\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  var defaultOnUnhandledAction = React.useCallback(function (action) {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n    var payload = action.payload;\n    var message = \"The action '\".concat(action.type, \"'\").concat(payload ? \" with payload \".concat(JSON.stringify(action.payload)) : '', \" was not handled by any navigator.\");\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload !== null && payload !== void 0 && payload.name) {\n          message += \"\\n\\nDo you have a screen named '\".concat(payload.name, \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\");\n        } else {\n          message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";\n        }\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += \"\\n\\nIs there any screen to go back to?\";\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n        break;\n    }\n    message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n    console.error(message);\n  }, []);\n  var element = React.createElement(_NavigationContainerRefContext[\"default\"].Provider, {\n    value: navigation\n  }, React.createElement(_useScheduleUpdate.ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, React.createElement(_NavigationBuilderContext[\"default\"].Provider, {\n    value: builderContext\n  }, React.createElement(_NavigationStateContext[\"default\"].Provider, {\n    value: context\n  }, React.createElement(_UnhandledActionContext[\"default\"].Provider, {\n    value: onUnhandledAction !== null && onUnhandledAction !== void 0 ? onUnhandledAction : defaultOnUnhandledAction\n  }, React.createElement(_EnsureSingleNavigator[\"default\"], null, children))))));\n  if (independent) {\n    element = React.createElement(_NavigationRouteContext[\"default\"].Provider, {\n      value: undefined\n    }, React.createElement(_NavigationContext[\"default\"].Provider, {\n      value: undefined\n    }, element));\n  }\n  return element;\n});\nvar _default = exports[\"default\"] = BaseNavigationContainer;","map":{"version":3,"names":["_routers","require","React","_interopRequireWildcard","_checkDuplicateRouteNames","_interopRequireDefault","_checkSerializable","_createNavigationContainerRef","_EnsureSingleNavigator","_findFocusedRoute","_NavigationBuilderContext","_NavigationContainerRefContext","_NavigationContext","_NavigationRouteContext","_NavigationStateContext","_UnhandledActionContext","_useChildListeners2","_useEventEmitter","_useKeyedChildListeners","_useOptionsGetters2","_useScheduleUpdate","_useSyncState3","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","serializableWarnings","duplicateNameWarnings","_getPartialState","getPartialState","state","undefined","key","routeNames","partialState","_objectWithoutProperties2","stale","routes","map","route","BaseNavigationContainer","forwardRef","_ref","ref","initialState","onStateChange","onUnhandledAction","independent","children","parent","useContext","isDefault","Error","_useSyncState","_useSyncState2","_slicedToArray2","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","_useChildListeners","listeners","addListener","_useKeyedChildListene","keyedListeners","addKeyedListener","dispatch","action","focus","console","error","NOT_INITIALIZED_ERROR","navigation","canGoBack","_listeners$focus$","result","handled","resetRoot","_ref2","_keyedListeners$getSt","_keyedListeners$getSt2","target","root","CommonActions","reset","getRootState","_keyedListeners$getSt3","_keyedListeners$getSt4","getCurrentRoute","emitter","_useOptionsGetters","addOptionsGetter","getCurrentOptions","useMemo","reduce","acc","name","create","isFocused","getParent","stateRef","isReady","setOptions","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","env","NODE_ENV","serializableResult","serializable","location","reason","path","pointer","params","curr","prev","_pointer","concat","test","JSON","stringify","message","includes","warn","duplicateRouteNamesResult","_message","locations","join","defaultOnUnhandledAction","payload","element","createElement","Provider","value","ScheduleUpdateContext","_default","exports"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\@react-navigation\\core\\src\\BaseNavigationContainer.tsx"],"sourcesContent":["import {\n  CommonActions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, getState, setState, scheduleUpdate, flushUpdates] =\n      useSyncState<State>(() =>\n        getPartialState(initialState == null ? undefined : initialState)\n      );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = React.useCallback(\n      (\n        action:\n          | NavigationAction\n          | ((state: NavigationState) => NavigationAction)\n      ) => {\n        if (listeners.focus[0] == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) => navigation.dispatch(action));\n        }\n      },\n      [listeners.focus]\n    );\n\n    const canGoBack = React.useCallback(() => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    }, [listeners.focus]);\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    const navigation: NavigationContainerRef<ParamListBase> = React.useMemo(\n      () => ({\n        ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n          acc[name] = (...args: any[]) =>\n            // @ts-expect-error: this is ok\n            dispatch(CommonActions[name](...args));\n          return acc;\n        }, {}),\n        ...emitter.create('root'),\n        dispatch,\n        resetRoot,\n        isFocused: () => true,\n        canGoBack,\n        getParent: () => undefined,\n        getState: () => stateRef.current,\n        getRootState,\n        getCurrentRoute,\n        getCurrentOptions,\n        isReady: () => listeners.focus[0] != null,\n        setOptions: () => {\n          throw new Error('Cannot call setOptions outside a screen');\n        },\n      }),\n      [\n        canGoBack,\n        dispatch,\n        emitter,\n        getCurrentOptions,\n        getCurrentRoute,\n        getRootState,\n        listeners.focus,\n        resetRoot,\n      ]\n    );\n\n    React.useImperativeHandle(ref, () => navigation, [navigation]);\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({\n          type: '__unsafe_action__',\n          data: { action, noop, stack: stackRef.current },\n        });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options: object) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const stackRef = React.useRef<string | undefined>();\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        stackRef,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n    const stateRef = React.useRef(state);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n      stateRef.current = state;\n    });\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult =\n            checkDuplicateRouteNames(hydratedState);\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <NavigationContainerRefContext.Provider value={navigation}>\n        <ScheduleUpdateContext.Provider value={scheduleContext}>\n          <NavigationBuilderContext.Provider value={builderContext}>\n            <NavigationStateContext.Provider value={context}>\n              <UnhandledActionContext.Provider\n                value={onUnhandledAction ?? defaultOnUnhandledAction}\n              >\n                <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n              </UnhandledActionContext.Provider>\n            </NavigationStateContext.Provider>\n          </NavigationBuilderContext.Provider>\n        </ScheduleUpdateContext.Provider>\n      </NavigationContainerRefContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}