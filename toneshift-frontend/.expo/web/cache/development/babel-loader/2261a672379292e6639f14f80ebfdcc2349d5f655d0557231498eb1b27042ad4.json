{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.FAB = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _forwardRef = require(\"../../utils/forwardRef\");\nvar _ActivityIndicator = _interopRequireDefault(require(\"../ActivityIndicator\"));\nvar _CrossFadeIcon = _interopRequireDefault(require(\"../CrossFadeIcon\"));\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"icon\", \"label\", \"background\", \"accessibilityLabel\", \"accessibilityState\", \"animated\", \"color\", \"rippleColor\", \"disabled\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"loading\", \"testID\", \"size\", \"customSize\", \"mode\", \"variant\", \"labelMaxFontSizeMultiplier\"];\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2[\"default\"])(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar FAB = exports.FAB = (0, _forwardRef.forwardRef)(function (_ref, ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    background = _ref.background,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    _ref$animated = _ref.animated,\n    animated = _ref$animated === void 0 ? true : _ref$animated,\n    customColor = _ref.color,\n    customRippleColor = _ref.rippleColor,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    uppercaseProp = _ref.uppercase,\n    loading = _ref.loading,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'fab' : _ref$testID,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    customSize = _ref.customSize,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'elevated' : _ref$mode,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier,\n    rest = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var uppercase = uppercaseProp !== null && uppercaseProp !== void 0 ? uppercaseProp : !theme.isV3;\n  var _React$useRef = React.useRef(new _Animated[\"default\"].Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var isV3 = theme.isV3,\n    animation = theme.animation;\n  var scale = animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      _Animated[\"default\"].timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      _Animated[\"default\"].timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var IconComponent = animated ? _CrossFadeIcon[\"default\"] : _Icon[\"default\"];\n  var fabStyle = (0, _utils.getFabStyle)({\n    customSize: customSize,\n    size: size,\n    theme: theme\n  });\n  var _ref2 = _StyleSheet[\"default\"].flatten(style) || {},\n    _ref2$borderRadius = _ref2.borderRadius,\n    borderRadius = _ref2$borderRadius === void 0 ? fabStyle.borderRadius : _ref2$borderRadius,\n    customBackgroundColor = _ref2.backgroundColor;\n  var _getFABColors = (0, _utils.getFABColors)({\n      theme: theme,\n      variant: variant,\n      disabled: disabled,\n      customColor: customColor,\n      customBackgroundColor: customBackgroundColor,\n      customRippleColor: customRippleColor\n    }),\n    backgroundColor = _getFABColors.backgroundColor,\n    foregroundColor = _getFABColors.foregroundColor,\n    rippleColor = _getFABColors.rippleColor;\n  var isLargeSize = size === 'large';\n  var isFlatMode = mode === 'flat';\n  var iconSize = isLargeSize ? 36 : 24;\n  var loadingIndicatorSize = isLargeSize ? 24 : 18;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var extendedStyle = (0, _utils.getExtendedFabStyle)({\n    customSize: customSize,\n    theme: theme\n  });\n  var textStyle = _objectSpread({\n    color: foregroundColor\n  }, font);\n  var md3Elevation = isFlatMode || disabled ? 0 : 3;\n  var newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled: disabled\n  });\n  return React.createElement(_Surface[\"default\"], _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor,\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }]\n    }, !isV3 && styles.elevated, !isV3 && disabled && styles.disabled, style],\n    pointerEvents: visible ? 'auto' : 'none',\n    testID: \"\".concat(testID, \"-container\")\n  }, isV3 && {\n    elevation: md3Elevation\n  }, {\n    container: true\n  }), React.createElement(_TouchableRipple[\"default\"], _extends({\n    borderless: true,\n    background: background,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: newAccessibilityState,\n    testID: testID,\n    style: {\n      borderRadius: borderRadius\n    }\n  }, rest), React.createElement(_View[\"default\"], {\n    style: [styles.content, label ? extendedStyle : fabStyle],\n    testID: \"\".concat(testID, \"-content\"),\n    pointerEvents: \"none\"\n  }, icon && loading !== true ? React.createElement(IconComponent, {\n    source: icon,\n    size: customSize ? customSize / 2 : iconSize,\n    color: foregroundColor\n  }) : null, loading ? React.createElement(_ActivityIndicator[\"default\"], {\n    size: customSize ? customSize / 2 : loadingIndicatorSize,\n    color: foregroundColor\n  }) : null, label ? React.createElement(_Text[\"default\"], {\n    variant: \"labelLarge\",\n    selectable: false,\n    testID: \"\".concat(testID, \"-text\"),\n    style: [styles.label, uppercase && styles.uppercaseLabel, textStyle],\n    maxFontSizeMultiplier: labelMaxFontSizeMultiplier\n  }, label) : null)));\n});\nvar styles = _StyleSheet[\"default\"].create({\n  elevated: {\n    elevation: 6\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nvar _default = exports[\"default\"] = FAB;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_Animated","_interopRequireDefault","_StyleSheet","_View","_utils","_theming","_forwardRef","_ActivityIndicator","_CrossFadeIcon","_Icon","_Surface","_TouchableRipple","_Text","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","FAB","exports","forwardRef","_ref","ref","icon","label","background","_ref$accessibilityLab","accessibilityLabel","accessibilityState","_ref$animated","animated","customColor","color","customRippleColor","rippleColor","disabled","onPress","onLongPress","delayLongPress","themeOverrides","theme","style","_ref$visible","visible","uppercaseProp","uppercase","loading","_ref$testID","testID","_ref$size","size","customSize","_ref$mode","mode","_ref$variant","variant","labelMaxFontSizeMultiplier","rest","_objectWithoutProperties2","useInternalTheme","isV3","_React$useRef","useRef","Value","visibility","current","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","fabStyle","getFabStyle","_ref2","flatten","_ref2$borderRadius","borderRadius","customBackgroundColor","backgroundColor","_getFABColors","getFABColors","foregroundColor","isLargeSize","isFlatMode","iconSize","loadingIndicatorSize","font","fonts","labelLarge","medium","extendedStyle","getExtendedFabStyle","textStyle","md3Elevation","newAccessibilityState","createElement","_extends","opacity","transform","styles","elevated","pointerEvents","concat","elevation","container","borderless","accessibilityRole","content","source","selectable","uppercaseLabel","maxFontSizeMultiplier","create","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","_default"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\react-native-paper\\src\\components\\FAB\\FAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype FABSize = 'small' | 'medium' | 'large';\n\ntype FABMode = 'flat' | 'elevated';\n\ntype IconOrLabel =\n  | {\n      icon: IconSource;\n      label?: string;\n    }\n  | {\n      icon?: IconSource;\n      label: string;\n    };\n\nexport type Props = $Omit<$RemoveChildren<typeof Surface>, 'mode'> & {\n  // For `icon` and `label` props their types are duplicated due to the generation of documentation.\n  // Appropriate type for them is `IconOrLabel` contains the both union and intersection types.\n  /**\n   * Icon to display for the `FAB`. It's optional only if `label` is defined.\n   */\n  icon?: IconSource;\n  /**\n   * Optional label for extended `FAB`. It's optional only if `icon` is defined.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  @deprecated Deprecated in v.5x - use prop size=\"small\".\n   *\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Size of the `FAB`.\n   * - `small` - FAB with small height (40).\n   * - `medium` - FAB with default medium height (56).\n   * - `large` - FAB with large height (96).\n   */\n  size?: FABSize;\n  /**\n   * Custom size for the `FAB`. This prop takes precedence over size prop\n   */\n  customSize?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the `FAB`. You can change the mode to adjust the the shadow:\n   * - `flat` - button without a shadow.\n   * - `elevated` - button with a shadow.\n   */\n  mode?: FABMode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n} & IconOrLabel;\n\n/**\n * A floating action button represents the primary action on a screen. It appears in front of all screen content.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     icon=\"plus\"\n *     style={styles.fab}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = forwardRef<View, Props>(\n  (\n    {\n      icon,\n      label,\n      background,\n      accessibilityLabel = label,\n      accessibilityState,\n      animated = true,\n      color: customColor,\n      rippleColor: customRippleColor,\n      disabled,\n      onPress,\n      onLongPress,\n      delayLongPress,\n      theme: themeOverrides,\n      style,\n      visible = true,\n      uppercase: uppercaseProp,\n      loading,\n      testID = 'fab',\n      size = 'medium',\n      customSize,\n      mode = 'elevated',\n      variant = 'primary',\n      labelMaxFontSizeMultiplier,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const uppercase = uppercaseProp ?? !theme.isV3;\n    const { current: visibility } = React.useRef<Animated.Value>(\n      new Animated.Value(visible ? 1 : 0)\n    );\n    const { isV3, animation } = theme;\n    const { scale } = animation;\n\n    React.useEffect(() => {\n      if (visible) {\n        Animated.timing(visibility, {\n          toValue: 1,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }).start();\n      } else {\n        Animated.timing(visibility, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [visible, scale, visibility]);\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const fabStyle = getFabStyle({ customSize, size, theme });\n\n    const {\n      borderRadius = fabStyle.borderRadius,\n      backgroundColor: customBackgroundColor,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const { backgroundColor, foregroundColor, rippleColor } = getFABColors({\n      theme,\n      variant,\n      disabled,\n      customColor,\n      customBackgroundColor,\n      customRippleColor,\n    });\n\n    const isLargeSize = size === 'large';\n    const isFlatMode = mode === 'flat';\n    const iconSize = isLargeSize ? 36 : 24;\n    const loadingIndicatorSize = isLargeSize ? 24 : 18;\n    const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n    const extendedStyle = getExtendedFabStyle({ customSize, theme });\n    const textStyle = {\n      color: foregroundColor,\n      ...font,\n    };\n\n    const md3Elevation = isFlatMode || disabled ? 0 : 3;\n\n    const newAccessibilityState = { ...accessibilityState, disabled };\n\n    return (\n      <Surface\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            borderRadius,\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          !isV3 && styles.elevated,\n          !isV3 && disabled && styles.disabled,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        testID={`${testID}-container`}\n        {...(isV3 && { elevation: md3Elevation })}\n        container\n      >\n        <TouchableRipple\n          borderless\n          background={background}\n          onPress={onPress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={newAccessibilityState}\n          testID={testID}\n          style={{ borderRadius }}\n          {...rest}\n        >\n          <View\n            style={[styles.content, label ? extendedStyle : fabStyle]}\n            testID={`${testID}-content`}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <IconComponent\n                source={icon}\n                size={customSize ? customSize / 2 : iconSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator\n                size={customSize ? customSize / 2 : loadingIndicatorSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {label ? (\n              <Text\n                variant=\"labelLarge\"\n                selectable={false}\n                testID={`${testID}-text`}\n                style={[\n                  styles.label,\n                  uppercase && styles.uppercaseLabel,\n                  textStyle,\n                ]}\n                maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n              >\n                {label}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  elevated: {\n    elevation: 6,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default FAB;\n\n// @component-docs ignore-next-line\nexport { FAB };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}