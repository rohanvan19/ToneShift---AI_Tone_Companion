{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _AnimatedWithChildren2 = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar _normalizeColors = _interopRequireDefault(require(\"@react-native/normalize-colors\"));\nfunction _callSuper(t, o, e) {\n  return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e));\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _superPropGet(t, o, e, r) {\n  var p = (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(1 & r ? t.prototype : t), o, e);\n  return 2 & r && \"function\" == typeof p ? function (t) {\n    return p.apply(e, t);\n  } : p;\n}\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar linear = function linear(t) {\n  return t;\n};\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n  var outputRange = config.outputRange;\n  var inputRange = config.inputRange;\n  if (__DEV__) {\n    checkInfiniteRange('outputRange', outputRange);\n    checkInfiniteRange('inputRange', inputRange);\n    checkValidInputRange(inputRange);\n    (0, _invariant[\"default\"])(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  }\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n  var extrapolateRight = 'extend';\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n  return function (input) {\n    (0, _invariant[\"default\"])(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {}\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {}\n  }\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n  result = easing(result);\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n  return result;\n}\nfunction colorToRgba(input) {\n  var normalizedColor = (0, _normalizeColors[\"default\"])(input);\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\n    return input;\n  }\n  normalizedColor = normalizedColor || 0;\n  var r = (normalizedColor & 0xff000000) >>> 24;\n  var g = (normalizedColor & 0x00ff0000) >>> 16;\n  var b = (normalizedColor & 0x0000ff00) >>> 8;\n  var a = (normalizedColor & 0x000000ff) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  (0, _invariant[\"default\"])(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return createInterpolation((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, config), {}, {\n      outputRange: outputRanges[i]\n    }));\n  });\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n      if (shouldRound) {\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      }\n      return String(val);\n    });\n  };\n}\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n  for (var i = 1; i < arr.length; ++i) {\n    (0, _invariant[\"default\"])(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\nfunction findRange(input, inputRange) {\n  var i;\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n  return i - 1;\n}\nfunction checkValidInputRange(arr) {\n  (0, _invariant[\"default\"])(arr.length >= 2, 'inputRange must have at least 2 elements');\n  var message = 'inputRange must be monotonically non-decreasing ' + String(arr);\n  for (var i = 1; i < arr.length; ++i) {\n    (0, _invariant[\"default\"])(arr[i] >= arr[i - 1], message);\n  }\n}\nfunction checkInfiniteRange(name, arr) {\n  (0, _invariant[\"default\"])(arr.length >= 2, name + ' must have at least 2 elements');\n  (0, _invariant[\"default\"])(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\nvar AnimatedInterpolation = function (_AnimatedWithChildren) {\n  function AnimatedInterpolation(parent, config) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, AnimatedInterpolation);\n    _this = _callSuper(this, AnimatedInterpolation);\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n  (0, _inherits2[\"default\"])(AnimatedInterpolation, _AnimatedWithChildren);\n  return (0, _createClass2[\"default\"])(AnimatedInterpolation, [{\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this._parent.__makeNative(platformConfig);\n      _superPropGet(AnimatedInterpolation, \"__makeNative\", this, 3)([platformConfig]);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      var parentValue = this._parent.__getValue();\n      (0, _invariant[\"default\"])(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n      return this._interpolation(parentValue);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._parent.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._parent.__removeChild(this);\n      _superPropGet(AnimatedInterpolation, \"__detach\", this, 3)([]);\n    }\n  }, {\n    key: \"__transformDataType\",\n    value: function __transformDataType(range) {\n      return range.map(_NativeAnimatedHelper[\"default\"].transformDataType);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      if (__DEV__) {\n        _NativeAnimatedHelper[\"default\"].validateInterpolation(this._config);\n      }\n      return {\n        inputRange: this._config.inputRange,\n        outputRange: this.__transformDataType(this._config.outputRange),\n        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n        type: 'interpolation'\n      };\n    }\n  }]);\n}(_AnimatedWithChildren2[\"default\"]);\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nvar _default = exports[\"default\"] = AnimatedInterpolation;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_get2","_inherits2","_objectSpread2","_AnimatedWithChildren2","_NativeAnimatedHelper","_invariant","_normalizeColors","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","__DEV__","process","env","NODE_ENV","linear","createInterpolation","config","outputRange","createInterpolationFromStringOutputRange","inputRange","checkInfiniteRange","checkValidInputRange","length","easing","extrapolateLeft","undefined","extrapolate","extrapolateRight","input","range","findRange","interpolate","inputMin","inputMax","outputMin","outputMax","result","Infinity","colorToRgba","normalizedColor","g","b","a","stringShapeRegex","map","checkPattern","outputRanges","match","forEach","number","i","push","interpolations","shouldRound","isRgbOrRgba","replace","val","Math","round","String","startsWith","arr","pattern","message","name","AnimatedInterpolation","_AnimatedWithChildren","parent","_this","_parent","_config","_interpolation","key","__makeNative","platformConfig","__getValue","parentValue","__attach","__addChild","__detach","__removeChild","__transformDataType","transformDataType","__getNativeConfig","validateInterpolation","type","__createInterpolation","_default"],"sources":["C:/Users/vanma/StudioProjects/ToneShift/toneshift-frontend/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedInterpolation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n/* eslint no-bitwise: 0 */\n\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from '@react-native/normalize-colors';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar linear = t => t;\n\n/**\n * Very handy helper to map input ranges to output ranges with an easing\n * function and custom behavior outside of the ranges.\n */\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n  var outputRange = config.outputRange;\n  var inputRange = config.inputRange;\n  if (__DEV__) {\n    checkInfiniteRange('outputRange', outputRange);\n    checkInfiniteRange('inputRange', inputRange);\n    checkValidInputRange(inputRange);\n    invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  }\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n  var extrapolateRight = 'extend';\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n  return input => {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n\n  // Extrapolate\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {\n      // noop\n    }\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {\n      // noop\n    }\n  }\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n\n  // Input Range\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n\n  // Easing\n  result = easing(result);\n\n  // Output Range\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n  return result;\n}\nfunction colorToRgba(input) {\n  var normalizedColor = normalizeColor(input);\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\n    return input;\n  }\n  normalizedColor = normalizedColor || 0;\n  var r = (normalizedColor & 0xff000000) >>> 24;\n  var g = (normalizedColor & 0x00ff0000) >>> 16;\n  var b = (normalizedColor & 0x0000ff00) >>> 8;\n  var a = (normalizedColor & 0x000000ff) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\n\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *   rgba(123, 42, 99, 0.36) // colors\n *   -45deg                  // values with units\n */\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n\n  // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']\n  // ->\n  // [\n  //   [0, 50],\n  //   [100, 150],\n  //   [200, 250],\n  //   [0, 0.5],\n  // ]\n  /* $FlowFixMe[incompatible-use] (>=0.18.0): `outputRange[0].match()` can\n   * return `null`. Need to guard against this possibility. */\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(() => []);\n  outputRange.forEach(value => {\n    /* $FlowFixMe[incompatible-use] (>=0.18.0): `value.match()` can return\n     * `null`. Need to guard against this possibility. */\n    value.match(stringShapeRegex).forEach((number, i) => {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex)\n  /* $FlowFixMe[incompatible-use] (>=0.18.0): `outputRange[0].match()` can\n   * return `null`. Need to guard against this possibility. */\n  /* $FlowFixMe[incompatible-call] (>=0.18.0): `outputRange[0].match()` can\n   * return `null`. Need to guard against this possibility. */.map((value, i) => {\n    return createInterpolation(_objectSpread(_objectSpread({}, config), {}, {\n      outputRange: outputRanges[i]\n    }));\n  });\n\n  // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\n  // round the opacity (4th column).\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return input => {\n    var i = 0;\n    // 'rgba(0, 100, 200, 0)'\n    // ->\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\n    return outputRange[0].replace(stringShapeRegex, () => {\n      var val = +interpolations[i++](input);\n      if (shouldRound) {\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      }\n      return String(val);\n    });\n  };\n}\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\nfunction findRange(input, inputRange) {\n  var i;\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n  return i - 1;\n}\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n  var message = 'inputRange must be monotonically non-decreasing ' + String(arr);\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], message);\n  }\n}\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,\n  /* $FlowFixMe[incompatible-type] (>=0.13.0) - In the addition expression\n   * below this comment, one or both of the operands may be something that\n   * doesn't cleanly convert to a string, like undefined, null, and object,\n   * etc. If you really mean this implicit string conversion, you can do\n   * something like String(myThing) */\n  name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\nclass AnimatedInterpolation extends AnimatedWithChildren {\n  // Export for testing.\n\n  constructor(parent, config) {\n    super();\n    this._parent = parent;\n    this._config = config;\n    this._interpolation = createInterpolation(config);\n  }\n  __makeNative(platformConfig) {\n    this._parent.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n  __getValue() {\n    var parentValue = this._parent.__getValue();\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n    return this._interpolation(parentValue);\n  }\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n  __attach() {\n    this._parent.__addChild(this);\n  }\n  __detach() {\n    this._parent.__removeChild(this);\n    super.__detach();\n  }\n  __transformDataType(range) {\n    return range.map(NativeAnimatedHelper.transformDataType);\n  }\n  __getNativeConfig() {\n    if (__DEV__) {\n      NativeAnimatedHelper.validateInterpolation(this._config);\n    }\n    return {\n      inputRange: this._config.inputRange,\n      // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here\n      outputRange: this.__transformDataType(this._config.outputRange),\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation'\n    };\n  }\n}\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}