{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = BottomTabBarItem;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _native = require(\"@react-navigation/native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar _Pressable = _interopRequireDefault(require(\"react-native-web/dist/exports/Pressable\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\nvar _TabBarIcon = _interopRequireDefault(require(\"./TabBarIcon\"));\nvar _excluded = [\"children\", \"style\", \"onPress\", \"to\", \"accessibilityRole\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction BottomTabBarItem(_ref) {\n  var focused = _ref.focused,\n    route = _ref.route,\n    descriptor = _ref.descriptor,\n    label = _ref.label,\n    icon = _ref.icon,\n    badge = _ref.badge,\n    badgeStyle = _ref.badgeStyle,\n    to = _ref.to,\n    _ref$button = _ref.button,\n    button = _ref$button === void 0 ? function (_ref2) {\n      var children = _ref2.children,\n        style = _ref2.style,\n        _onPress = _ref2.onPress,\n        to = _ref2.to,\n        accessibilityRole = _ref2.accessibilityRole,\n        rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, _excluded);\n      if (_Platform[\"default\"].OS === 'web' && to) {\n        return _react[\"default\"].createElement(_native.Link, _extends({}, rest, {\n          to: to,\n          style: [styles.button, style],\n          onPress: function onPress(e) {\n            if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n              e.preventDefault();\n              _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n            }\n          }\n        }), children);\n      } else {\n        return _react[\"default\"].createElement(_Pressable[\"default\"], _extends({}, rest, {\n          accessibilityRole: accessibilityRole,\n          onPress: _onPress,\n          style: style\n        }), children);\n      }\n    } : _ref$button,\n    accessibilityLabel = _ref.accessibilityLabel,\n    testID = _ref.testID,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    horizontal = _ref.horizontal,\n    customActiveTintColor = _ref.activeTintColor,\n    customInactiveTintColor = _ref.inactiveTintColor,\n    _ref$activeBackground = _ref.activeBackgroundColor,\n    activeBackgroundColor = _ref$activeBackground === void 0 ? 'transparent' : _ref$activeBackground,\n    _ref$inactiveBackgrou = _ref.inactiveBackgroundColor,\n    inactiveBackgroundColor = _ref$inactiveBackgrou === void 0 ? 'transparent' : _ref$inactiveBackgrou,\n    _ref$showLabel = _ref.showLabel,\n    showLabel = _ref$showLabel === void 0 ? true : _ref$showLabel,\n    allowFontScaling = _ref.allowFontScaling,\n    labelStyle = _ref.labelStyle,\n    iconStyle = _ref.iconStyle,\n    style = _ref.style;\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  var inactiveTintColor = customInactiveTintColor === undefined ? (0, _color[\"default\"])(colors.text).mix((0, _color[\"default\"])(colors.card), 0.5).hex() : customInactiveTintColor;\n  var renderLabel = function renderLabel(_ref3) {\n    var focused = _ref3.focused;\n    if (showLabel === false) {\n      return null;\n    }\n    var color = focused ? activeTintColor : inactiveTintColor;\n    if (typeof label === 'string') {\n      return _react[\"default\"].createElement(_Text[\"default\"], {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color: color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n    var options = descriptor.options;\n    var children = typeof options.tabBarLabel === 'string' ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    return label({\n      focused: focused,\n      color: color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children: children\n    });\n  };\n  var renderIcon = function renderIcon(_ref4) {\n    var focused = _ref4.focused;\n    if (icon === undefined) {\n      return null;\n    }\n    var activeOpacity = focused ? 1 : 0;\n    var inactiveOpacity = focused ? 0 : 1;\n    return _react[\"default\"].createElement(_TabBarIcon[\"default\"], {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n  var scene = {\n    route: route,\n    focused: focused\n  };\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to: to,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: _Platform[\"default\"].select({\n      ios: 'button',\n      \"default\": 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor: backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: _react[\"default\"].createElement(_react[\"default\"].Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nvar styles = _StyleSheet[\"default\"].create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"names":["_native","require","_color","_interopRequireDefault","_react","_Platform","_Pressable","_StyleSheet","_Text","_TabBarIcon","_excluded","BottomTabBarItem","_ref","focused","route","descriptor","label","icon","badge","badgeStyle","to","_ref$button","button","_ref2","children","style","_onPress","onPress","accessibilityRole","rest","_objectWithoutProperties2","OS","createElement","Link","_extends","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","accessibilityLabel","testID","onLongPress","horizontal","customActiveTintColor","activeTintColor","customInactiveTintColor","inactiveTintColor","_ref$activeBackground","activeBackgroundColor","_ref$inactiveBackgrou","inactiveBackgroundColor","_ref$showLabel","showLabel","allowFontScaling","labelStyle","iconStyle","_useTheme","useTheme","colors","undefined","primary","text","mix","card","hex","renderLabel","_ref3","color","numberOfLines","labelBeside","labelBeneath","options","tabBarLabel","title","name","position","renderIcon","_ref4","activeOpacity","inactiveOpacity","scene","backgroundColor","select","ios","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\@react-navigation\\bottom-tabs\\src\\views\\BottomTabItem.tsx"],"sourcesContent":["import { Link, Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport type {\n  BottomTabBarButtonProps,\n  BottomTabDescriptor,\n  LabelPosition,\n} from '../types';\nimport TabBarIcon from './TabBarIcon';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The descriptor object for the route.\n   */\n  descriptor: BottomTabDescriptor;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: {\n        focused: boolean;\n        color: string;\n        position: LabelPosition;\n        children: string;\n      }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Text to show in a badge on the tab icon.\n   */\n  badge?: number | string;\n  /**\n   * Custom style for the badge.\n   */\n  badgeStyle?: StyleProp<TextStyle>;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the icon element.\n   */\n  iconStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  descriptor,\n  label,\n  icon,\n  badge,\n  badgeStyle,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return (\n        <Link\n          {...rest}\n          to={to}\n          style={[styles.button, style]}\n          onPress={(e: any) => {\n            if (\n              !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n              (e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress?.(e);\n            }\n          }}\n        >\n          {children}\n        </Link>\n      );\n    } else {\n      return (\n        <Pressable\n          {...rest}\n          accessibilityRole={accessibilityRole}\n          onPress={onPress}\n          style={style}\n        >\n          {children}\n        </Pressable>\n      );\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Text>\n      );\n    }\n\n    const { options } = descriptor;\n    const children =\n      typeof options.tabBarLabel === 'string'\n        ? options.tabBarLabel\n        : options.title !== undefined\n        ? options.title\n        : route.name;\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children,\n    });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        horizontal={horizontal}\n        badge={badge}\n        badgeStyle={badgeStyle}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={iconStyle}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({ ios: 'button', default: 'tab' }),\n    accessibilityState: { selected: focused },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 10,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}