{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _RefreshControl = _interopRequireDefault(require(\"../../../exports/RefreshControl\"));\nvar _ScrollView = _interopRequireDefault(require(\"../../../exports/ScrollView\"));\nvar _View = _interopRequireDefault(require(\"../../../exports/View\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../../../exports/StyleSheet\"));\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../exports/findNodeHandle\"));\nvar _Batchinator = _interopRequireDefault(require(\"../Batchinator\"));\nvar _clamp = _interopRequireDefault(require(\"../Utilities/clamp\"));\nvar _infoLog = _interopRequireDefault(require(\"../infoLog\"));\nvar _CellRenderMask = require(\"./CellRenderMask\");\nvar _ChildListCollection = _interopRequireDefault(require(\"./ChildListCollection\"));\nvar _FillRateHelper = _interopRequireDefault(require(\"../FillRateHelper\"));\nvar _StateSafePureComponent = _interopRequireDefault(require(\"./StateSafePureComponent\"));\nvar _ViewabilityHelper = _interopRequireDefault(require(\"../ViewabilityHelper\"));\nvar _VirtualizedListCellRenderer = _interopRequireDefault(require(\"./VirtualizedListCellRenderer\"));\nvar _VirtualizedListContext = require(\"./VirtualizedListContext.js\");\nvar _VirtualizeUtils = require(\"../VirtualizeUtils\");\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function _interopRequireWildcard(e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        \"default\": e\n      };\n    if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (var _t2 in e) \"default\" !== _t2 && {}.hasOwnProperty.call(e, _t2) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t2)) && (i.get || i.set) ? o(f, _t2, i) : f[_t2] = e[_t2]);\n    return f;\n  })(e, t);\n}\nfunction _callSuper(t, o, e) {\n  return o = (0, _getPrototypeOf2[\"default\"])(o), (0, _possibleConstructorReturn2[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2[\"default\"])(t).constructor) : o.apply(t, e));\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\nvar VirtualizedList = function (_StateSafePureCompone) {\n  function VirtualizedList(_props) {\n    var _this2;\n    (0, _classCallCheck2[\"default\"])(this, VirtualizedList);\n    var _this$props$updateCel;\n    _this2 = _callSuper(this, VirtualizedList, [_props]);\n    _this2._getScrollMetrics = function () {\n      return _this2._scrollMetrics;\n    };\n    _this2._getOutermostParentListRef = function () {\n      if (_this2._isNestedWithSameOrientation()) {\n        return _this2.context.getOutermostParentListRef();\n      } else {\n        return _this2;\n      }\n    };\n    _this2._registerAsNestedChild = function (childList) {\n      _this2._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (_this2._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this2._unregisterAsNestedChild = function (childList) {\n      _this2._nestedChildLists.remove(childList.ref);\n    };\n    _this2._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this2._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this2._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this2._averageCellLength = 0;\n    _this2._cellRefs = {};\n    _this2._frames = {};\n    _this2._footerLength = 0;\n    _this2._hasTriggeredInitialScrollToIndex = false;\n    _this2._hasInteracted = false;\n    _this2._hasMore = false;\n    _this2._hasWarned = {};\n    _this2._headerLength = 0;\n    _this2._hiPriInProgress = false;\n    _this2._highestMeasuredFrameIndex = 0;\n    _this2._indicesToKeys = new Map();\n    _this2._lastFocusedCellKey = null;\n    _this2._nestedChildLists = new _ChildListCollection[\"default\"]();\n    _this2._offsetFromParentVirtualizedList = 0;\n    _this2._prevParentOffset = 0;\n    _this2._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    _this2._scrollRef = null;\n    _this2._sentStartForContentLength = 0;\n    _this2._sentEndForContentLength = 0;\n    _this2._totalCellLength = 0;\n    _this2._totalCellsMeasured = 0;\n    _this2._viewabilityTuples = [];\n    _this2._captureScrollRef = function (ref) {\n      _this2._scrollRef = ref;\n    };\n    _this2._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this2._isNestedWithSameOrientation()) {\n        return React.createElement(_View[\"default\"], props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        (0, _invariant[\"default\"])(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return React.createElement(_ScrollView[\"default\"], (0, _extends2[\"default\"])({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(_RefreshControl[\"default\"], {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset\n          }) : props.refreshControl\n        }));\n      } else {\n        return React.createElement(_ScrollView[\"default\"], props);\n      }\n    };\n    _this2._onCellLayout = function (e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: _this2._selectOffset(layout),\n        length: _this2._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = _this2._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        _this2._totalCellLength += next.length - (curr ? curr.length : 0);\n        _this2._totalCellsMeasured += curr ? 0 : 1;\n        _this2._averageCellLength = _this2._totalCellLength / _this2._totalCellsMeasured;\n        _this2._frames[cellKey] = next;\n        _this2._highestMeasuredFrameIndex = Math.max(_this2._highestMeasuredFrameIndex, index);\n        _this2._scheduleCellsToRenderUpdate();\n      } else {\n        _this2._frames[cellKey].inLayout = true;\n      }\n      _this2._triggerRemeasureForChildListsInCell(cellKey);\n      _this2._computeBlankness();\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n    };\n    _this2._onCellUnmount = function (cellKey) {\n      delete _this2._cellRefs[cellKey];\n      var curr = _this2._frames[cellKey];\n      if (curr) {\n        _this2._frames[cellKey] = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    _this2._onLayout = function (e) {\n      if (_this2._isNestedWithSameOrientation()) {\n        _this2.measureLayoutRelativeToContainingList();\n      } else {\n        _this2._scrollMetrics.visibleLength = _this2._selectLength(e.nativeEvent.layout);\n      }\n      _this2.props.onLayout && _this2.props.onLayout(e);\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._onLayoutEmpty = function (e) {\n      _this2.props.onLayout && _this2.props.onLayout(e);\n    };\n    _this2._onLayoutFooter = function (e) {\n      _this2._triggerRemeasureForChildListsInCell(_this2._getFooterCellKey());\n      _this2._footerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onLayoutHeader = function (e) {\n      _this2._headerLength = _this2._selectLength(e.nativeEvent.layout);\n    };\n    _this2._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this2.props.initialScrollIndex != null && _this2.props.initialScrollIndex > 0 && !_this2._hasTriggeredInitialScrollToIndex) {\n        if (_this2.props.contentOffset == null) {\n          if (_this2.props.initialScrollIndex < _this2.props.getItemCount(_this2.props.data)) {\n            _this2.scrollToIndex({\n              animated: false,\n              index: (0, _nullthrows[\"default\"])(_this2.props.initialScrollIndex)\n            });\n          } else {\n            _this2.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        _this2._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (_this2.props.onContentSizeChange) {\n        _this2.props.onContentSizeChange(width, height);\n      }\n      _this2._scrollMetrics.contentLength = _this2._selectLength({\n        height: height,\n        width: width\n      });\n      _this2._scheduleCellsToRenderUpdate();\n      _this2._maybeCallOnEdgeReached();\n    };\n    _this2._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this2._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      var contentLength = _this2._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this2._onScroll = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScroll(e);\n      });\n      if (_this2.props.onScroll) {\n        _this2.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this2._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this2._selectLength(e.nativeEvent.contentSize);\n      var offset = _this2._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this2._scrollMetrics.offset;\n      if (_this2._isNestedWithSameOrientation()) {\n        if (_this2._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this2._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this2._scrollMetrics.timestamp ? Math.max(1, timestamp - _this2._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this2._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this2._hasWarned.perf) {\n        (0, _infoLog[\"default\"])('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this2._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this2._hasWarned.perf = true;\n      }\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      _this2._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength,\n        zoomScale: zoomScale\n      };\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      if (!_this2.props) {\n        return;\n      }\n      _this2._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        _this2._fillRateHelper.activate();\n      }\n      _this2._computeBlankness();\n      _this2._scheduleCellsToRenderUpdate();\n    };\n    _this2._onScrollBeginDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollBeginDrag(e);\n      });\n      _this2._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this2._hasInteracted = true;\n      _this2.props.onScrollBeginDrag && _this2.props.onScrollBeginDrag(e);\n    };\n    _this2._onScrollEndDrag = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this2._scrollMetrics.velocity = _this2._selectOffset(velocity);\n      }\n      _this2._computeBlankness();\n      _this2.props.onScrollEndDrag && _this2.props.onScrollEndDrag(e);\n    };\n    _this2._onMomentumScrollBegin = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollBegin(e);\n      });\n      _this2.props.onMomentumScrollBegin && _this2.props.onMomentumScrollBegin(e);\n    };\n    _this2._onMomentumScrollEnd = function (e) {\n      _this2._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollEnd(e);\n      });\n      _this2._scrollMetrics.velocity = 0;\n      _this2._computeBlankness();\n      _this2.props.onMomentumScrollEnd && _this2.props.onMomentumScrollEnd(e);\n    };\n    _this2._updateCellsToRender = function () {\n      _this2._updateViewableItems(_this2.props, _this2.state.cellsAroundViewport);\n      _this2.setState(function (state, props) {\n        var cellsAroundViewport = _this2._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this2._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport: cellsAroundViewport,\n          renderMask: renderMask\n        };\n      });\n    };\n    _this2._createViewToken = function (index, isViewable, props) {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: _this2._keyExtractor(item, index, props),\n        isViewable: isViewable\n      };\n    };\n    _this2._getOffsetApprox = function (index, props) {\n      if (Number.isInteger(index)) {\n        return _this2.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = _this2.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    _this2.__getFrameMetricsApprox = function (index, props) {\n      var frame = _this2._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant[\"default\"])(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        (0, _invariant[\"default\"])(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this2._averageCellLength,\n          offset: _this2._averageCellLength * index\n        };\n      }\n    };\n    _this2._getFrameMetrics = function (index, props) {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      (0, _invariant[\"default\"])(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = _this2._frames[_this2._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    _this2._getNonViewportRenderRegions = function (props) {\n      if (!(_this2._lastFocusedCellKey && _this2._cellRefs[_this2._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = _this2._cellRefs[_this2._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n      if (focusedCellIndex >= itemCount || _this2._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== _this2._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this2._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += _this2.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < _this2._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += _this2.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first: first,\n        last: last\n      }];\n    };\n    _this2._checkProps(_props);\n    _this2._fillRateHelper = new _FillRateHelper[\"default\"](_this2._getFrameMetrics);\n    _this2._updateCellsToRenderBatcher = new _Batchinator[\"default\"](_this2._updateCellsToRender, (_this$props$updateCel = _this2.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (_this2.props.viewabilityConfigCallbackPairs) {\n      _this2._viewabilityTuples = _this2.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new _ViewabilityHelper[\"default\"](pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props3 = _this2.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this2._viewabilityTuples.push({\n          viewabilityHelper: new _ViewabilityHelper[\"default\"](viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    _this2.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n    _this2.invertedWheelEventHandler = function (ev) {\n      var scrollOffset = _this2.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = _this2.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = _this2.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = _this2.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (_this2.props.inverted && _this2._scrollRef && _this2._scrollRef.getScrollableNode) {\n        var node = _this2._scrollRef.getScrollableNode();\n        if (_this2.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !_this2.props.getItemLayout ? Math.min(nextScrollLeft, _this2._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !_this2.props.getItemLayout ? Math.min(nextScrollTop, _this2._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n    return _this2;\n  }\n  (0, _inherits2[\"default\"])(VirtualizedList, _StateSafePureCompone);\n  return (0, _createClass2[\"default\"])(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      if (veryLast < 0) {\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      (0, _invariant[\"default\"])(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n      (0, _invariant[\"default\"])(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n      (0, _invariant[\"default\"])(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        (0, _invariant[\"default\"])(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n      var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"_checkProps\",\n    value: function _checkProps(props) {\n      var onScroll = props.onScroll,\n        windowSize = props.windowSize,\n        getItemCount = props.getItemCount,\n        data = props.data,\n        initialScrollIndex = props.initialScrollIndex;\n      (0, _invariant[\"default\"])(!onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n      (0, _invariant[\"default\"])(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n      (0, _invariant[\"default\"])(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n      var itemCount = getItemCount(data);\n      if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n        console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n        this._hasWarned.initialScrollIndex = true;\n      }\n      if (__DEV__ && !this._hasWarned.flexWrap) {\n        var flatStyles = _StyleSheet[\"default\"].flatten(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n          this._hasWarned.flexWrap = true;\n        }\n      }\n    }\n  }, {\n    key: \"_adjustCellsAroundViewport\",\n    value: function _adjustCellsAroundViewport(props, cellsAroundViewport) {\n      var data = props.data,\n        getItemCount = props.getItemCount;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n      var _this$_scrollMetrics = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics.contentLength,\n        offset = _this$_scrollMetrics.offset,\n        visibleLength = _this$_scrollMetrics.visibleLength;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (visibleLength <= 0 || contentLength <= 0) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      var newCellsAroundViewport;\n      if (props.disableVirtualization) {\n        var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n        newCellsAroundViewport = {\n          first: 0,\n          last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n        };\n      } else {\n        if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n        }\n        newCellsAroundViewport = (0, _VirtualizeUtils.computeWindowedRenderLimits)(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n        (0, _invariant[\"default\"])(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n      }\n      if (this._nestedChildLists.size() > 0) {\n        var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n        newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n      }\n      return newCellsAroundViewport;\n    }\n  }, {\n    key: \"_findFirstChildWithMore\",\n    value: function _findFirstChildWithMore(first, last) {\n      for (var ii = first; ii <= last; ii++) {\n        var cellKeyForIndex = this._indicesToKeys.get(ii);\n        if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {\n          return childList.hasMore();\n        })) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          ref: this,\n          cellKey: this.context.cellKey\n        });\n      }\n      this.setupWebWheelHandler();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          ref: this\n        });\n      }\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n      this.teardownWebWheelHandler();\n    }\n  }, {\n    key: \"setupWebWheelHandler\",\n    value: function setupWebWheelHandler() {\n      var _this3 = this;\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n      } else {\n        setTimeout(function () {\n          return _this3.setupWebWheelHandler();\n        }, 50);\n        return;\n      }\n    }\n  }, {\n    key: \"teardownWebWheelHandler\",\n    value: function teardownWebWheelHandler() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n      }\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this = this;\n      var _this$props4 = this.props,\n        CellRendererComponent = _this$props4.CellRendererComponent,\n        ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n        ListHeaderComponent = _this$props4.ListHeaderComponent,\n        ListItemComponent = _this$props4.ListItemComponent,\n        data = _this$props4.data,\n        debug = _this$props4.debug,\n        getItem = _this$props4.getItem,\n        getItemCount = _this$props4.getItemCount,\n        getItemLayout = _this$props4.getItemLayout,\n        horizontal = _this$props4.horizontal,\n        renderItem = _this$props4.renderItem;\n      var stickyOffset = ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop() {\n        var item = getItem(data, ii);\n        var key = _this._keyExtractor(item, ii, _this.props);\n        _this._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n        cells.push(React.createElement(_VirtualizedListCellRenderer[\"default\"], (0, _extends2[\"default\"])({\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          ListItemComponent: ListItemComponent,\n          cellKey: key,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this._onUpdateSeparators,\n          onCellFocusCapture: function onCellFocusCapture(e) {\n            return _this._onCellFocusCapture(key);\n          },\n          onUnmount: _this._onCellUnmount,\n          ref: function ref(_ref) {\n            _this._cellRefs[key] = _ref;\n          },\n          renderItem: renderItem\n        }, shouldListenForLayout && {\n          onCellLayout: _this._onCellLayout\n        })));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index, props) {\n      if (props.keyExtractor != null) {\n        return props.keyExtractor(item, index);\n      }\n      var key = (0, _VirtualizeUtils.keyExtractor)(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      this._checkProps(this.props);\n      var _this$props5 = this.props,\n        ListEmptyComponent = _this$props5.ListEmptyComponent,\n        ListFooterComponent = _this$props5.ListFooterComponent,\n        ListHeaderComponent = _this$props5.ListHeaderComponent;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        horizontal = _this$props6.horizontal;\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var _element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          key: \"$header\"\n        }, React.createElement(_View[\"default\"], {\n          onLayout: this._onLayoutHeader,\n          style: [inversionStyle, this.props.ListHeaderComponentStyle]\n        }, _element)));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount === 0 && ListEmptyComponent) {\n        var _element2 = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-empty',\n          key: \"$empty\"\n        }, React.cloneElement(_element2, {\n          onLayout: function onLayout(event) {\n            _this4._onLayoutEmpty(event);\n            if (_element2.props.onLayout) {\n              _element2.props.onLayout(event);\n            }\n          },\n          style: [inversionStyle, _element2.props.style]\n        })));\n      }\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var renderRegions = this.state.renderMask.enumerateRegions();\n        var lastSpacer = findLastWhere(renderRegions, function (r) {\n          return r.isSpacer;\n        });\n        for (var _iterator = (0, _createForOfIteratorHelperLoose2[\"default\"])(renderRegions), _step; !(_step = _iterator()).done;) {\n          var section = _step.value;\n          if (section.isSpacer) {\n            if (this.props.disableVirtualization) {\n              continue;\n            }\n            var isLastSpacer = section === lastSpacer;\n            var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n            var last = constrainToMeasured ? (0, _clamp[\"default\"])(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n            var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n            var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n            var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n            cells.push(React.createElement(_View[\"default\"], {\n              key: \"$spacer-\" + section.first,\n              style: (0, _defineProperty2[\"default\"])({}, spacerKey, spacerSize)\n            }));\n          } else {\n            this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n          }\n        }\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n      }\n      if (ListFooterComponent) {\n        var _element3 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, null);\n        cells.push(React.createElement(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          key: \"$footer\"\n        }, React.createElement(_View[\"default\"], {\n          onLayout: this._onLayoutFooter,\n          style: [inversionStyle, this.props.ListFooterComponentStyle]\n        }, _element3)));\n      }\n      var scrollProps = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n      this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n      var innerRet = React.createElement(_VirtualizedListContext.VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        }\n      }, React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells));\n      var ret = innerRet;\n      if (this.props.debug) {\n        return React.createElement(_View[\"default\"], {\n          style: styles.debug\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n        data = _this$props7.data,\n        extraData = _this$props7.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellFocusCapture\",\n    value: function _onCellFocusCapture(cellKey) {\n      this._lastFocusedCellKey = cellKey;\n      this._updateCellsToRender();\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      this._nestedChildLists.forEachInCell(cellKey, function (childList) {\n        childList.measureLayoutRelativeToContainingList();\n      });\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this5 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this5._offsetFromParentVirtualizedList = _this5._selectOffset({\n            x: x,\n            y: y\n          });\n          _this5._scrollMetrics.contentLength = _this5._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this5._convertParentScrollMetrics(_this5.context.getScrollMetrics());\n          var metricsChanged = _this5._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this5._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this5._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this5._scrollMetrics.offset = scrollMetrics.offset;\n            _this5._nestedChildLists.forEach(function (childList) {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this.__getFrameMetricsApprox(ii, this.props);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n      var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(_View[\"default\"], {\n        style: [styles.debugOverlayBase, styles.debugOverlay]\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(_View[\"default\"], {\n          key: 'f' + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }]\n        });\n      }), React.createElement(_View[\"default\"], {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }]\n      }), React.createElement(_View[\"default\"], {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }]\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEdgeReached\",\n    value: function _maybeCallOnEdgeReached() {\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        getItemCount = _this$props8.getItemCount,\n        onStartReached = _this$props8.onStartReached,\n        onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n        onEndReached = _this$props8.onEndReached,\n        onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n        initialScrollIndex = _this$props8.initialScrollIndex;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromStart = offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n        distanceFromStart = 0;\n      }\n      if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n        distanceFromEnd = 0;\n      }\n      var DEFAULT_THRESHOLD_PX = 2;\n      var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var isWithinStartThreshold = distanceFromStart <= startThreshold;\n      var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n      if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n        if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n          this._sentStartForContentLength = this._scrollMetrics.contentLength;\n          onStartReached({\n            distanceFromStart: distanceFromStart\n          });\n        }\n      } else {\n        this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n        this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state$cellsArou = this.state.cellsAroundViewport,\n        first = _this$state$cellsArou.first,\n        last = _this$state$cellsArou.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      if (first > 0) {\n        var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n        hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n      }\n      if (!hiPri && last >= 0 && last < itemCount - 1) {\n        var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n        hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(props, cellsAroundViewport) {\n      var _this6 = this;\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(props, _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n      });\n    }\n  }], [{\n    key: \"_createRenderMask\",\n    value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n      var itemCount = props.getItemCount(props.data);\n      (0, _invariant[\"default\"])(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n      var renderMask = new _CellRenderMask.CellRenderMask(itemCount);\n      if (itemCount > 0) {\n        var allRegions = [cellsAroundViewport].concat((0, _toConsumableArray2[\"default\"])(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : []));\n        for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n          var region = _allRegions[_i2];\n          renderMask.addCells(region);\n        }\n        if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n          var initialRegion = VirtualizedList._initialRenderRegion(props);\n          renderMask.addCells(initialRegion);\n        }\n        var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n        VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n      }\n      return renderMask;\n    }\n  }, {\n    key: \"_initialRenderRegion\",\n    value: function _initialRenderRegion(props) {\n      var _props$initialScrollI;\n      var itemCount = props.getItemCount(props.data);\n      var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n      var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n      return {\n        first: firstCellIndex,\n        last: lastCellIndex\n      };\n    }\n  }, {\n    key: \"_ensureClosestStickyHeader\",\n    value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n      var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n      for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n        if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n          renderMask.addCells({\n            first: itemIdx,\n            last: itemIdx\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var itemCount = newProps.getItemCount(newProps.data);\n      if (itemCount === prevState.renderMask.numCells()) {\n        return prevState;\n      }\n      var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n      return {\n        cellsAroundViewport: constrainedCells,\n        renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n      };\n    }\n  }, {\n    key: \"_constrainToItemCount\",\n    value: function _constrainToItemCount(cells, props) {\n      var itemCount = props.getItemCount(props.data);\n      var last = Math.min(itemCount - 1, cells.last);\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n      return {\n        first: (0, _clamp[\"default\"])(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n        last: last\n      };\n    }\n  }]);\n}(_StateSafePureComponent[\"default\"]);\nVirtualizedList.contextType = _VirtualizedListContext.VirtualizedListContext;\nvar styles = _StyleSheet[\"default\"].create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nvar _default = exports[\"default\"] = VirtualizedList;","map":{"version":3,"names":["_createForOfIteratorHelperLoose2","_interopRequireDefault","require","_extends2","_objectSpread2","_RefreshControl","_ScrollView","_View","_StyleSheet","_findNodeHandle","_Batchinator","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizeUtils","_invariant","_nullthrows","React","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","_typeof","has","get","set","_t2","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","__DEV__","process","env","NODE_ENV","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","visibleLength","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","length","VirtualizedList","_StateSafePureCompone","_props","_this2","_classCallCheck2","_this$props$updateCel","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","forEach","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","props","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellLayout","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","getItemCount","data","scrollToIndex","animated","scrollToEnd","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","setState","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemLayout","lastFocusedCellRenderer","focusedCellIndex","itemCount","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_i","_checkProps","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","_this$props3","push","initialRenderRegion","_initialRenderRegion","invertedWheelEventHandler","ev","scrollOffset","target","scrollLeft","scrollTop","scrollLength","scrollWidth","scrollHeight","clientLength","clientWidth","clientHeight","isEventTargetScrollable","delta","deltaX","wheelDeltaX","deltaY","wheelDeltaY","leftoverDelta","min","targetDelta","inverted","getScrollableNode","node","nextScrollLeft","nextScrollTop","preventDefault","_inherits2","_createClass2","value","params","veryLast","scrollTo","console","warn","x","y","_this$props","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props2","_index","scrollToOffset","flashScrollIndicators","getScrollResponder","getScrollRef","_getCellKey","_this$context","hasMore","__isNative","flexWrap","flatStyles","flatten","contentContainerStyle","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","abs","EPSILON","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","_this3","addEventListener","setTimeout","removeEventListener","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","_ref","onCellLayout","nestedContext","keyExtractor","String","type","displayName","render","_this4","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","styles","horizontallyInverted","verticallyInverted","Set","_element","isValidElement","VirtualizedListCellContextProvider","style","ListHeaderComponentStyle","_element2","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","isSpacer","_iterator","_step","done","section","isLastSpacer","constrainToMeasured","firstMetrics","lastMetrics","spacerSize","_defineProperty2","_element3","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this5","measureLayout","scrollMetrics","metricsChanged","error","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","schedule","_this6","onUpdate","additionalRegions","CellRenderMask","allRegions","concat","_toConsumableArray2","_i2","_allRegions","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","numCells","constrainedCells","contextType","VirtualizedListContext","create","transform","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","_default","exports"],"sources":["C:/Users/vanma/StudioProjects/ToneShift/toneshift-frontend/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport Batchinator from '../Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../infoLog';\nimport { CellRenderMask } from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from '../FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from '../ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport invariant from 'fbjs/lib/invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\n\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params) {\n    var _this$props = this.props,\n      data = _this$props.data,\n      horizontal = _this$props.horizontal,\n      getItemCount = _this$props.getItemCount,\n      getItemLayout = _this$props.getItemLayout,\n      onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n      index = params.index,\n      viewOffset = params.viewOffset,\n      viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n      data = _this$props2.data,\n      getItem = _this$props2.getItem,\n      getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params) {\n    var animated = params.animated,\n      offset = params.offset;\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  _getCellKey() {\n    var _this$context;\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n  constructor(_props) {\n    var _this$props$updateCel;\n    super(_props);\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n    this._registerAsNestedChild = childList => {\n      this._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.remove(childList.ref);\n    };\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n    this._averageCellLength = 0;\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasTriggeredInitialScrollToIndex = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._lastFocusedCellKey = null;\n    this._nestedChildLists = new ChildListCollection();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    this._scrollRef = null;\n    this._sentStartForContentLength = 0;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          // $FlowFixMe[incompatible-use]\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl\n            // $FlowFixMe[incompatible-type]\n            , {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n    this._onCellLayout = (e, cellKey, index) => {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n      this._triggerRemeasureForChildListsInCell(cellKey);\n      this._computeBlankness();\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    };\n    this._onCellUnmount = cellKey => {\n      delete this._cellRefs[cellKey];\n      var curr = this._frames[cellKey];\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n      this.props.onLayout && this.props.onLayout(e);\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasTriggeredInitialScrollToIndex) {\n        if (this.props.contentOffset == null) {\n          if (this.props.initialScrollIndex < this.props.getItemCount(this.props.data)) {\n            this.scrollToIndex({\n              animated: false,\n              index: nullthrows(this.props.initialScrollIndex)\n            });\n          } else {\n            this.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        this._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList;\n      // Child's visible length is the same as its parent's\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScroll(e);\n      });\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - this._scrollMetrics.offset;\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      // For invalid negative values (w/ RTL), set this to 1.\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength,\n        zoomScale\n      };\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      if (!this.props) {\n        return;\n      }\n      this._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n      this._computeBlankness();\n      this._scheduleCellsToRenderUpdate();\n    };\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollBeginDrag(e);\n      });\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n      this._computeBlankness();\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollBegin(e);\n      });\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollEnd(e);\n      });\n      this._scrollMetrics.velocity = 0;\n      this._computeBlankness();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this._updateCellsToRender = () => {\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      this.setState((state, props) => {\n        var cellsAroundViewport = this._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, this._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport,\n          renderMask\n        };\n      });\n    };\n    this._createViewToken = (index, isViewable, props\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index, props),\n        isViewable\n      };\n    };\n    this._getOffsetApprox = (index, props) => {\n      if (Number.isInteger(index)) {\n        return this.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = this.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    this.__getFrameMetricsApprox = (index, props) => {\n      var frame = this._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n    this._getFrameMetrics = (index, props) => {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = this._frames[this._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n           * suppresses an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    this._getNonViewportRenderRegions = props => {\n      // Keep a viewport's worth of content around the last focused cell to allow\n      // random navigation around it without any blanking. E.g. tabbing from one\n      // focused item out of viewport to another.\n      if (!(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n\n      // The last cell we rendered may be at a new index. Bail if we don't know\n      // where it is.\n      if (focusedCellIndex >= itemCount || this._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== this._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < this._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += this.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first,\n        last\n      }];\n    };\n    this._checkProps(_props);\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else {\n      var _this$props3 = this.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n    this.invertedWheelEventHandler = ev => {\n      var scrollOffset = this.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = this.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = this.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = this.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n        if (this.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !this.props.getItemLayout ? Math.min(nextScrollLeft, this._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !this.props.getItemLayout ? Math.min(nextScrollTop, this._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n  }\n  _checkProps(props) {\n    var onScroll = props.onScroll,\n      windowSize = props.windowSize,\n      getItemCount = props.getItemCount,\n      data = props.data,\n      initialScrollIndex = props.initialScrollIndex;\n    invariant(\n    // $FlowFixMe[prop-missing]\n    !onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    invariant(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n    var itemCount = getItemCount(data);\n    if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n      console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n      this._hasWarned.initialScrollIndex = true;\n    }\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      var flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n  static _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n    var itemCount = props.getItemCount(props.data);\n    invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n    var renderMask = new CellRenderMask(itemCount);\n    if (itemCount > 0) {\n      var allRegions = [cellsAroundViewport, ...(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : [])];\n      for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n        var region = _allRegions[_i2];\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        var initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n    }\n    return renderMask;\n  }\n  static _initialRenderRegion(props) {\n    var _props$initialScrollI;\n    var itemCount = props.getItemCount(props.data);\n    var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n    var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex\n    };\n  }\n  static _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n    var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n    for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({\n          first: itemIdx,\n          last: itemIdx\n        });\n        break;\n      }\n    }\n  }\n  _adjustCellsAroundViewport(props, cellsAroundViewport) {\n    var data = props.data,\n      getItemCount = props.getItemCount;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n    var _this$_scrollMetrics = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics.contentLength,\n      offset = _this$_scrollMetrics.offset,\n      visibleLength = _this$_scrollMetrics.visibleLength;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n    }\n    var newCellsAroundViewport;\n    if (props.disableVirtualization) {\n      var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n      };\n    } else {\n      // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n      // So let's wait until we've scrolled the view to the right place. And until then,\n      // we will trust the initialScrollIndex suggestion.\n\n      // Thus, we want to recalculate the windowed render limits if any of the following hold:\n      // - initialScrollIndex is undefined or is 0\n      // - initialScrollIndex > 0 AND scrolling is complete\n      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\n      //   where the list is shorter than the visible area)\n      if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n      invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n    }\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n      newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n    }\n    return newCellsAroundViewport;\n  }\n  _findFirstChildWithMore(first, last) {\n    for (var ii = first; ii <= last; ii++) {\n      var cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, childList => childList.hasMore())) {\n        return ii;\n      }\n    }\n    return null;\n  }\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey\n      });\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.setupWebWheelHandler();\n  }\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        ref: this\n      });\n    }\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.teardownWebWheelHandler();\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    var itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n    var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n    };\n  }\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n    var _this$props4 = this.props,\n      CellRendererComponent = _this$props4.CellRendererComponent,\n      ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n      ListHeaderComponent = _this$props4.ListHeaderComponent,\n      ListItemComponent = _this$props4.ListItemComponent,\n      data = _this$props4.data,\n      debug = _this$props4.debug,\n      getItem = _this$props4.getItem,\n      getItemCount = _this$props4.getItemCount,\n      getItemLayout = _this$props4.getItemLayout,\n      horizontal = _this$props4.horizontal,\n      renderItem = _this$props4.renderItem;\n    var stickyOffset = ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n    var _loop = function _loop() {\n      var item = getItem(data, ii);\n      var key = _this._keyExtractor(item, ii, _this.props);\n      _this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n      cells.push(/*#__PURE__*/React.createElement(CellRenderer, _extends({\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        ListItemComponent: ListItemComponent,\n        cellKey: key,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onCellFocusCapture: e => _this._onCellFocusCapture(key),\n        onUnmount: _this._onCellUnmount,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        },\n        renderItem: renderItem\n      }, shouldListenForLayout && {\n        onCellLayout: _this._onCellLayout\n      })));\n      prevCellKey = key;\n    };\n    for (var ii = first; ii <= last; ii++) {\n      _loop();\n    }\n  }\n  static _constrainToItemCount(cells, props) {\n    var itemCount = props.getItemCount(props.data);\n    var last = Math.min(itemCount - 1, cells.last);\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last\n    };\n  }\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n  _keyExtractor(item, index, props\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n    var key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n  render() {\n    this._checkProps(this.props);\n    var _this$props5 = this.props,\n      ListEmptyComponent = _this$props5.ListEmptyComponent,\n      ListFooterComponent = _this$props5.ListFooterComponent,\n      ListHeaderComponent = _this$props5.ListHeaderComponent;\n    var _this$props6 = this.props,\n      data = _this$props6.data,\n      horizontal = _this$props6.horizontal;\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      var _element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push(/*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: [inversionStyle, this.props.ListHeaderComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element)));\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    var itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n      cells.push(/*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-empty',\n        key: \"$empty\"\n      }, /*#__PURE__*/React.cloneElement(_element2, {\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n          if (_element2.props.onLayout) {\n            _element2.props.onLayout(event);\n          }\n        },\n        style: [inversionStyle, _element2.props.style]\n      })));\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = this._getSpacerKey(!horizontal);\n      var renderRegions = this.state.renderMask.enumerateRegions();\n      var lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n      for (var _iterator = _createForOfIteratorHelperLoose(renderRegions), _step; !(_step = _iterator()).done;) {\n        var section = _step.value;\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          var isLastSpacer = section === lastSpacer;\n          var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n          var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n          var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(/*#__PURE__*/React.createElement(View, {\n            key: \"$spacer-\" + section.first,\n            style: {\n              [spacerKey]: spacerSize\n            }\n          }));\n        } else {\n          this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n        }\n      }\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      var _element3 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n      cells.push(/*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: [inversionStyle, this.props.ListFooterComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element3)));\n    }\n\n    // 4. Render the ScrollView\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props7 = this.props,\n      data = _this$props7.data,\n      extraData = _this$props7.extraData;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    var hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n\n  // flag to prevent infinite hiPri cell limit update\n\n  // $FlowFixMe[missing-local-annot]\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n\n  _onCellFocusCapture(cellKey) {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  }\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n\n          // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n          this._nestedChildLists.forEach(childList => {\n            childList.measureLayoutRelativeToContainingList();\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n    var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n  _maybeCallOnEdgeReached() {\n    var _this$props8 = this.props,\n      data = _this$props8.data,\n      getItemCount = _this$props8.getItemCount,\n      onStartReached = _this$props8.onStartReached,\n      onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n      onEndReached = _this$props8.onEndReached,\n      onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n      initialScrollIndex = _this$props8.initialScrollIndex;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics2.contentLength,\n      visibleLength = _this$_scrollMetrics2.visibleLength,\n      offset = _this$_scrollMetrics2.offset;\n    var distanceFromStart = offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    var DEFAULT_THRESHOLD_PX = 2;\n    var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var isWithinStartThreshold = distanceFromStart <= startThreshold;\n    var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n      // On initial mount when using initialScrollIndex the offset will be 0 initially\n      // and will trigger an unexpected onStartReached. To avoid this we can use\n      // timestamp to differentiate between the initial scroll metrics and when we actually\n      // received the first scroll event.\n      if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n        this._sentStartForContentLength = this._scrollMetrics.contentLength;\n        onStartReached({\n          distanceFromStart\n        });\n      }\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    else {\n      this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n      this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n    }\n  }\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n\n  _scheduleCellsToRenderUpdate() {\n    var _this$state$cellsArou = this.state.cellsAroundViewport,\n      first = _this$state$cellsArou.first,\n      last = _this$state$cellsArou.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n      offset = _this$_scrollMetrics3.offset,\n      visibleLength = _this$_scrollMetrics3.visibleLength,\n      velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n      hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  /**\n   * Gets an approximate offset to an item at a given index. Supports\n   * fractional indices.\n   */\n\n  _updateViewableItems(props, cellsAroundViewport) {\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(props, this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n    });\n  }\n}\nVirtualizedList.contextType = VirtualizedListContext;\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}