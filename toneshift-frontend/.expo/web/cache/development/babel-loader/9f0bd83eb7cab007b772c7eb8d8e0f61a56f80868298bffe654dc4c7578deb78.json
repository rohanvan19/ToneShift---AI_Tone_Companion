{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { UnavailabilityError } from 'expo-modules-core';\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport ExpoFontUtils from './ExpoFontUtils';\nexport function renderToImageAsync(_x, _x2) {\n  return _renderToImageAsync.apply(this, arguments);\n}\nfunction _renderToImageAsync() {\n  _renderToImageAsync = _asyncToGenerator(function* (glyphs, options) {\n    if (!ExpoFontUtils) {\n      throw new UnavailabilityError('expo-font', 'ExpoFontUtils.renderToImageAsync');\n    }\n    return yield ExpoFontUtils.renderToImageAsync(glyphs, _objectSpread(_objectSpread({}, options), {}, {\n      color: options != null && options.color ? processColor(options.color) : undefined\n    }));\n  });\n  return _renderToImageAsync.apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","processColor","ExpoFontUtils","renderToImageAsync","_x","_x2","_renderToImageAsync","apply","arguments","_asyncToGenerator","glyphs","options","_objectSpread","color","undefined"],"sources":["C:\\Users\\vanma\\StudioProjects\\ToneShift\\toneshift-frontend\\node_modules\\expo-font\\src\\FontUtils.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { processColor } from 'react-native';\n\nimport ExpoFontUtils from './ExpoFontUtils';\nimport { RenderToImageOptions } from './FontUtils.types';\n\n/**\n * Creates an image with provided text.\n * @param glyphs Text to be exported.\n * @param options RenderToImageOptions.\n * @return Promise which fulfils with uri to image.\n * @platform android\n * @platform ios\n */\nexport async function renderToImageAsync(\n  glyphs: string,\n  options?: RenderToImageOptions\n): Promise<string> {\n  if (!ExpoFontUtils) {\n    throw new UnavailabilityError('expo-font', 'ExpoFontUtils.renderToImageAsync');\n  }\n\n  return await ExpoFontUtils.renderToImageAsync(glyphs, {\n    ...options,\n    color: options?.color ? processColor(options.color) : undefined,\n  });\n}\n"],"mappings":";;;;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAAC,OAAAC,YAAA;AAGxD,OAAOC,aAAa,MAAM,iBAAiB;AAW3C,gBAAsBC,kBAAkBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAYvC,SAAAF,oBAAA;EAAAA,mBAAA,GAAAG,iBAAA,CAZM,WACLC,MAAc,EACdC,OAA8B;IAE9B,IAAI,CAACT,aAAa,EAAE;MAClB,MAAM,IAAIF,mBAAmB,CAAC,WAAW,EAAE,kCAAkC,CAAC;IAChF;IAEA,aAAaE,aAAa,CAACC,kBAAkB,CAACO,MAAM,EAAAE,aAAA,CAAAA,aAAA,KAC/CD,OAAO;MACVE,KAAK,EAAEF,OAAO,YAAPA,OAAO,CAAEE,KAAK,GAAGZ,YAAY,CAACU,OAAO,CAACE,KAAK,CAAC,GAAGC;IAAS,EAChE,CAAC;EACJ,CAAC;EAAA,OAAAR,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}